{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/exam",
      "destination": "/mock",
      "statusCode": 308,
      "regex": "^(?!/_next)/exam(?:/)?$"
    }
  ],
  "headers": [
    {
      "source": "/(.*)",
      "headers": [
        {
          "key": "X-Content-Type-Options",
          "value": "nosniff"
        },
        {
          "key": "Referrer-Policy",
          "value": "no-referrer-when-downgrade"
        },
        {
          "key": "X-Frame-Options",
          "value": "SAMEORIGIN"
        },
        {
          "key": "Permissions-Policy",
          "value": "geolocation=(), microphone=(), camera=()"
        },
        {
          "key": "Content-Security-Policy",
          "value": "default-src 'self'; base-uri 'self'; frame-ancestors 'self'; object-src 'none'; form-action 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://browser.sentry-cdn.com https://www.youtube.com https://app.posthog.com https://us.i.posthog.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob: https://i.ytimg.com https://img.youtube.com; connect-src 'self' https://qnwcwoutgarhqxlgsjzs.supabase.co https://*.supabase.co wss://*.supabase.co https://us.i.posthog.com https://*.posthog.com https://sentry.io https://*.sentry.io; frame-src https://www.youtube.com https://www.youtube-nocookie.com; font-src 'self' data:; worker-src 'self' blob:"
        }
      ],
      "regex": "^(?:/(.*))(?:/)?$"
    },
    {
      "source": "/sw.js",
      "headers": [
        {
          "key": "Cache-Control",
          "value": "public, max-age=0, must-revalidate"
        }
      ],
      "regex": "^/sw\\.js(?:/)?$"
    }
  ],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/domains/[domain]",
      "regex": "^/domains/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPdomain": "nxtPdomain"
      },
      "namedRegex": "^/domains/(?<nxtPdomain>[^/]+?)(?:/)?$"
    },
    {
      "page": "/learn/[slug]",
      "regex": "^/learn/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/learn/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/modules/[slug]",
      "regex": "^/modules/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/modules/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/study/[domain]",
      "regex": "^/study/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPdomain": "nxtPdomain"
      },
      "namedRegex": "^/study/(?<nxtPdomain>[^/]+?)(?:/)?$"
    },
    {
      "page": "/videos/[slug]",
      "regex": "^/videos/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/videos/(?<nxtPslug>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/admin/questions",
      "regex": "^/admin/questions(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/questions(?:/)?$"
    },
    {
      "page": "/analytics",
      "regex": "^/analytics(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/analytics(?:/)?$"
    },
    {
      "page": "/analytics/events",
      "regex": "^/analytics/events(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/analytics/events(?:/)?$"
    },
    {
      "page": "/assessments",
      "regex": "^/assessments(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/assessments(?:/)?$"
    },
    {
      "page": "/auth",
      "regex": "^/auth(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth(?:/)?$"
    },
    {
      "page": "/auth/signin",
      "regex": "^/auth/signin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/signin(?:/)?$"
    },
    {
      "page": "/auth/signup",
      "regex": "^/auth/signup(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/signup(?:/)?$"
    },
    {
      "page": "/beginner",
      "regex": "^/beginner(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/beginner(?:/)?$"
    },
    {
      "page": "/daily-review",
      "regex": "^/daily\\-review(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/daily\\-review(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/drills",
      "regex": "^/drills(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/drills(?:/)?$"
    },
    {
      "page": "/exam",
      "regex": "^/exam(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/exam(?:/)?$"
    },
    {
      "page": "/guides",
      "regex": "^/guides(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/guides(?:/)?$"
    },
    {
      "page": "/kb",
      "regex": "^/kb(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/kb(?:/)?$"
    },
    {
      "page": "/labs",
      "regex": "^/labs(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/labs(?:/)?$"
    },
    {
      "page": "/learn",
      "regex": "^/learn(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/learn(?:/)?$"
    },
    {
      "page": "/learn/query-builder",
      "regex": "^/learn/query\\-builder(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/learn/query\\-builder(?:/)?$"
    },
    {
      "page": "/lighthouse-test",
      "regex": "^/lighthouse\\-test(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/lighthouse\\-test(?:/)?$"
    },
    {
      "page": "/mdx-test",
      "regex": "^/mdx\\-test(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/mdx\\-test(?:/)?$"
    },
    {
      "page": "/mock",
      "regex": "^/mock(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/mock(?:/)?$"
    },
    {
      "page": "/mock-exam",
      "regex": "^/mock\\-exam(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/mock\\-exam(?:/)?$"
    },
    {
      "page": "/modules",
      "regex": "^/modules(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/modules(?:/)?$"
    },
    {
      "page": "/modules/server",
      "regex": "^/modules/server(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/modules/server(?:/)?$"
    },
    {
      "page": "/notes",
      "regex": "^/notes(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/notes(?:/)?$"
    },
    {
      "page": "/perf-test",
      "regex": "^/perf\\-test(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/perf\\-test(?:/)?$"
    },
    {
      "page": "/practice",
      "regex": "^/practice(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/practice(?:/)?$"
    },
    {
      "page": "/pricing",
      "regex": "^/pricing(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/pricing(?:/)?$"
    },
    {
      "page": "/profile",
      "regex": "^/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/profile(?:/)?$"
    },
    {
      "page": "/progress",
      "regex": "^/progress(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/progress(?:/)?$"
    },
    {
      "page": "/review",
      "regex": "^/review(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/review(?:/)?$"
    },
    {
      "page": "/search",
      "regex": "^/search(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/search(?:/)?$"
    },
    {
      "page": "/settings",
      "regex": "^/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/settings(?:/)?$"
    },
    {
      "page": "/simple",
      "regex": "^/simple(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/simple(?:/)?$"
    },
    {
      "page": "/simulator",
      "regex": "^/simulator(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/simulator(?:/)?$"
    },
    {
      "page": "/study",
      "regex": "^/study(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/study(?:/)?$"
    },
    {
      "page": "/study/review",
      "regex": "^/study/review(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/study/review(?:/)?$"
    },
    {
      "page": "/team",
      "regex": "^/team(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/team(?:/)?$"
    },
    {
      "page": "/test",
      "regex": "^/test(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test(?:/)?$"
    },
    {
      "page": "/test-db",
      "regex": "^/test\\-db(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-db(?:/)?$"
    },
    {
      "page": "/test-mdx",
      "regex": "^/test\\-mdx(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-mdx(?:/)?$"
    },
    {
      "page": "/test-minimal",
      "regex": "^/test\\-minimal(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-minimal(?:/)?$"
    },
    {
      "page": "/videos",
      "regex": "^/videos(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/videos(?:/)?$"
    },
    {
      "page": "/videos/admin",
      "regex": "^/videos/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/videos/admin(?:/)?$"
    },
    {
      "page": "/welcome",
      "regex": "^/welcome(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/welcome(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}