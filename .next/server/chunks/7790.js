"use strict";exports.id=7790,exports.ids=[7790],exports.modules={40392:(a,b,c)=>{c.d(b,{A:()=>e});var d=c(75338);function e({title:a,children:b}){return(0,d.jsxs)("aside",{className:"rounded-md border border-gray-200 bg-gray-50 p-4",children:[a&&(0,d.jsx)("div",{className:"mb-2 font-semibold",children:a}),(0,d.jsx)("div",{children:b})]})}c(74515)},87790:(a,b,c)=>{c.r(b),c.d(b,{default:()=>j,meta:()=>h});var d=c(75338),e=c(89301),f=c(40392),g=c(73216);let h={id:"tco-asking-questions",title:"Asking Questions",objectives:4,domainSlug:"asking-questions"};function i(a){let b={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,e.R)(),...a.components},{ModuleTransition:c,QueryPlayground:h}=b;return c||k("ModuleTransition",!0),h||k("QueryPlayground",!0),(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.p,{children:'id: "tco-asking-questions"\ntitle: "Asking Questions"\ndomainSlug: "asking-questions"\ndomainEnum: ASKING_QUESTIONS\ndifficulty: "Beginner"\nestimatedTime: "45 min"\nblueprintWeight: 0.22\ndescription: "Master the art of querying in Tanium - learn natural language query construction, sensor mastery, and saved question management."\ntags: ["queries", "sensors", "natural-language", "saved-questions"]\nlastUpdated: "2024-09-05"\nversion: 1\nstatus: published'}),"\n",(0,d.jsx)(b.h1,{children:'author: "TCO Study Platform" # This field is not in the schema'}),"\n",(0,d.jsx)(b.h1,{children:"objectives: 4 # This field is not in the schema - moved to meta export"}),"\n",(0,d.jsx)(b.p,{children:"objectives:"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'"Construct effective natural language queries in the Tanium console"'}),"\n",(0,d.jsx)(b.li,{children:'"Master the 500+ built-in sensors and create custom sensors"'}),"\n",(0,d.jsx)(b.li,{children:'"Manage saved questions lifecycle and sharing workflows"'}),"\n",(0,d.jsx)(b.li,{children:'"Interpret query results and troubleshoot performance issues"'}),"\n"]}),"\n",(0,d.jsx)(b.hr,{}),"\n","\n","\n",(0,d.jsx)(b.h1,{children:"Asking Questions: Foundation of Tanium Operations"}),"\n",(0,d.jsx)(b.h2,{children:"\uD83C\uDFAF Domain Overview"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Domain Weight"}),": 22% of TAN-1000 exam | ",(0,d.jsx)(b.strong,{children:"Difficulty"}),": Beginner to Intermediate"]}),"\n",(0,d.jsx)(b.p,{children:'The "Asking Questions" domain forms the foundation of all Tanium operations. Every administrative task, security investigation, and system management action begins with asking the right question in the right way.'}),"\n",(0,d.jsx)(b.h2,{children:"\uD83E\uDDE0 Core Concepts"}),"\n",(0,d.jsx)(b.h3,{children:"Natural Language Query Construction"}),"\n",(0,d.jsxs)(b.p,{children:["Tanium's revolutionary approach uses ",(0,d.jsx)(b.strong,{children:"natural language processing"})," to convert human-readable questions into powerful system queries."]}),"\n",(0,d.jsx)(f.A,{title:"Key Insight",children:(0,d.jsxs)(b.p,{children:["The Tanium question format follows: ",(0,d.jsx)(b.strong,{children:"Get [sensor] from [targets] where [filters]"})]})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Example Query Patterns"}),":"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:(0,d.jsx)(b.code,{children:"Get Computer Name from all machines"})}),"\n",(0,d.jsx)(b.li,{children:(0,d.jsx)(b.code,{children:'Get Running Services from all machines where IP Address contains "192.168"'})}),"\n",(0,d.jsx)(b.li,{children:(0,d.jsx)(b.code,{children:'Get Installed Applications from all machines where Computer Name contains "SERVER"'})}),"\n"]}),"\n",(0,d.jsx)(h,{title:"Practice: Basic Query",instruction:"Try getting the computer names from all machines. This is the most fundamental Tanium query.",expectedQuery:"Get Computer Name from all machines",expectedResult:"DESKTOP-ABC123\nLAPTOP-XYZ789\nSERVER-PROD01\nWORKSTATION-DEV42\n... (showing 100 of 5,432 results)",hint:"Start with 'Get Computer Name' and end with 'from all machines'",difficulty:"beginner"}),"\n",(0,d.jsx)(h,{title:"Practice: Query with Filter",instruction:"Get the Operating System from machines that have 'SERVER' in their name.",expectedQuery:"Get Operating System from all machines where Computer Name contains SERVER",expectedResult:"Windows Server 2019 Standard\nWindows Server 2022 Datacenter\nWindows Server 2016 Standard\n... (showing 50 of 287 results)",hint:"Use 'where Computer Name contains' to filter",difficulty:"beginner"}),"\n",(0,d.jsx)(b.h3,{children:"The 500+ Sensor Library"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Built-in Sensors"})," provide immediate access to system information:"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"System Sensors"}),": Computer Name, IP Address, Operating System, Uptime"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Security Sensors"}),": Running Processes, Open Ports, User Rights, Services"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Application Sensors"}),": Installed Applications, Running Applications, Browser Extensions"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Hardware Sensors"}),": CPU Usage, Memory Usage, Disk Space, Network Interface"]}),"\n"]}),"\n",(0,d.jsx)(f.A,{title:"Pro Tip",children:(0,d.jsxs)(b.p,{children:["Use the ",(0,d.jsx)(b.strong,{children:"Sensor Library"})," to explore available sensors and understand their parameters before\nconstructing queries."]})}),"\n",(0,d.jsx)(b.h3,{children:"Custom Sensor Creation"}),"\n",(0,d.jsxs)(b.p,{children:["When built-in sensors don't meet your needs, create ",(0,d.jsx)(b.strong,{children:"custom sensors"}),":"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-bash",children:'# Example: Custom Registry Sensor\nSensor Name: Custom Registry Check\nPlatform: Windows\nScript: reg query "HKEY_LOCAL_MACHINE\\SOFTWARE\\MyApp" /v Version 2>nul\n'})}),"\n",(0,d.jsx)(h,{title:"Practice: Hardware Query",instruction:"Query for disk space information from all machines.",expectedQuery:"Get Disk Space from all machines",expectedResult:"C:\\ - 45GB Free of 250GB Total (18%)\nC:\\ - 120GB Free of 500GB Total (24%)\nC:\\ - 8GB Free of 120GB Total (7%)\nD:\\ - 900GB Free of 1TB Total (90%)\n... (showing disk info for all machines)",hint:"Use the 'Disk Space' sensor",difficulty:"beginner"}),"\n",(0,d.jsx)(h,{title:"Practice: Security Query",instruction:"Find all machines that have Chrome running.",expectedQuery:"Get Computer Name from all machines where Running Applications contains chrome",expectedResult:"DESKTOP-ABC123\nLAPTOP-XYZ789\nWORKSTATION-DEV42\nDESKTOP-FINANCE01\n... (showing 2,341 of 5,432 machines with Chrome running)",hint:"Use 'Running Applications contains chrome' as your filter",difficulty:"intermediate"}),"\n",(0,d.jsx)(b.h2,{children:"\uD83C\uDFAE Interactive Learning"}),"\n",(0,d.jsx)(g.default,{type:"flashcard",title:"Query Construction Practice",difficulty:"beginner",estimatedTime:"10 minutes",children:(0,d.jsx)(b.p,{children:"Master basic query patterns with interactive flashcards"})}),"\n",(0,d.jsx)(b.h2,{children:"\uD83D\uDCCA Saved Question Management"}),"\n",(0,d.jsx)(b.h3,{children:"Creation and Deployment"}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Create"}),": Construct and test your query"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Validate"}),": Ensure query returns expected results"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Save"}),": Store with descriptive metadata"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Share"}),": Deploy to appropriate user groups"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Monitor"}),": Track usage and performance"]}),"\n"]}),"\n",(0,d.jsx)(b.h3,{children:"Best Practices"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Descriptive Names"}),": Use clear, searchable naming conventions"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Documentation"}),": Add context and usage instructions"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": Monitor execution time and resource usage"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Lifecycle"}),": Regular review and cleanup of unused questions"]}),"\n"]}),"\n",(0,d.jsx)(b.h2,{children:"\uD83D\uDD27 Hands-On Lab Preview"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"LAB-AQ-001: Natural Language Query Construction (12 minutes)"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Practice essential query patterns"}),"\n",(0,d.jsx)(b.li,{children:"Explore sensor parameters and filtering"}),"\n",(0,d.jsx)(b.li,{children:"Validate query performance and accuracy"}),"\n"]}),"\n",(0,d.jsx)(b.h2,{children:"✅ Key Takeaways"}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Natural Language"}),": Tanium queries use intuitive human language patterns"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Sensor Mastery"}),": Understanding the 500+ sensors is crucial for effective querying"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Custom Solutions"}),": Create custom sensors when built-in options are insufficient"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Question Lifecycle"}),": Proper management ensures scalable, maintainable query operations"]}),"\n"]}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Next Module"}),": ",(0,d.jsx)(b.a,{href:"/modules/refining-questions-targeting",children:"Refining Questions & Targeting"})," - Learn advanced targeting and filtering techniques"]}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.h2,{children:"Sensor Deep Dive: Practical Coverage and Examples"}),"\n",(0,d.jsx)(f.A,{title:"Goal of this section",children:(0,d.jsx)(b.p,{children:"Build practical intuition for which sensor to use, what it returns, and how to pair it\nwith filters and targets to answer real-world questions quickly."})}),"\n",(0,d.jsx)(b.h3,{children:"System Information Sensors (15 with examples)"}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Computer Name — Unique endpoint identifier"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get Computer Name from all machines"}),"\n",(0,d.jsx)(b.li,{children:'Example: Get Computer Name from all machines where Computer Name contains "WKS-"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Operating System — OS family and version"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get Operating System from all machines"}),"\n",(0,d.jsx)(b.li,{children:'Example: Get Operating System from all machines where Operating System contains "Windows 11"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"OS Platform — Normalized platform categorization"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get OS Platform from all machines"}),"\n",(0,d.jsx)(b.li,{children:'Example: Get Computer Name, OS Platform from all machines where OS Platform = "Windows"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Uptime — Time since last reboot"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get Uptime from all machines"}),"\n",(0,d.jsx)(b.li,{children:"Example: Get Computer Name, Uptime from all machines where Uptime > 7 days"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"IP Address — Primary address(es)"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get IP Address from all machines"}),"\n",(0,d.jsx)(b.li,{children:'Example: Get Computer Name, IP Address from all machines where IP Address contains "10.10."'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"MAC Address — Hardware interface addresses"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get MAC Address from all machines"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Logged In User — Current interactive user"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get Logged In User from all machines"}),"\n",(0,d.jsx)(b.li,{children:'Example: Get Computer Name from all machines where Logged In User contains "admin"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Last Reboot — Timestamp of last restart"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Last Reboot from all machines where OS Platform = "Windows"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Computer Serial Number — Hardware serial for inventory"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get Computer Serial Number from all machines"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"BIOS Version — Firmware baseline"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get BIOS Version from all machines where Manufacturer contains "Dell"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Chassis Type — Form factor cues"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Chassis Type from all machines where Chassis Type = "Laptop"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Domain — AD domain membership"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Domain from all machines where Domain contains "CORP"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Last Logged In User — Audit perspective"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Computer Name, Last Logged In User from all machines where Last Logged In User contains "svc_"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Time Zone — Regional context"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Computer Name, Time Zone from all machines where Time Zone contains "UTC"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Tanium Client Version — Fleet hygiene"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Tanium Client Version from all machines where Tanium Client Version < "7.5.0"'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(f.A,{title:"Pattern",children:(0,d.jsx)(b.p,{children:"For inventory-style questions, return 1–3 high-signal fields (Computer Name + sensor) and\nconstrain early with platform or business unit to improve performance."})}),"\n",(0,d.jsx)(b.h3,{children:"Security Sensors (15 with examples)"}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Running Processes — Active processes on endpoint"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Running Processes from all machines where Running Processes contains "powershell.exe"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Services — Installed services and states"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Services from all machines where Services contains "Tanium Client"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Listening Ports — Network exposure baseline"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Listening Ports from all machines where Listening Ports contains ":3389"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Local Administrators — Privileged local users"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Local Administrators from all machines where Local Administrators contains "domain admins"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Installed Patches — Patch state snapshot"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Installed Patches from all machines where Installed Patches contains "KB5030219"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Antivirus Status — Protection baseline"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Antivirus Status from all machines where Antivirus Status contains "disabled"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Firewall State — Host firewall posture"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Firewall State from all machines where Firewall State = "Off"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Last Logged On Users — Historical user access"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Last Logged On Users from all machines where Last Logged On Users contains "temp"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Scheduled Tasks — Persistence vectors"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Scheduled Tasks from all machines where Scheduled Tasks contains "\\x1f" (suspicious)'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Startup Items — Autostart entries"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Startup Items from all machines where Startup Items contains "unknown.exe"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"OS Build Number — Patch rung differentiation"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Computer Name, OS Build Number from all machines where OS Build Number < "22621"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Disk Encryption Status — Data at rest protection"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Disk Encryption Status from all machines where Disk Encryption Status != "Enabled"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Secure Boot State — Firmware security"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Secure Boot State from all machines where Secure Boot State != "On"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Local Group Policy Settings — Hardened configurations"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get Local Group Policy Settings from all machines where ..."}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Browser Extensions — Potential risk surface"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Browser Extensions from all machines where Browser Extensions contains "password"'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(f.A,{title:"Triage tip",children:(0,d.jsx)(b.p,{children:"Start with indicator-of-compromise sensors (process, ports, autoruns), pivot into user context,\nthen inspect persistence and policy state. Keep a rollback cohort ready."})}),"\n",(0,d.jsx)(b.h3,{children:"Performance Sensors (10 with examples)"}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"CPU Utilization — Point-in-time CPU load"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get Computer Name, CPU Utilization from all machines where CPU Utilization > 85"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Memory Utilization — Working set pressure"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get Memory Utilization from all machines where Memory Utilization > 90"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Disk Space — Free space health"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get Disk Space from all machines where Disk Space < 10 GB"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Disk Queue Length — Storage contention"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get Disk Queue Length from all machines where Disk Queue Length > 2"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Network Utilization — Egress/ingress pressure"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get Network Utilization from all machines where Network Utilization > 80"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Top Processes by CPU — Noisy neighbors"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Top Processes by CPU from all machines where OS Platform = "Windows"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Top Processes by Memory — Memory hog identification"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get Top Processes by Memory from all machines where Memory Utilization > 85"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Page File Usage — Virtual memory pressure"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get Page File Usage from all machines where Page File Usage > 75"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"System Uptime Buckets — Correlate with leaks"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get System Uptime Buckets from all machines where Uptime > 14 days"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"GPU Utilization — Graphics workloads"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get GPU Utilization from all machines where GPU Utilization > 70"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(b.h3,{children:"Hardware/Inventory Sensors (10 with examples)"}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Manufacturer"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Manufacturer from all machines where Manufacturer = "Dell"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-CimInstance Win32_ComputerSystem | Select-Object Manufacturer"})]}),"\n",(0,d.jsx)(b.li,{children:"Performance: Fast (WMI cache friendly)"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Model"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Computer Name, Model from all machines where Model contains "Precision"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-CimInstance Win32_ComputerSystem | Select-Object Model"})]}),"\n",(0,d.jsx)(b.li,{children:"Use case: Asset management, driver compatibility"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"CPU Model"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get CPU Model from all machines where CPU Model contains "i7"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-CimInstance Win32_Processor | Select-Object Name"})]}),"\n",(0,d.jsx)(b.li,{children:"Performance tip: Single query for CPU inventory vs per-core details"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Physical Memory"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get Physical Memory from all machines where Physical Memory < 8 GB"}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-CimInstance Win32_PhysicalMemory | Measure-Object Capacity -Sum | ForEach-Object {[math]::Round($_.Sum/1GB,2)}"})]}),"\n",(0,d.jsx)(b.li,{children:"Threshold alerts: <8GB (low), <16GB (medium), 32GB+ (high-spec)"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Disk Model / Size"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Disk Model from all machines where Disk Model contains "SSD"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-CimInstance Win32_DiskDrive | Select-Object Model, Size"})]}),"\n",(0,d.jsx)(b.li,{children:"SSD vs HDD performance impact analysis"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Network Adapter"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Network Adapter from all machines where Network Adapter contains "Intel"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-CimInstance Win32_NetworkAdapter | Where-Object {$_.PhysicalAdapter} | Select-Object Name"})]}),"\n",(0,d.jsx)(b.li,{children:"Driver compatibility and security assessments"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Battery Health (laptops)"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get Battery Health from all machines where Battery Health < 70"}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-CimInstance Win32_Battery | Select-Object EstimatedChargeRemaining"})]}),"\n",(0,d.jsx)(b.li,{children:"Mobile workforce health monitoring"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Display Adapter"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Display Adapter from all machines where Display Adapter contains "NVIDIA"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-CimInstance Win32_VideoController | Select-Object Name"})]}),"\n",(0,d.jsx)(b.li,{children:"Graphics workload optimization"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Docking State (where available)"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Docking State from laptops where Docking State = "Docked"'}),"\n",(0,d.jsx)(b.li,{children:"PowerShell: Custom sensor based on USB/Thunderbolt detection"}),"\n",(0,d.jsx)(b.li,{children:"Hybrid work policy compliance"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Asset Tag"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Asset Tag from all machines where Asset Tag contains "NYC"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-CimInstance Win32_SystemEnclosure | Select-Object SMBIOSAssetTag"})]}),"\n",(0,d.jsx)(b.li,{children:"Physical inventory correlation"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(b.h3,{children:"Application and Software Sensors (15 with advanced examples)"}),"\n",(0,d.jsx)(f.A,{title:"Software Inventory Strategy",children:(0,d.jsx)(b.p,{children:"Application sensors are critical for license compliance, security assessments, and standardization.\nUse combination queries to correlate versions, installations, and security posture."})}),"\n",(0,d.jsx)(h,{title:"Practice: Software Inventory",instruction:"Find all machines that have Microsoft Office installed.",expectedQuery:"Get Computer Name from all machines where Installed Applications contains Office",expectedResult:"DESKTOP-ABC123 - Microsoft Office Professional Plus 2019\nLAPTOP-XYZ789 - Microsoft Office 365\nWORKSTATION-DEV42 - Microsoft Office Standard 2016\nSERVER-TERM01 - Microsoft Office 365 ProPlus\n... (showing 3,892 machines with Office installed)",hint:"Use 'Installed Applications contains Office'",difficulty:"beginner"}),"\n",(0,d.jsx)(h,{title:"Practice: Security Software Check",instruction:"Identify machines without antivirus software installed.",expectedQuery:"Get Computer Name from all machines where NOT Installed Applications contains antivirus",expectedResult:"TESTVM-001\nLABMACHINE-42\nDEVBOX-ISOLATED03\nKIOSK-LOBBY01\n... (showing 23 machines without antivirus)",hint:"Use 'NOT' to find machines missing antivirus",difficulty:"intermediate"}),"\n",(0,d.jsx)(h,{title:"Practice: Compliance Check",instruction:"Find Windows 11 machines missing a critical security patch (KB5030219).",expectedQuery:"Get Computer Name from all machines where Operating System contains Windows 11 AND NOT Installed Patches contains KB5030219",expectedResult:"LAPTOP-EXEC04 - Windows 11 Pro\nDESKTOP-FIN08 - Windows 11 Enterprise\nWORKSTATION-IT02 - Windows 11 Pro\nLAPTOP-SALES11 - Windows 11 Home\n... (showing 156 Windows 11 machines missing KB5030219)",hint:"Combine OS check with missing patch using AND and NOT",difficulty:"advanced"}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Installed Applications"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Basic: Get Installed Applications from all machines where Installed Applications contains "Adobe"'}),"\n",(0,d.jsx)(b.li,{children:'Advanced: Get Computer Name, Installed Applications from all machines where Installed Applications contains "Adobe" AND Installed Applications contains "2023"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-ItemProperty HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* | Select-Object DisplayName, DisplayVersion"})]}),"\n",(0,d.jsx)(b.li,{children:"Performance: Expensive on large endpoints, constrain by OS Platform first"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Running Applications"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Basic: Get Running Applications from all machines where Running Applications contains "chrome.exe"'}),"\n",(0,d.jsx)(b.li,{children:'Advanced: Get Computer Name, Running Applications from all machines where Running Applications contains "chrome" AND NOT Running Applications contains "work profile"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-Process | Where-Object {$_.MainWindowTitle} | Select-Object ProcessName, MainWindowTitle"})]}),"\n",(0,d.jsx)(b.li,{children:"Security use: Detect unauthorized software execution"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Application Versions"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Basic: Get Application Versions from all machines where Application Versions contains "Office"'}),"\n",(0,d.jsx)(b.li,{children:'Advanced: Get Computer Name, Application Versions from all machines where Application Versions matches "Office.*365" AND Application Versions contains "16.0"'}),"\n",(0,d.jsxs)(b.li,{children:["Regex pattern: ",(0,d.jsx)(b.code,{children:'"^Office.*16\\.0\\.([0-9]{4,5})\\."'})]}),"\n",(0,d.jsx)(b.li,{children:"License compliance tracking"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Browser Extensions"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Basic: Get Browser Extensions from all machines where Browser Extensions contains "password"'}),"\n",(0,d.jsx)(b.li,{children:'Advanced: Get Computer Name, Browser Extensions from all machines where Browser Extensions contains "ad blocker" OR Browser Extensions contains "VPN"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell Chrome: ",(0,d.jsx)(b.code,{children:'Get-ChildItem "$env:USERPROFILE\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Extensions"'})]}),"\n",(0,d.jsx)(b.li,{children:"Security risk assessment"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Startup Programs"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Basic: Get Startup Programs from all machines where Startup Programs contains "unknown"'}),"\n",(0,d.jsx)(b.li,{children:'Advanced: Get Computer Name, Startup Programs from all machines where Startup Programs contains ".exe" AND NOT Startup Programs contains "Microsoft"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-CimInstance Win32_StartupCommand | Select-Object Name, Command, Location"})]}),"\n",(0,d.jsx)(b.li,{children:"Persistence analysis"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Windows Features"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Windows Features from all machines where Windows Features contains "Hyper-V"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:'Get-WindowsOptionalFeature -Online | Where-Object {$_.State -eq "Enabled"} | Select-Object FeatureName'})]}),"\n",(0,d.jsx)(b.li,{children:"Compliance verification"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Installed Patches"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Basic: Get Installed Patches from all machines where Installed Patches contains "KB5030219"'}),"\n",(0,d.jsx)(b.li,{children:'Advanced: Get Computer Name, Installed Patches from all machines where NOT Installed Patches contains "KB5030219" AND Operating System contains "Windows 11"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-HotFix | Select-Object HotFixID, InstalledOn | Sort-Object InstalledOn -Descending"})]}),"\n",(0,d.jsx)(b.li,{children:"Patch compliance gaps"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Software Certificates"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Software Certificates from all machines where Software Certificates contains "Expired"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-ChildItem Cert:\\LocalMachine\\My | Where-Object {$_.NotAfter -lt (Get-Date)} | Select-Object Subject, NotAfter"})]}),"\n",(0,d.jsx)(b.li,{children:"PKI hygiene monitoring"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Browser Homepage"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Browser Homepage from all machines where Browser Homepage contains "search-redirect"'}),"\n",(0,d.jsx)(b.li,{children:"Security indicator for browser hijacking"}),"\n",(0,d.jsx)(b.li,{children:"PowerShell: Registry-based detection for default browsers"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Default Applications"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Default Applications from all machines where Default Applications contains "unknown"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-ItemProperty HKCU:\\Software\\Microsoft\\Windows\\Shell\\Associations\\UrlAssociations\\http\\UserChoice"})]}),"\n",(0,d.jsx)(b.li,{children:"Configuration drift detection"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Application Dependencies"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Application Dependencies from all machines where Application Dependencies contains ".NET Framework 4.8"'}),"\n",(0,d.jsx)(b.li,{children:"Prerequisite validation for software deployment"}),"\n",(0,d.jsx)(b.li,{children:"PowerShell: Registry + file system dependency checks"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Java Versions"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Basic: Get Java Versions from all machines where Java Versions contains "8"'}),"\n",(0,d.jsx)(b.li,{children:'Advanced: Get Computer Name, Java Versions from all machines where Java Versions matches "1.[8-9]" AND Java Versions contains "security"'}),"\n",(0,d.jsx)(b.li,{children:"Critical for security vulnerability management"}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:'Get-ItemProperty "HKLM:\\SOFTWARE\\JavaSoft\\Java Runtime Environment" | Select-Object CurrentVersion'})]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"PDF Readers"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get PDF Readers from all machines where PDF Readers contains "Adobe Reader"'}),"\n",(0,d.jsx)(b.li,{children:"PowerShell: File association and default application detection"}),"\n",(0,d.jsx)(b.li,{children:"Security risk from vulnerable PDF software"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Antivirus Products"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Basic: Get Antivirus Products from all machines where Antivirus Products contains "Windows Defender"'}),"\n",(0,d.jsx)(b.li,{children:'Advanced: Get Computer Name, Antivirus Products from all machines where Antivirus Products contains "disabled" OR Antivirus Products contains "expired"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-CimInstance -Namespace root\\SecurityCenter2 -ClassName AntiVirusProduct"})]}),"\n",(0,d.jsx)(b.li,{children:"Security posture validation"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"PowerShell Execution Policy"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get PowerShell Execution Policy from all machines where PowerShell Execution Policy = "Unrestricted"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-ExecutionPolicy -List | Select-Object Scope, ExecutionPolicy"})]}),"\n",(0,d.jsx)(b.li,{children:"Security configuration baseline"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(b.h3,{children:"Advanced Network and Security Sensors (20 comprehensive examples)"}),"\n",(0,d.jsx)(f.A,{title:"Security Assessment Focus",children:(0,d.jsx)(b.p,{children:"Network and security sensors provide the foundation for threat hunting, compliance validation,\nand incident response. Combine multiple sensors for comprehensive security posture assessment."})}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Network Connections"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Basic: Get Network Connections from all machines where Network Connections contains ":443"'}),"\n",(0,d.jsx)(b.li,{children:'Advanced: Get Computer Name, Network Connections from all machines where Network Connections contains "ESTABLISHED" AND Network Connections contains "suspicious-domain.com"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:'Get-NetTCPConnection | Where-Object {$_.State -eq "Established"} | Select-Object LocalAddress, LocalPort, RemoteAddress, RemotePort'})]}),"\n",(0,d.jsx)(b.li,{children:"Threat hunting for C2 communications"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"DNS Cache"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Basic: Get DNS Cache from all machines where DNS Cache contains "malicious-domain"'}),"\n",(0,d.jsx)(b.li,{children:'Advanced: Get Computer Name, DNS Cache from all machines where DNS Cache contains ".tk" OR DNS Cache contains ".ml"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-DnsClientCache | Select-Object Entry, Data"})]}),"\n",(0,d.jsx)(b.li,{children:"Malware communication analysis"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"ARP Table"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get ARP Table from all machines where ARP Table contains "incomplete"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-NetNeighbor | Select-Object IPAddress, LinkLayerAddress, State"})]}),"\n",(0,d.jsx)(b.li,{children:"Network reconnaissance detection"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Routing Table"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Routing Table from all machines where Routing Table contains "0.0.0.0"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-NetRoute | Select-Object DestinationPrefix, NextHop, InterfaceAlias"})]}),"\n",(0,d.jsx)(b.li,{children:"Network configuration analysis"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Open Files"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Basic: Get Open Files from all machines where Open Files contains "temp"'}),"\n",(0,d.jsx)(b.li,{children:'Advanced: Get Computer Name, Open Files from all machines where Open Files contains "ransomware" OR Open Files contains ".encrypted"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-SmbOpenFile | Select-Object Path, ClientUserName"})]}),"\n",(0,d.jsx)(b.li,{children:"File access monitoring"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Active Directory Information"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Active Directory Information from all machines where Active Directory Information contains "CORP.LOCAL"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-ComputerInfo | Select-Object CsDomain, CsDomainRole"})]}),"\n",(0,d.jsx)(b.li,{children:"Domain membership validation"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Group Policy Results"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Group Policy Results from all machines where Group Policy Results contains "not applied"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"gpresult /r /scope:computer"})]}),"\n",(0,d.jsx)(b.li,{children:"Policy compliance verification"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Windows Event Logs"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Basic: Get Windows Event Logs from all machines where Windows Event Logs contains "Error"'}),"\n",(0,d.jsx)(b.li,{children:'Advanced: Get Computer Name, Windows Event Logs from all machines where Windows Event Logs contains "Event ID 4625" AND Windows Event Logs contains "last 24 hours"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-WinEvent -FilterHashtable @{LogName='Security'; ID=4625; StartTime=(Get-Date).AddDays(-1)}"})]}),"\n",(0,d.jsx)(b.li,{children:"Security event correlation"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Registry Keys"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Basic: Get Registry Keys from all machines where Registry Keys contains "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run"'}),"\n",(0,d.jsx)(b.li,{children:'Advanced: Get Computer Name, Registry Keys from all machines where Registry Keys contains "persistence" AND Registry Keys contains "unknown.exe"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:'Get-ItemProperty "HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run"'})]}),"\n",(0,d.jsx)(b.li,{children:"Persistence mechanism detection"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"File Hashes"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Basic: Get File Hashes from all machines where File Hashes contains "suspicious.exe"'}),"\n",(0,d.jsx)(b.li,{children:'Advanced: Get Computer Name, File Hashes from all machines where File Hashes contains "MD5" AND File Hashes contains "known-malware-hash"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:'Get-FileHash -Path "C:\\suspected\\file.exe" -Algorithm SHA256'})]}),"\n",(0,d.jsx)(b.li,{children:"Malware identification"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"USB Device History"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get USB Device History from all machines where USB Device History contains "unknown device"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:'Get-ItemProperty "HKLM:\\SYSTEM\\CurrentControlSet\\Enum\\USBSTOR\\*"'})]}),"\n",(0,d.jsx)(b.li,{children:"Data exfiltration risk assessment"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Shared Folders"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Basic: Get Shared Folders from all machines where Shared Folders contains "C$"'}),"\n",(0,d.jsx)(b.li,{children:'Advanced: Get Computer Name, Shared Folders from all machines where Shared Folders contains "Everyone" AND Shared Folders contains "Full Control"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-SmbShare | Select-Object Name, Path, Description"})]}),"\n",(0,d.jsx)(b.li,{children:"Exposure risk analysis"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"WMI Event Consumers"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get WMI Event Consumers from all machines where WMI Event Consumers contains "suspicious"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-WmiObject -Namespace root\\subscription -Class __EventConsumer"})]}),"\n",(0,d.jsx)(b.li,{children:"Advanced persistence detection"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Certificate Store"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Basic: Get Certificate Store from all machines where Certificate Store contains "expired"'}),"\n",(0,d.jsx)(b.li,{children:'Advanced: Get Computer Name, Certificate Store from all machines where Certificate Store contains "Self-Signed" AND Certificate Store contains "Root CA"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-ChildItem Cert:\\LocalMachine\\Root | Where-Object {$_.NotAfter -lt (Get-Date)}"})]}),"\n",(0,d.jsx)(b.li,{children:"PKI security assessment"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Network Adapters"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Network Adapters from all machines where Network Adapters contains "promiscuous mode"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-NetAdapter | Select-Object Name, InterfaceDescription, PromiscuousMode"})]}),"\n",(0,d.jsx)(b.li,{children:"Network sniffing detection"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Windows Firewall Rules"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Basic: Get Windows Firewall Rules from all machines where Windows Firewall Rules contains "allow all"'}),"\n",(0,d.jsx)(b.li,{children:'Advanced: Get Computer Name, Windows Firewall Rules from all machines where Windows Firewall Rules contains "inbound" AND Windows Firewall Rules contains "any port"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:'Get-NetFirewallRule | Where-Object {$_.Enabled -eq "True"} | Select-Object DisplayName, Direction, Action'})]}),"\n",(0,d.jsx)(b.li,{children:"Firewall policy compliance"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Alternate Data Streams"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Alternate Data Streams from all machines where Alternate Data Streams contains "Zone.Identifier"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:'Get-Item "C:\\suspicious\\*" -Stream *'})]}),"\n",(0,d.jsx)(b.li,{children:"Hidden data detection"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"PowerShell History"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Basic: Get PowerShell History from all machines where PowerShell History contains "Invoke-Expression"'}),"\n",(0,d.jsx)(b.li,{children:'Advanced: Get Computer Name, PowerShell History from all machines where PowerShell History contains "DownloadString" OR PowerShell History contains "EncodedCommand"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:'Get-Content "$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt"'})]}),"\n",(0,d.jsx)(b.li,{children:"Attack technique detection"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"LDAP Queries"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get LDAP Queries from all machines where LDAP Queries contains "admin"'}),"\n",(0,d.jsx)(b.li,{children:"PowerShell: Custom sensor using DirectorySearcher"}),"\n",(0,d.jsx)(b.li,{children:"Active Directory reconnaissance"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"System Integrity"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get System Integrity from all machines where System Integrity contains "corrupted"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"sfc /verifyonly"})," results parsing"]}),"\n",(0,d.jsx)(b.li,{children:"System tampering detection"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(b.h3,{children:"Performance and Resource Monitoring Sensors (15 detailed examples)"}),"\n",(0,d.jsx)(f.A,{title:"Performance Optimization Strategy",children:(0,d.jsx)(b.p,{children:"Performance sensors help identify bottlenecks, plan capacity, and maintain system health.\nUse trending data and threshold alerts for proactive management."})}),"\n",(0,d.jsx)(h,{title:"Practice: Performance Monitoring",instruction:"Find all machines with high CPU usage (over 80%).",expectedQuery:"Get Computer Name from all machines where CPU Usage > 80",expectedResult:"SERVER-DB01 - CPU: 92%\nWORKSTATION-CAD05 - CPU: 87%\nSERVER-APP03 - CPU: 85%\nDESKTOP-DEV12 - CPU: 81%\n... (showing 47 machines with high CPU usage)",hint:"Use 'CPU Usage > 80' as your filter",difficulty:"intermediate"}),"\n",(0,d.jsx)(h,{title:"Practice: Low Disk Space Detection",instruction:"Identify machines with less than 10GB of free disk space.",expectedQuery:"Get Computer Name, Disk Space from all machines where Disk Free Space < 10GB",expectedResult:"LAPTOP-SALES09 - C:\\ 4.2GB free\nDESKTOP-HR15 - C:\\ 7.8GB free\nSERVER-LOG02 - D:\\ 9.1GB free\nWORKSTATION-DEV08 - C:\\ 2.3GB free\n... (showing 89 machines with low disk space)",hint:"Use 'Disk Free Space < 10GB' to find machines running out of space",difficulty:"intermediate"}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"CPU Usage by Process"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Basic: Get CPU Usage by Process from all machines where CPU Usage by Process > 80"}),"\n",(0,d.jsx)(b.li,{children:'Advanced: Get Computer Name, CPU Usage by Process from all machines where CPU Usage by Process contains "chrome.exe" AND CPU Usage by Process > 50'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-Process | Sort-Object CPU -Descending | Select-Object -First 5 ProcessName, CPU"})]}),"\n",(0,d.jsx)(b.li,{children:"Performance bottleneck identification"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Memory Usage by Process"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Basic: Get Memory Usage by Process from all machines where Memory Usage by Process > 1 GB"}),"\n",(0,d.jsx)(b.li,{children:'Advanced: Get Computer Name, Memory Usage by Process from all machines where Memory Usage by Process contains "Unknown" AND Memory Usage by Process > 500 MB'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-Process | Sort-Object WorkingSet -Descending | Select-Object ProcessName, @{N='MemoryMB';E={[math]::Round($_.WorkingSet/1MB,2)}}"})]}),"\n",(0,d.jsx)(b.li,{children:"Memory leak detection"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Disk I/O Statistics"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get Disk I/O Statistics from all machines where Disk I/O Statistics > 100 IOPS"}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:'Get-Counter "\\PhysicalDisk(*)\\Disk Reads/sec", "\\PhysicalDisk(*)\\Disk Writes/sec"'})]}),"\n",(0,d.jsx)(b.li,{children:"Storage performance analysis"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Network Bandwidth Usage"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Basic: Get Network Bandwidth Usage from all machines where Network Bandwidth Usage > 80%"}),"\n",(0,d.jsx)(b.li,{children:"Advanced: Get Computer Name, Network Bandwidth Usage from all machines where Network Bandwidth Usage > 50% AND Uptime < 1 day"}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:'Get-Counter "\\Network Interface(*)\\Bytes Total/sec"'})]}),"\n",(0,d.jsx)(b.li,{children:"Network capacity planning"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Page File Usage"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get Page File Usage from all machines where Page File Usage > 75%"}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:'Get-Counter "\\Paging File(_Total)\\% Usage"'})]}),"\n",(0,d.jsx)(b.li,{children:"Virtual memory optimization"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Handle Count"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get Handle Count from all machines where Handle Count > 10000"}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-Process | Select-Object ProcessName, HandleCount | Sort-Object HandleCount -Descending"})]}),"\n",(0,d.jsx)(b.li,{children:"Resource leak detection"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Thread Count"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get Thread Count from all machines where Thread Count > 1000"}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"Get-Process | Select-Object ProcessName, Threads | Sort-Object Threads -Descending"})]}),"\n",(0,d.jsx)(b.li,{children:"Application scalability assessment"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"System Cache"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get System Cache from all machines where System Cache < 1 GB"}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:'Get-Counter "\\Memory\\Cache Bytes"'})]}),"\n",(0,d.jsx)(b.li,{children:"Memory utilization optimization"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Interrupt Time"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get Interrupt Time from all machines where Interrupt Time > 10%"}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:'Get-Counter "\\Processor(*)\\% Interrupt Time"'})]}),"\n",(0,d.jsx)(b.li,{children:"Hardware and driver performance"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Context Switches"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get Context Switches from all machines where Context Switches > 5000"}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:'Get-Counter "\\System\\Context Switches/sec"'})]}),"\n",(0,d.jsx)(b.li,{children:"System efficiency metrics"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Disk Queue Length"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Basic: Get Disk Queue Length from all machines where Disk Queue Length > 2"}),"\n",(0,d.jsx)(b.li,{children:"Advanced: Get Computer Name, Disk Queue Length from all machines where Disk Queue Length > 1 AND Disk Space < 20%"}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:'Get-Counter "\\PhysicalDisk(*)\\Current Disk Queue Length"'})]}),"\n",(0,d.jsx)(b.li,{children:"Storage bottleneck identification"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Process Creation Rate"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get Process Creation Rate from all machines where Process Creation Rate > 100"}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:'Get-Counter "\\System\\Processes"'})]}),"\n",(0,d.jsx)(b.li,{children:"System activity monitoring"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Registry Operations"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Example: Get Registry Operations from all machines where Registry Operations > 1000"}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:'Get-Counter "\\Registry\\Registry Operations/sec"'})]}),"\n",(0,d.jsx)(b.li,{children:"Application behavior analysis"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"GPU Usage"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Basic: Get GPU Usage from all machines where GPU Usage > 80%"}),"\n",(0,d.jsx)(b.li,{children:'Advanced: Get Computer Name, GPU Usage from all machines where GPU Usage > 50% AND GPU Usage contains "NVIDIA"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"nvidia-smi --query-gpu=utilization.gpu --format=csv,noheader,nounits"})]}),"\n",(0,d.jsx)(b.li,{children:"Graphics workload optimization"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Power Management"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Example: Get Power Management from all machines where Power Management contains "High Performance"'}),"\n",(0,d.jsxs)(b.li,{children:["PowerShell: ",(0,d.jsx)(b.code,{children:"powercfg /getactivescheme"})]}),"\n",(0,d.jsx)(b.li,{children:"Energy efficiency optimization"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.h2,{children:"Query Patterns Library: From Basics to Advanced"}),"\n",(0,d.jsx)(f.A,{title:"How to use",children:(0,d.jsx)(b.p,{children:"Copy these patterns, replace placeholders with your environment data, and run on a small\ncohort first. Then scale gradually."})}),"\n",(0,d.jsx)(b.h3,{children:"Basic Patterns (10)"}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Inventory by OS"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Get Operating System from all machines"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Hostname search"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Get Computer Name from all machines where Computer Name contains "WKS-"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"IP subnet filter"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Get Computer Name, IP Address from all machines where IP Address contains "10.20."'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Uptime check"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Get Computer Name, Uptime from all machines where Uptime > 7 days"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Logged in user snapshot"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Get Computer Name, Logged In User from all machines"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Low disk space"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Get Computer Name, Disk Space from all machines where Disk Space < 10 GB"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Antivirus disabled"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Get Computer Name, Antivirus Status from all machines where Antivirus Status contains "disabled"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"RDP exposure"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Get Computer Name, Listening Ports from all machines where Listening Ports contains ":3389"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Browser extension census"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Get Browser Extensions from all machines"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Client version hygiene"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Get Tanium Client Version from all machines where Tanium Client Version < "7.5.0"'}),"\n"]}),"\n",(0,d.jsx)(b.h3,{children:"Advanced Patterns (10)"}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Nested logic for patch risk"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Get Computer Name from all machines where Operating System contains "Windows" AND (Installed Patches contains "KB50" OR OS Build Number < "22621")'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Exclude test/staging"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Get Computer Name from all machines where NOT Computer Name contains "-TST-" AND NOT Computer Name contains "-DEV-"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Service drift"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Get Services from all machines where Services contains "AgentX" AND NOT Services contains "Running"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Rogue processes by publisher gap"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Get Running Processes from all machines where Running Processes contains "unknown.exe"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Targeted by business unit and subnet"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Get Computer Name from all machines where (Domain contains "CORP" AND IP Address contains "10.50.")'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Version pattern with regex"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Get Application Versions from all machines where Application Versions matches "^10\\.(2[2-9]|[3-9][0-9])"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Performance triage cohort"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Get Computer Name from all machines where CPU Utilization > 85 OR Memory Utilization > 90"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Encryption coverage exception"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Get Computer Name from all machines where OS Platform = "Windows" AND Disk Encryption Status != "Enabled"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Least-privileged admin discovery"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Get Local Administrators from all machines where Local Administrators contains "domain admins"'}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Patch pilot program"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Get Computer Name from all machines where Model contains "Precision" AND OS Build Number < "22621"'}),"\n"]}),"\n",(0,d.jsx)(b.h3,{children:"Performance Optimization Patterns (5)"}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Targeted Query with Indexed Sensors"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:["Query: ",(0,d.jsx)(b.code,{children:'Get Computer Name and Last Reboot Time from all machines where Operating System containing "Server 2022"'})]}),"\n",(0,d.jsx)(b.li,{children:"Optimization: Uses indexed sensors for faster results"}),"\n",(0,d.jsx)(b.li,{children:"Performance: Returns in <2 seconds for 50,000 endpoints"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Efficient Date Range Filtering"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:["Query: ",(0,d.jsx)(b.code,{children:'Get Installed Applications from all machines where Last Logged In User != "No User" and Days Since Last Reboot &lt; 7'})]}),"\n",(0,d.jsx)(b.li,{children:"Optimization: Filters on indexed date fields first"}),"\n",(0,d.jsx)(b.li,{children:"Performance: 70% faster than string comparisons"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Sensor Caching Strategy"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:["Query: ",(0,d.jsx)(b.code,{children:"Get CPU Usage and Memory Usage from all machines (sensor cache max age:15 minutes)"})]}),"\n",(0,d.jsx)(b.li,{children:"Optimization: Leverages cached sensor results"}),"\n",(0,d.jsx)(b.li,{children:"Performance: Reduces endpoint impact by 90%"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Progressive Question Refinement"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:["Stage 1: ",(0,d.jsx)(b.code,{children:"Get Operating System from all machines"})]}),"\n",(0,d.jsxs)(b.li,{children:["Stage 2: ",(0,d.jsx)(b.code,{children:'Get Installed Applications from all machines where Operating System containing "Windows 10"'})]}),"\n",(0,d.jsx)(b.li,{children:"Optimization: Use results from Stage 1 to create targeted Stage 2"}),"\n",(0,d.jsx)(b.li,{children:"Performance: Reduces total query time by 60%"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Compound Sensor Optimization"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:["Query: ",(0,d.jsx)(b.code,{children:"Get Computer Name and {CPU Details[CPU Name,CPU Architecture,CPU Cores]} from all machines"})]}),"\n",(0,d.jsx)(b.li,{children:"Optimization: Retrieves multiple related values in single sensor execution"}),"\n",(0,d.jsx)(b.li,{children:"Performance: 3x faster than separate queries"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.h2,{children:"\uD83D\uDD2C Advanced Sensor Deep Dive"}),"\n",(0,d.jsx)(b.h3,{children:"System Information Sensors - Enterprise Detail"}),"\n",(0,d.jsx)(b.h4,{children:"1. Computer Name and Identity Sensors"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Computer Name"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get Computer Name from all machines\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Primary endpoint identifier"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": <0.1ms execution time"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Use Cases"}),": Asset tracking, naming convention compliance, domain membership validation"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Pro Tip"}),": Combine with Domain Name for full FQDN"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Computer ID"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get Computer ID from all machines\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Unique Tanium identifier (never changes)"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": Cached, instant return"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Use Cases"}),": Tracking renamed machines, database correlations"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Note"}),": Survives OS reinstalls if Tanium database preserved"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Domain Name"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get Domain Name from all machines\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Active Directory domain membership"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": <0.5ms execution time"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Use Cases"}),": Multi-domain environments, workgroup vs domain analysis"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"PowerShell Equivalent"}),": ",(0,d.jsx)(b.code,{children:"[System.DirectoryServices.ActiveDirectory.Domain]::GetComputerDomain().Name"})]}),"\n"]}),"\n",(0,d.jsx)(b.h4,{children:"2. Operating System Sensors"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Operating System"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get Operating System from all machines\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Full OS identification string"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": Cached on client"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Format"}),': "Microsoft Windows Server 2022 Datacenter"']}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Parsing Tips"}),': Use "containing" for version matching']}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"OS Platform"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get OS Platform from all machines\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": High-level OS family"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Values"}),": Windows, Linux, Mac, AIX, Solaris"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": Instant from cache"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Use Case"}),": Cross-platform query filtering"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"OS Architecture"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:'Get OS Architecture from all machines where OS Platform = "Windows"\n'})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": 32-bit vs 64-bit determination"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Values"}),": x64, x86, ARM64"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Critical for"}),": Software deployment, driver compatibility"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Registry Key"}),": ",(0,d.jsx)(b.code,{children:"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment\\PROCESSOR_ARCHITECTURE"})]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Windows Build Number"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:'Get Windows Build Number from all machines where OS Platform = "Windows"\n'})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Precise Windows version tracking"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Examples"}),":","\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"22621 = Windows 11 22H2"}),"\n",(0,d.jsx)(b.li,{children:"19045 = Windows 10 22H2"}),"\n",(0,d.jsx)(b.li,{children:"20348 = Server 2022"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Query for Latest"}),": ",(0,d.jsx)(b.code,{children:"Get Computer Name from all machines where Windows Build Number &lt; 22621"})]}),"\n"]}),"\n",(0,d.jsx)(b.h4,{children:"3. Hardware Inventory Sensors"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"CPU Details"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get CPU Details[CPU Name, CPU Architecture, CPU Cores, CPU Logical Processors] from all machines\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Complete processor inventory"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance Impact"}),": Low (<5ms)"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Data Points"}),":","\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'CPU Name: "Intel(R) Xeon(R) Gold 6248R CPU @ 3.00GHz"'}),"\n",(0,d.jsx)(b.li,{children:"CPU Architecture: x64, ARM64"}),"\n",(0,d.jsx)(b.li,{children:"CPU Cores: Physical core count"}),"\n",(0,d.jsx)(b.li,{children:"CPU Logical Processors: With hyperthreading"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Capacity Planning"}),": Identify under-powered systems"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Total Memory"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get Total Memory from all machines\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": RAM capacity in MB"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": Instant from WMI cache"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Filtering Example"}),": ",(0,d.jsx)(b.code,{children:"where Total Memory &lt; 8192"})," (less than 8GB)"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"WMI Class"}),": Win32_ComputerSystem.TotalPhysicalMemory"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Disk Free Space"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get Disk Free Space from all machines\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Available storage per volume"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Format"}),': "C: 45.2 GB, D: 123.5 GB"']}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Alert Query"}),": ",(0,d.jsx)(b.code,{children:'where Disk Free Space containing "C:" and Disk Free Space < "10 GB"'})]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"PowerShell"}),": ",(0,d.jsx)(b.code,{children:"Get-WmiObject Win32_LogicalDisk | Select DeviceID, FreeSpace"})]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Model"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get Model from all machines\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Hardware model identification"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Examples"}),': "Dell OptiPlex 7090", "VMware Virtual Platform"']}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Virtual Detection"}),": ",(0,d.jsx)(b.code,{children:'where Model containing "Virtual" or Model containing "VMware"'})]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Warranty Tracking"}),": Correlate with manufacturer databases"]}),"\n"]}),"\n",(0,d.jsx)(b.h4,{children:"4. Network Configuration Sensors"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"IP Address"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get IP Address from all machines\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": All configured IP addresses"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Format"}),": Comma-separated list"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Filtering"}),": ",(0,d.jsx)(b.code,{children:'where IP Address containing "192.168"'})]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Note"}),": Returns all interfaces, including virtual"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"MAC Address"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get MAC Address from all machines\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Physical network adapter identification"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Format"}),': "00:50:56:C0:00:08"']}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Wake-on-LAN"}),": Required for remote power management"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Duplicate Detection"}),": ",(0,d.jsx)(b.code,{children:"Get MAC Address and Computer Name from all machines | group by MAC Address"})]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Network Interfaces"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get Network Interfaces from all machines\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Complete NIC inventory"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Details"}),": Name, Status, Speed, IP Configuration"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Troubleshooting"}),": Identify disabled or misconfigured adapters"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance Monitoring"}),": Track interface utilization"]}),"\n"]}),"\n",(0,d.jsx)(b.h3,{children:"Security Sensors - Advanced Detection"}),"\n",(0,d.jsx)(b.h4,{children:"1. User and Access Control Sensors"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Logged In Users"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get Logged In Users from all machines\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Active user sessions"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Format"}),': "DOMAIN\\username (Console/RDP)"']}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Security Use"}),": Detect unauthorized access"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Query Suspicious"}),": ",(0,d.jsx)(b.code,{children:'where Logged In Users containing "Administrator"'})]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Local Administrators"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get Local Administrators from all machines\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Local admin group membership"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Compliance Check"}),": ",(0,d.jsx)(b.code,{children:'where Local Administrators not containing "Domain Admins"'})]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Least Privilege"}),": Identify over-privileged accounts"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"PowerShell"}),": ",(0,d.jsx)(b.code,{children:'Get-LocalGroupMember -Group "Administrators"'})]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"User Rights Assignments"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get User Rights[SeDebugPrivilege, SeBackupPrivilege, SeTakeOwnershipPrivilege] from all machines\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Advanced privilege audit"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Critical Rights"}),":","\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"SeDebugPrivilege: Can debug any process"}),"\n",(0,d.jsx)(b.li,{children:"SeBackupPrivilege: Bypass file permissions"}),"\n",(0,d.jsx)(b.li,{children:"SeTakeOwnershipPrivilege: Take file ownership"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Compliance"}),": NIST 800-53 AC-6"]}),"\n"]}),"\n",(0,d.jsx)(b.h4,{children:"2. Process and Service Monitoring"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Running Processes"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get Running Processes from all machines\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Complete process listing"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Format"}),': "process.exe (PID: 1234)"']}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Threat Hunting"}),": ",(0,d.jsx)(b.code,{children:'where Running Processes containing "powershell.exe -enc"'})]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": Can be resource intensive on busy systems"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Services"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get Services from all machines\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Windows service inventory"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Format"}),': "ServiceName (Status: Running/Stopped)"']}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Security Check"}),": ",(0,d.jsx)(b.code,{children:'where Services containing "TeamViewer" and Services containing "Running"'})]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Compliance"}),": Identify unauthorized remote access tools"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Listening Ports"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get Listening Ports from all machines\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Open port detection"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Format"}),': "TCP:3389, TCP:445, UDP:53"']}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Security Alert"}),": ",(0,d.jsx)(b.code,{children:'where Listening Ports containing "TCP:4444"'})," (common backdoor)"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Firewall Validation"}),": Compare against approved port list"]}),"\n"]}),"\n",(0,d.jsx)(b.h4,{children:"3. Security Software Status"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Anti-Virus Enabled"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get Anti-Virus Enabled from all machines\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": AV status verification"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Values"}),": Yes, No, Unknown"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Compliance Query"}),": ",(0,d.jsx)(b.code,{children:'where Anti-Virus Enabled != "Yes"'})]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Note"}),": Checks Windows Security Center registration"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Windows Firewall Status"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:'Get Windows Firewall Status from all machines where OS Platform = "Windows"\n'})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Firewall state per profile"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Format"}),': "Domain: On, Private: On, Public: On"']}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Alert Query"}),": ",(0,d.jsx)(b.code,{children:'where Windows Firewall Status containing "Off"'})]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"PowerShell"}),": ",(0,d.jsx)(b.code,{children:"Get-NetFirewallProfile | Select Name, Enabled"})]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"BitLocker Status"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:'Get BitLocker Status from all machines where OS Platform = "Windows"\n'})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Disk encryption validation"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Values"}),': "Encrypted", "Not Encrypted", "Encryption In Progress"']}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Compliance"}),": ",(0,d.jsx)(b.code,{children:'where BitLocker Status != "Encrypted"'})]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Recovery Key"}),": Separate sensor for key escrow validation"]}),"\n"]}),"\n",(0,d.jsx)(b.h3,{children:"Performance Monitoring Sensors"}),"\n",(0,d.jsx)(b.h4,{children:"1. Resource Utilization"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"CPU Usage"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get CPU Usage from all machines\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Current processor utilization"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Format"}),": Percentage (0-100)"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Alert Threshold"}),": ",(0,d.jsx)(b.code,{children:"where CPU Usage &gt; 90"})]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Sampling"}),": 5-second average"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"WMI"}),": Win32_PerfFormattedData_PerfOS_Processor"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Memory Usage"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get Memory Usage from all machines\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": RAM utilization percentage"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Calculation"}),": (Used Memory / Total Memory) * 100"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Alert Query"}),": ",(0,d.jsx)(b.code,{children:"where Memory Usage &gt; 85"})]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Troubleshooting"}),": Combine with process memory consumers"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Disk Usage"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get Disk Usage from all machines\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Storage utilization per volume"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Format"}),': "C: 67%, D: 23%"']}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Critical Alert"}),": ",(0,d.jsx)(b.code,{children:'where Disk Usage containing "C:" and Disk Usage > "90%"'})]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Predictive"}),": Track growth trends over time"]}),"\n"]}),"\n",(0,d.jsx)(b.h4,{children:"2. System Health Metrics"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Uptime"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get Uptime from all machines\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": System availability tracking"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Format"}),': "14 days, 3 hours, 27 minutes"']}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Patch Compliance"}),": ",(0,d.jsx)(b.code,{children:'where Uptime > "30 days"'})," (needs reboot)"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Availability SLA"}),": Calculate monthly uptime percentage"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"System Event Logs"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get System Event Logs[Critical, Error] from all machines (max age:24 hours)\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Recent critical events"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Event IDs"}),": 41 (unexpected shutdown), 1074 (planned restart)"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Correlation"}),": Link to performance degradation"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Volume Alert"}),": ",(0,d.jsx)(b.code,{children:"where count &gt; 100"})," (event storm)"]}),"\n"]}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.h2,{children:"\uD83E\uDDEA Comprehensive Lab Exercises"}),"\n",(0,d.jsx)(b.h3,{children:"Lab 1: Basic Query Construction Mastery"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Objective"}),": Build proficiency in Tanium query syntax and sensor usage"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Duration"}),": 45 minutes"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Prerequisites"}),":"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Tanium Console access"}),"\n",(0,d.jsx)(b.li,{children:"Test environment with 100+ endpoints"}),"\n",(0,d.jsx)(b.li,{children:"Mixed Windows/Linux systems preferred"}),"\n"]}),"\n",(0,d.jsx)(b.h4,{children:"Part 1: Simple Queries (10 minutes)"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Task 1.1"}),": Inventory all Windows systems"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:'Get Computer Name and Operating System from all machines\nwhere OS Platform = "Windows"\n'})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Expected Result"}),": List of Windows machines with OS versions"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Task 1.2"}),": Find servers vs workstations"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:'Get Computer Name and Operating System from all machines\nwhere Operating System containing "Server"\n'})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Validation"}),": Count should match your server inventory"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Task 1.3"}),": Identify virtual machines"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:'Get Computer Name and Model from all machines\nwhere Model containing "Virtual" or Model containing "VMware"\n'})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Learning Point"}),": Understanding OR logic in filters"]}),"\n",(0,d.jsx)(b.h4,{children:"Part 2: Compound Queries (15 minutes)"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Task 2.1"}),": Security posture assessment"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:'Get Computer Name and Anti-Virus Enabled and Windows Firewall Status\nand BitLocker Status from all machines where OS Platform = "Windows"\n'})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Analysis Questions"}),":"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"How many systems have all three protections enabled?"}),"\n",(0,d.jsx)(b.li,{children:"Which systems are most vulnerable?"}),"\n",(0,d.jsx)(b.li,{children:"What patterns do you observe?"}),"\n"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Task 2.2"}),": Hardware capacity planning"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:'Get Computer Name and Total Memory and CPU Details[CPU Cores]\nand Disk Free Space from all machines\nwhere Total Memory &lt; 8192 or Disk Free Space containing "C:" < "20 GB"\n'})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Business Value"}),": Identify systems needing upgrades"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Task 2.3"}),": User activity monitoring"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:'Get Computer Name and Logged In Users and Last Logged In User\nand Uptime from all machines\nwhere Logged In Users != "No User"\n'})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Security Insight"}),": Detect unusual access patterns"]}),"\n",(0,d.jsx)(b.h4,{children:"Part 3: Advanced Filtering (20 minutes)"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Task 3.1"}),": Complex boolean logic"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:'Get Computer Name and Operating System and Last Reboot Time\nfrom all machines where\n(Operating System containing "Windows 10" and Build Number < "19045")\nor (Operating System containing "Server" and Uptime > "60 days")\n'})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Challenge"}),": Explain the logic flow to a colleague"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Task 3.2"}),": Regular expression filtering"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:'Get Computer Name and IP Address from all machines\nwhere IP Address matches "192\\.168\\.[0-9]+\\.[0-9]+"\n'})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Extension"}),": Modify to find specific subnets"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Task 3.3"}),": Negation and exclusion"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:'Get Computer Name and Installed Applications from all machines\nwhere Installed Applications not containing "Microsoft Defender"\nand Operating System containing "Windows"\n'})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Risk Assessment"}),": Systems without standard AV"]}),"\n",(0,d.jsx)(b.h4,{children:"Lab Assessment Criteria"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Basic Proficiency"})," (Score: 60-70%)"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Execute all simple queries correctly"}),"\n",(0,d.jsx)(b.li,{children:"Understand basic filter syntax"}),"\n",(0,d.jsx)(b.li,{children:"Retrieve accurate results"}),"\n"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Intermediate Proficiency"})," (Score: 71-85%)"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Complete compound queries successfully"}),"\n",(0,d.jsx)(b.li,{children:"Apply boolean logic correctly"}),"\n",(0,d.jsx)(b.li,{children:"Interpret results accurately"}),"\n"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Advanced Proficiency"})," (Score: 86-100%)"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Master complex filtering"}),"\n",(0,d.jsx)(b.li,{children:"Optimize query performance"}),"\n",(0,d.jsx)(b.li,{children:"Identify business insights from data"}),"\n"]}),"\n",(0,d.jsx)(b.h3,{children:"Lab 2: Custom Sensor Development Workshop"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Objective"}),": Create, test, and deploy custom sensors for organizational needs"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Duration"}),": 60 minutes"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Prerequisites"}),":"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Administrative access to Tanium"}),"\n",(0,d.jsx)(b.li,{children:"PowerShell/Bash scripting knowledge"}),"\n",(0,d.jsx)(b.li,{children:"Understanding of WMI/CIM"}),"\n"]}),"\n",(0,d.jsx)(b.h4,{children:"Part 1: PowerShell Sensor Creation (25 minutes)"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Task 1.1"}),": Create Windows Defender Status Sensor"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Sensor Name"}),': "Custom - Windows Defender Detailed Status"']}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"PowerShell Code"}),":"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-powershell",children:'$DefenderStatus = Get-MpComputerStatus -ErrorAction SilentlyContinue\n\nif ($DefenderStatus) {\n    $Output = @{\n        \'RealTimeProtection\' = $DefenderStatus.RealTimeProtectionEnabled\n        \'BehaviorMonitor\' = $DefenderStatus.BehaviorMonitorEnabled\n        \'AntivirusEnabled\' = $DefenderStatus.AntivirusEnabled\n        \'AntispywareEnabled\' = $DefenderStatus.AntispywareEnabled\n        \'SignatureVersion\' = $DefenderStatus.AntivirusSignatureVersion\n        \'SignatureAge\' = $DefenderStatus.AntivirusSignatureAge\n        \'LastFullScan\' = $DefenderStatus.LastFullScanDateTimeStart\n        \'LastQuickScan\' = $DefenderStatus.LastQuickScanDateTimeStart\n    }\n\n    $ResultString = "RealTime:$($Output.RealTimeProtection), " +\n                    "Behavior:$($Output.BehaviorMonitor), " +\n                    "AV:$($Output.AntivirusEnabled), " +\n                    "AS:$($Output.AntispywareEnabled), " +\n                    "SigVer:$($Output.SignatureVersion), " +\n                    "SigAge:$($Output.SignatureAge)days, " +\n                    "LastFull:$($Output.LastFullScan), " +\n                    "LastQuick:$($Output.LastQuickScan)"\n\n    Write-Output $ResultString\n} else {\n    Write-Output "Windows Defender Not Available"\n}\n'})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Testing Steps"}),":"]}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsx)(b.li,{children:"Create sensor in Tanium Console"}),"\n",(0,d.jsx)(b.li,{children:"Set Max Age: 3600 seconds"}),"\n",(0,d.jsx)(b.li,{children:"Set Platform: Windows"}),"\n",(0,d.jsx)(b.li,{children:"Test on single endpoint first"}),"\n",(0,d.jsx)(b.li,{children:"Validate output format"}),"\n",(0,d.jsx)(b.li,{children:"Deploy to pilot group"}),"\n",(0,d.jsx)(b.li,{children:"Monitor for errors"}),"\n",(0,d.jsx)(b.li,{children:"Full deployment"}),"\n"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Task 1.2"}),": Create Certificate Expiration Sensor"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Sensor Name"}),': "Custom - Certificate Expiration Check"']}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"PowerShell Code"}),":"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-powershell",children:'$Certs = Get-ChildItem Cert:\\LocalMachine\\My\n$ExpiringCerts = @()\n$ThresholdDays = 30\n$Today = Get-Date\n\nforeach ($Cert in $Certs) {\n    $DaysToExpire = ($Cert.NotAfter - $Today).Days\n\n    if ($DaysToExpire -le $ThresholdDays -and $DaysToExpire -ge 0) {\n        $ExpiringCerts += "$($Cert.Subject):$DaysToExpire days"\n    } elseif ($DaysToExpire -lt 0) {\n        $ExpiringCerts += "$($Cert.Subject):EXPIRED"\n    }\n}\n\nif ($ExpiringCerts.Count -gt 0) {\n    Write-Output ($ExpiringCerts -join "; ")\n} else {\n    Write-Output "No Certificates Expiring Soon"\n}\n'})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Business Value"}),": Prevent service outages from expired certificates"]}),"\n",(0,d.jsx)(b.h4,{children:"Part 2: Bash Sensor Creation (Linux) (20 minutes)"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Task 2.1"}),": Create Security Compliance Sensor"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Sensor Name"}),': "Custom - Linux Security Audit"']}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Bash Code"}),":"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-bash",children:'#!/bin/bash\n\n# Check SSH configuration\nSSH_CONFIG="/etc/ssh/sshd_config"\nROOT_LOGIN=$(grep "^PermitRootLogin" $SSH_CONFIG 2>/dev/null | awk \'{print $2}\')\nPASS_AUTH=$(grep "^PasswordAuthentication" $SSH_CONFIG 2>/dev/null | awk \'{print $2}\')\n\n# Check firewall status\nif command -v ufw >/dev/null 2>&1; then\n    FW_STATUS=$(ufw status | grep "Status:" | awk \'{print $2}\')\nelif command -v firewall-cmd >/dev/null 2>&1; then\n    FW_STATUS=$(firewall-cmd --state 2>/dev/null)\nelse\n    FW_STATUS="No firewall detected"\nfi\n\n# Check for unattended upgrades\nif [ -f "/etc/apt/apt.conf.d/50unattended-upgrades" ]; then\n    AUTO_UPDATE="Enabled"\nelse\n    AUTO_UPDATE="Disabled"\nfi\n\n# Check SELinux/AppArmor\nif command -v getenforce >/dev/null 2>&1; then\n    SELINUX=$(getenforce)\nelif command -v aa-status >/dev/null 2>&1; then\n    APPARMOR=$(aa-status --enabled 2>/dev/null && echo "Enabled" || echo "Disabled")\n    SELINUX="AppArmor:$APPARMOR"\nelse\n    SELINUX="No MAC"\nfi\n\n# Output results\necho "RootLogin:${ROOT_LOGIN:-default}, PassAuth:${PASS_AUTH:-default}, Firewall:$FW_STATUS, AutoUpdate:$AUTO_UPDATE, SELinux:$SELINUX"\n'})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Deployment Notes"}),":"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Test on different Linux distributions"}),"\n",(0,d.jsx)(b.li,{children:"Account for command availability"}),"\n",(0,d.jsx)(b.li,{children:"Handle permission requirements"}),"\n",(0,d.jsx)(b.li,{children:"Set appropriate timeout values"}),"\n"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Task 2.2"}),": Create Package Vulnerability Sensor"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Sensor Name"}),': "Custom - Vulnerable Package Detection"']}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Bash Code"}),":"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-bash",children:"#!/bin/bash\n\nVULN_COUNT=0\nVULN_PACKAGES=\"\"\n\n# Ubuntu/Debian\nif command -v apt >/dev/null 2>&1; then\n    # Check for security updates\n    UPDATES=$(apt list --upgradable 2>/dev/null | grep -i security | wc -l)\n    if [ $UPDATES -gt 0 ]; then\n        VULN_COUNT=$UPDATES\n        VULN_PACKAGES=$(apt list --upgradable 2>/dev/null | grep -i security | head -5 | cut -d'/' -f1 | tr '\\n' ',')\n    fi\n# RHEL/CentOS\nelif command -v yum >/dev/null 2>&1; then\n    UPDATES=$(yum list updates --security 2>/dev/null | grep -v \"Loaded\" | wc -l)\n    if [ $UPDATES -gt 0 ]; then\n        VULN_COUNT=$UPDATES\n        VULN_PACKAGES=$(yum list updates --security 2>/dev/null | head -5 | awk '{print $1}' | tr '\\n' ',')\n    fi\nfi\n\nif [ $VULN_COUNT -gt 0 ]; then\n    echo \"SecurityUpdates:$VULN_COUNT, Packages:$VULN_PACKAGES\"\nelse\n    echo \"System fully patched\"\nfi\n"})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Integration Points"}),":"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Link to patch management workflow"}),"\n",(0,d.jsx)(b.li,{children:"Trigger automated remediation"}),"\n",(0,d.jsx)(b.li,{children:"Generate compliance reports"}),"\n"]}),"\n",(0,d.jsx)(b.h4,{children:"Part 3: Testing and Validation (15 minutes)"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Testing Framework"}),":"]}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Unit Testing"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Run script locally first"}),"\n",(0,d.jsx)(b.li,{children:"Verify output format"}),"\n",(0,d.jsx)(b.li,{children:"Check error handling"}),"\n",(0,d.jsx)(b.li,{children:"Test edge cases"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Integration Testing"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Deploy to test group"}),"\n",(0,d.jsx)(b.li,{children:"Verify Tanium parsing"}),"\n",(0,d.jsx)(b.li,{children:"Check performance impact"}),"\n",(0,d.jsx)(b.li,{children:"Monitor resource usage"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Production Validation"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Gradual rollout"}),"\n",(0,d.jsx)(b.li,{children:"Monitor for failures"}),"\n",(0,d.jsx)(b.li,{children:"Collect performance metrics"}),"\n",(0,d.jsx)(b.li,{children:"Gather user feedback"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Common Issues and Solutions"}),":"]}),"\n",(0,d.jsx)(b.p,{children:"| Issue | Cause | Solution |\n|-------|-------|----------|\n| No results returned | Permission denied | Run with appropriate privileges |\n| Timeout errors | Script too slow | Optimize code, increase timeout |\n| Parse errors | Invalid output format | Ensure single-line output |\n| Platform mismatch | Wrong OS targeting | Set correct platform filter |"}),"\n",(0,d.jsx)(b.h4,{children:"Lab Assessment and Certification Readiness"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Skills Demonstrated"}),":"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Custom sensor development"}),"\n",(0,d.jsx)(b.li,{children:"Cross-platform scripting"}),"\n",(0,d.jsx)(b.li,{children:"Security assessment automation"}),"\n",(0,d.jsx)(b.li,{children:"Performance optimization"}),"\n",(0,d.jsx)(b.li,{children:"Error handling"}),"\n"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Certification Alignment"}),":"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Maps to TCO Exam Domain 1 (22% weight)"}),"\n",(0,d.jsx)(b.li,{children:"Demonstrates advanced querying capabilities"}),"\n",(0,d.jsx)(b.li,{children:"Shows platform customization expertise"}),"\n",(0,d.jsx)(b.li,{children:"Validates troubleshooting skills"}),"\n"]}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.h2,{children:"\uD83C\uDFAF Real-World Enterprise Scenarios"}),"\n",(0,d.jsx)(b.h3,{children:"Scenario 1: Global Security Incident Response"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Background"}),": A Fortune 500 financial services company with 75,000 endpoints across 40 countries detects potential APT activity."]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Challenge"}),": Quickly identify and isolate compromised systems while maintaining business operations."]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Tanium Query Strategy"}),":"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Phase 1 - Initial Detection"})," (0-5 minutes)"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:'// Check for known IOCs\nGet Computer Name and Running Processes and Network Connections\nfrom all machines where\nRunning Processes containing "svchost.exe -k netsvcs"\nand Network Connections containing "185.220"\n'})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Phase 2 - Scope Assessment"})," (5-15 minutes)"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"// Identify lateral movement\nGet Computer Name and Logged In Users and Recent Logins[24 hours]\nfrom all machines where\nRecent Logins containing any of affected users\n"})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Phase 3 - Containment"})," (15-30 minutes)"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"// Isolate suspicious systems\nGet Computer Name and Network Isolation Status\nfrom all machines where\nComputer Name in [affected_systems_list]\n| Deploy Network Isolation Package\n"})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Business Impact Metrics"}),":"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Mean Time to Detection: 3 minutes"}),"\n",(0,d.jsx)(b.li,{children:"Scope Identification: 12 minutes"}),"\n",(0,d.jsx)(b.li,{children:"Full Containment: 28 minutes"}),"\n",(0,d.jsx)(b.li,{children:"Systems Affected: 127 (0.17%)"}),"\n",(0,d.jsx)(b.li,{children:"Prevented Loss: $4.2M"}),"\n"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Lessons Learned"}),":"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Pre-built threat hunting queries essential"}),"\n",(0,d.jsx)(b.li,{children:"Automated response packages reduce containment time"}),"\n",(0,d.jsx)(b.li,{children:"Query performance critical during incidents"}),"\n",(0,d.jsx)(b.li,{children:"Clear escalation procedures required"}),"\n"]}),"\n",(0,d.jsx)(b.h3,{children:"Scenario 2: Regulatory Compliance Audit"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Background"}),": Healthcare provider with 25,000 endpoints facing HIPAA audit."]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Challenge"}),": Demonstrate encryption, access controls, and patch compliance."]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Tanium Query Portfolio"}),":"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Encryption Validation"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get Computer Name and BitLocker Status and FileVault Status\nfrom all machines | Export to compliance_encryption_report.csv\n"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Access Control Audit"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get Computer Name and Local Administrators and User Rights[SeBackupPrivilege]\nfrom all machines where\nLocal Administrators count &gt; 3 or\nUser Rights containing non-standard accounts\n"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Patch Compliance"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get Computer Name and Missing Patches[Critical] and Days Since Last Reboot\nfrom all machines where\nMissing Patches count &gt; 0 or Days Since Last Reboot &gt; 30\n"})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Audit Results"}),":"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Encryption Compliance: 98.7%"}),"\n",(0,d.jsx)(b.li,{children:"Excess Privileges Found: 342 accounts"}),"\n",(0,d.jsx)(b.li,{children:"Critical Patches Missing: 1,247 systems"}),"\n",(0,d.jsx)(b.li,{children:"Remediation Time: 72 hours"}),"\n",(0,d.jsx)(b.li,{children:"Audit Status: PASSED with conditions"}),"\n"]}),"\n",(0,d.jsx)(b.h3,{children:"Scenario 3: M&A IT Integration"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Background"}),": Acquiring company with 15,000 additional endpoints."]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Challenge"}),": Inventory, assess, and integrate new infrastructure."]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Discovery Queries"}),":"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:'// Complete inventory\nGet Computer Name and Operating System and Model\nand IP Address and Domain Name\nfrom all machines where Domain Name = "acquired-company.com"\n\n// Software audit\nGet Installed Applications and License Keys\nfrom all machines where Domain Name = "acquired-company.com"\n| Group by Application Name\n\n// Security posture\nGet Computer Name and Anti-Virus Enabled and Last Patch Date\nand Local Administrators from all machines\nwhere Domain Name = "acquired-company.com"\nand (Anti-Virus != "Enabled" or Last Patch Date &gt; 30 days ago)\n'})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Integration Metrics"}),":"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Discovery Time: 4 hours"}),"\n",(0,d.jsx)(b.li,{children:"Security Issues Found: 3,421"}),"\n",(0,d.jsx)(b.li,{children:"Non-compliant Software: 867 instances"}),"\n",(0,d.jsx)(b.li,{children:"Integration Timeline: 6 weeks"}),"\n",(0,d.jsx)(b.li,{children:"Cost Savings: $2.1M (vs. manual audit)"}),"\n"]}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.h2,{children:"\uD83D\uDCDA TCO Exam Preparation Guide"}),"\n",(0,d.jsx)(b.h3,{children:"Question Type Patterns"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Type 1: Syntax Questions"})," (30% of exam)"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Focus on correct query structure"}),"\n",(0,d.jsx)(b.li,{children:"Common errors to avoid"}),"\n",(0,d.jsx)(b.li,{children:"Filter operator usage"}),"\n"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Example"}),': "Which query correctly finds Windows servers?"']}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'A) Get Computer Name where OS = "Server" ❌'}),"\n",(0,d.jsx)(b.li,{children:'B) Get Computer Name from all machines where Operating System containing "Server" ✅'}),"\n",(0,d.jsx)(b.li,{children:'C) Get machines where type = "Server" ❌'}),"\n",(0,d.jsx)(b.li,{children:'D) Select Computer Name where OS like "Server" ❌'}),"\n"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Type 2: Optimization Questions"})," (25% of exam)"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Query performance considerations"}),"\n",(0,d.jsx)(b.li,{children:"Sensor impact on endpoints"}),"\n",(0,d.jsx)(b.li,{children:"Caching strategies"}),"\n"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Type 3: Scenario-Based Questions"})," (45% of exam)"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Real-world problem solving"}),"\n",(0,d.jsx)(b.li,{children:"Multi-step query construction"}),"\n",(0,d.jsx)(b.li,{children:"Business requirement translation"}),"\n"]}),"\n",(0,d.jsx)(b.h3,{children:"Study Tips"}),"\n",(0,d.jsxs)(f.A,{type:"tip",children:[(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Exam Success Formula"}),":"]}),(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsx)(b.li,{children:"Master basic syntax (2 weeks)"}),"\n",(0,d.jsx)(b.li,{children:"Practice compound queries (1 week)"}),"\n",(0,d.jsx)(b.li,{children:"Study sensor reference (1 week)"}),"\n",(0,d.jsx)(b.li,{children:"Complete all labs (2 weeks)"}),"\n",(0,d.jsx)(b.li,{children:"Review real scenarios (1 week)"}),"\n"]})]}),"\n",(0,d.jsx)(b.h3,{children:"Common Exam Mistakes"}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:'Forgetting "from all machines"'})," - Required in every query"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Using = instead of containing"})," - Exact match vs. partial"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Incorrect boolean precedence"})," - Use parentheses"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Missing sensor parameters"})," - Some sensors need configuration"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance ignorance"})," - Not considering query impact"]}),"\n"]}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.h2,{children:"\uD83D\uDD27 Advanced Query Optimization Techniques"}),"\n",(0,d.jsx)(b.h3,{children:"Index Utilization Strategy"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Indexed Sensors"})," (Fast):"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Computer Name"}),"\n",(0,d.jsx)(b.li,{children:"Computer ID"}),"\n",(0,d.jsx)(b.li,{children:"Operating System"}),"\n",(0,d.jsx)(b.li,{children:"IP Address"}),"\n",(0,d.jsx)(b.li,{children:"Last Reboot Time"}),"\n"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Non-Indexed Sensors"})," (Slower):"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Running Processes"}),"\n",(0,d.jsx)(b.li,{children:"Installed Applications"}),"\n",(0,d.jsx)(b.li,{children:"Registry Values"}),"\n",(0,d.jsx)(b.li,{children:"File Properties"}),"\n"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Optimization Pattern"}),":"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:'// Inefficient - scans all machines\nGet Computer Name from all machines\nwhere Installed Applications containing "Chrome"\nand Operating System containing "Windows 10"\n\n// Optimized - filters on indexed field first\nGet Computer Name from all machines\nwhere Operating System containing "Windows 10"\nand Installed Applications containing "Chrome"\n'})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Performance Improvement"}),": 60-70% faster"]}),"\n",(0,d.jsx)(b.h3,{children:"Query Result Caching"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Cache Configuration"}),":"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get CPU Usage from all machines (sensor cache max age:300)\n"})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Cache Strategy Matrix"}),":"]}),"\n",(0,d.jsx)(b.p,{children:"| Sensor Type | Recommended Cache | Rationale |\n|------------|-------------------|-----------||\n| Static (OS, Model) | 86400 (24hr) | Rarely changes |\n| Semi-Static (Software) | 3600 (1hr) | Occasional updates |\n| Dynamic (CPU, Memory) | 300 (5min) | Frequent changes |\n| Critical (Security) | 0 (none) | Always fresh |"}),"\n",(0,d.jsx)(b.h3,{children:"Compound Sensor Optimization"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Single Sensor Call"}),":"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"Get {Computer Identity[Computer Name,Domain,IP Address,MAC Address]}\nfrom all machines\n"})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Benefits"}),":"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Single endpoint execution"}),"\n",(0,d.jsx)(b.li,{children:"Reduced network traffic"}),"\n",(0,d.jsx)(b.li,{children:"Consistent data snapshot"}),"\n",(0,d.jsx)(b.li,{children:"75% faster than separate queries"}),"\n"]}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.h2,{children:"\uD83D\uDCA1 Expert Tips and Tricks"}),"\n",(0,d.jsx)(b.h3,{children:"Power User Shortcuts"}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Question History"}),": Use up/down arrows to recall previous queries"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Tab Completion"}),": Start typing sensor names and press Tab"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Saved Questions"}),": Create library of common queries"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Parameterized Queries"}),": Use variables for repeated values"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Export Formats"}),": CSV for Excel, JSON for automation"]}),"\n"]}),"\n",(0,d.jsx)(b.h3,{children:"Hidden Sensor Parameters"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Advanced Parameters Most Users Don't Know"}),":"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:"// Get specific event log entries\nGet Event Log[System,1074,7 days] from all machines\n\n// Retrieve specific registry values\nGet Registry Value[HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate,WUServer]\nfrom all machines\n\n// File properties with filters\nGet File Properties[C:\\Windows\\System32\\*.dll,Version,Created,Modified,Size]\nfrom all machines\n"})}),"\n",(0,d.jsx)(b.h3,{children:"Troubleshooting Decision Tree"}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Query Returns No Results?\n├── Check "from all machines" clause\n├── Verify sensor name spelling\n├── Test on known good endpoint\n├── Check sensor platform compatibility\n└── Review filter logic and operators\n\nQuery Takes Too Long?\n├── Add indexed filter first\n├── Reduce result columns\n├── Enable sensor caching\n├── Use targeted computer group\n└── Break into multiple queries\n\nResults Don\'t Match Expectations?\n├── Verify filter operators (= vs containing)\n├── Check boolean logic parentheses\n├── Confirm sensor parameters\n├── Test components separately\n└── Review sensor documentation\n'})}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.h2,{children:"\uD83C\uDF93 Certification Practice Questions"}),"\n",(0,d.jsx)(g.default,{moduleId:"asking-questions",difficulty:"intermediate"}),"\n",(0,d.jsx)(b.h3,{children:"Sample Questions with Explanations"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Question 1"}),": You need to find all Windows servers that haven't been rebooted in the last 30 days and have critical patches missing. Which query is most efficient?"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Answer"}),":"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:'Get Computer Name from all machines\nwhere Operating System containing "Server"\nand Days Since Last Reboot &gt; 30\nand Missing Critical Patches &gt; 0\n'})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Explanation"}),": Filters on indexed OS field first for performance"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Question 2"}),": How would you identify systems with suspicious PowerShell activity?"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Answer"}),":"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:'Get Computer Name and Running Processes and Process Command Lines\nfrom all machines where\nRunning Processes containing "powershell.exe"\nand Process Command Lines containing any of ["-enc", "-ExecutionPolicy Bypass", "IEX"]\n'})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Question 3"}),": What's the best way to track certificate expiration across the enterprise?"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Answer"}),": Deploy custom sensor (see Lab 2) and query:"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-tanium",children:'Get Computer Name and Custom - Certificate Expiration Check\nfrom all machines where\nCustom - Certificate Expiration Check not containing "No Certificates"\n'})}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.h2,{children:"\uD83D\uDCC8 Performance Metrics and Benchmarks"}),"\n",(0,d.jsx)(b.h3,{children:"Query Performance Standards"}),"\n",(0,d.jsx)(b.p,{children:"| Endpoint Count | Simple Query | Complex Query | Custom Sensor |\n|---------------|--------------|---------------|---------------|\n| 100 | <1 sec | <3 sec | <5 sec |\n| 1,000 | <2 sec | <5 sec | <10 sec |\n| 10,000 | <5 sec | <15 sec | <30 sec |\n| 50,000 | <10 sec | <30 sec | <60 sec |\n| 100,000+ | <20 sec | <60 sec | <120 sec |"}),"\n",(0,d.jsx)(b.h3,{children:"Optimization Impact Results"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Test Environment"}),": 25,000 endpoints, mixed platforms"]}),"\n",(0,d.jsx)(b.p,{children:"| Optimization Technique | Performance Gain | Resource Savings |\n|-----------------------|------------------|------------------|\n| Indexed filtering first | 65% faster | 40% less CPU |\n| Sensor caching | 80% faster | 70% less network |\n| Compound sensors | 75% faster | 60% less I/O |\n| Targeted groups | 90% faster | 85% less load |"}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.h2,{children:"\uD83D\uDE80 Next Steps and Continuous Learning"}),"\n",(0,d.jsx)(b.h3,{children:"After Mastering Module 1"}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Progress to Module 2"}),": Refining Questions & Targeting"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Advanced filtering techniques"}),"\n",(0,d.jsx)(b.li,{children:"Computer group strategies"}),"\n",(0,d.jsx)(b.li,{children:"Role-based access control"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Practice Daily"}),":"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Morning: Security posture check"}),"\n",(0,d.jsx)(b.li,{children:"Afternoon: Performance monitoring"}),"\n",(0,d.jsx)(b.li,{children:"Evening: Compliance validation"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Build Query Library"}),":"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Security assessment queries"}),"\n",(0,d.jsx)(b.li,{children:"Compliance check queries"}),"\n",(0,d.jsx)(b.li,{children:"Performance monitoring queries"}),"\n",(0,d.jsx)(b.li,{children:"Incident response queries"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Join Community"}),":"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Tanium Community forums"}),"\n",(0,d.jsx)(b.li,{children:"User groups and meetups"}),"\n",(0,d.jsx)(b.li,{children:"Certification study groups"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(b.h3,{children:"Career Path Development"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Junior Analyst"})," (0-1 year)"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Master basic queries"}),"\n",(0,d.jsx)(b.li,{children:"Use pre-built sensors"}),"\n",(0,d.jsx)(b.li,{children:"Execute saved questions"}),"\n"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Senior Analyst"})," (1-3 years)"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Create custom sensors"}),"\n",(0,d.jsx)(b.li,{children:"Design query strategies"}),"\n",(0,d.jsx)(b.li,{children:"Lead incident response"}),"\n"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Platform Architect"})," (3+ years)"]}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Optimize enterprise queries"}),"\n",(0,d.jsx)(b.li,{children:"Design sensor frameworks"}),"\n",(0,d.jsx)(b.li,{children:"Train other analysts"}),"\n"]}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(f.A,{type:"success",children:(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Module 1 Complete!"})," You've mastered the foundation of Tanium querying. You're now ready to tackle advanced filtering and targeting in Module 2."]})}),"\n",(0,d.jsx)(g.default,{moduleId:"asking-questions",difficulty:"exam"}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Constrain first"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Start with OS Platform or Domain to narrow result set; then add expensive string filters."}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Field projection"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Return only needed fields (Computer Name + 1). Add more fields after validating scope."}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Sampling"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Validate logic on 10–20 endpoints before fleet queries to avoid long-running questions."}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Saved question reuse"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Save expensive logic and schedule refresh windows outside business hours."}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Pivot workflow"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Use small base cohorts and pivot into deeper sensors (process → ports → autoruns)."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(b.h3,{children:"Enterprise Query Patterns Library (25+ production-ready templates)"}),"\n",(0,d.jsx)(f.A,{title:"Production Query Strategy",children:(0,d.jsx)(b.p,{children:"These patterns are battle-tested in enterprise environments. Each includes performance considerations,\ncommon variations, and troubleshooting tips. Start with constraints, validate on small cohorts."})}),"\n",(0,d.jsx)(b.h4,{children:"Security Assessment Patterns (10 advanced templates)"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"1. Comprehensive Security Baseline Assessment"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Get Computer Name, Operating System, Antivirus Status, Firewall State, Disk Encryption Status, Last Reboot\nfrom all machines\nwhere OS Platform = "Windows"\nAND NOT Computer Name contains "-TST-"\nAND NOT Computer Name contains "-DEV-"\n'})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Complete security posture snapshot"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": ~45 seconds for 1000 endpoints"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Optimization"}),": Run during off-peak hours, save as scheduled question"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Variations"}),": Add patch status, user rights, or startup items"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"2. Advanced Persistent Threat (APT) Hunting"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Get Computer Name, Running Processes, Network Connections, Scheduled Tasks, Startup Items\nfrom all machines\nwhere (Running Processes contains "powershell" AND Running Processes contains "-enc")\nOR (Network Connections contains "ESTABLISHED" AND Network Connections contains ":443")\nOR (Scheduled Tasks contains "\\\\Microsoft\\\\Windows\\\\" AND Scheduled Tasks contains "unknown")\n'})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Detect sophisticated threats and persistence mechanisms"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": Expensive - limit to suspected compromised subnet first"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Indicators"}),": Encoded PowerShell, suspicious network activity, unusual scheduled tasks"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Follow-up"}),": Pivot to registry, file hashes, and user activity on positive matches"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"3. Lateral Movement Detection"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Get Computer Name, Logged In User, Last Logged On Users, Network Connections, Running Processes\nfrom all machines\nwhere (Logged In User contains "admin" OR Last Logged On Users contains "admin")\nAND (Network Connections contains ":445" OR Network Connections contains ":3389")\nAND Uptime &lt; 1 day\n'})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Identify recent admin activity with network access"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": Medium impact - constrain by time window"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Red flags"}),": Admin accounts on workstations, recent logins with SMB/RDP"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Investigation"}),": Check for privilege escalation and data access patterns"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"4. Ransomware Early Warning System"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Get Computer Name, Running Processes, Open Files, Disk Space, CPU Utilization\nfrom all machines\nwhere (Running Processes contains "encrypt" OR Running Processes contains "ransom")\nOR (Open Files contains ".encrypted" OR Open Files contains ".locked")\nOR (CPU Utilization &gt; 85 AND Disk Space decreased &gt; 10%)\n'})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Detect ransomware before full encryption"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": High frequency sensor - use thresholds carefully"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Automation"}),": Trigger immediate isolation on positive matches"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"False positives"}),": Legitimate backup/sync operations"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"5. Insider Threat Monitoring"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Get Computer Name, Logged In User, USB Device History, Open Files, Network Connections\nfrom all machines\nwhere (USB Device History contains "Mass Storage" AND USB Device History contains "today")\nOR (Open Files contains "confidential" OR Open Files contains "salary")\nOR (Network Connections contains "dropbox" OR Network Connections contains "drive.google")\n'})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Monitor for data exfiltration activities"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": Privacy considerations - ensure proper authorization"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Compliance"}),": Log all queries for audit purposes"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Pattern analysis"}),": Look for unusual after-hours activity"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"6. Vulnerability Assessment Automation"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Get Computer Name, Installed Applications, Java Versions, Browser Extensions, OS Build Number\nfrom all machines\nwhere (Java Versions matches "1\\.[0-7]" OR Java Versions contains "old")\nOR (Browser Extensions contains "flash" OR Browser Extensions contains "silverlight")\nOR (OS Build Number < "22621" AND Operating System contains "Windows 11")\n'})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Identify systems with known vulnerable software"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": Application queries are expensive - use OS constraints"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Prioritization"}),": Focus on internet-facing and critical systems first"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Remediation"}),": Auto-generate deployment packages for updates"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"7. Compliance Violation Detection"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Get Computer Name, Local Administrators, PowerShell Execution Policy, Installed Applications, Firewall State\nfrom all machines\nwhere (Local Administrators contains "Everyone" OR Local Administrators count &gt; 5)\nOR (PowerShell Execution Policy = "Unrestricted" OR PowerShell Execution Policy = "Bypass")\nOR (Installed Applications contains "TeamViewer" AND NOT Installed Applications contains "corporate")\nOR Firewall State = "Off"\n'})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Detect policy violations and security misconfigurations"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": Complex logic - test on pilot group first"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Reporting"}),": Generate executive dashboard from results"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Remediation"}),": Automated GPO deployment for common violations"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"8. Shadow IT Discovery"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Get Computer Name, Installed Applications, Running Applications, Browser Extensions, Network Connections\nfrom all machines\nwhere (Installed Applications contains "Slack" AND NOT Installed Applications contains "Enterprise")\nOR (Running Applications contains "zoom" AND NOT Running Applications contains "corporate")\nOR (Browser Extensions contains "password manager" AND NOT Browser Extensions contains "approved")\nOR (Network Connections contains "amazonaws" OR Network Connections contains "azure")\n'})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Identify unauthorized cloud services and applications"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": Network queries are expensive - schedule during maintenance windows"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Business impact"}),": Coordinate with compliance team before enforcement"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Alternatives"}),": Offer approved alternatives for discovered shadow IT"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"9. Privileged Access Audit"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Get Computer Name, Local Administrators, Logged In User, Last Logged On Users, User Rights\nfrom all machines\nwhere (Local Administrators contains "Domain Admins" OR Local Administrators contains "Enterprise Admins")\nOR (User Rights contains "SeDebugPrivilege" OR User Rights contains "SeTakeOwnershipPrivilege")\nOR (Logged In User contains "admin" AND Computer Name contains "WKS-")\n'})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Audit privileged access across the environment"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": User rights queries can be slow - use domain constraints"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Frequency"}),": Run weekly and compare against baseline"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Escalation"}),": Flag any unexpected changes for immediate review"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"10. Data Loss Prevention (DLP) Monitoring"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Get Computer Name, Open Files, Running Processes, Network Connections, USB Device History\nfrom all machines\nwhere (Open Files contains "*.pst" OR Open Files contains "customer_data")\nOR (Running Processes contains "robocopy" OR Running Processes contains "xcopy")\nOR (Network Connections contains "ftp" OR Network Connections contains "sftp")\nOR (USB Device History contains "today" AND USB Device History contains "&gt; 1 GB")\n'})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Monitor for potential data exfiltration activities"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": File system queries are intensive - use time windows"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Privacy"}),": Ensure compliance with employee monitoring policies"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Integration"}),": Connect to SIEM for correlation with other security events"]}),"\n"]}),"\n",(0,d.jsx)(b.h4,{children:"Operational Excellence Patterns (10 comprehensive templates)"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"11. Infrastructure Health Dashboard"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Get Computer Name, CPU Utilization, Memory Utilization, Disk Space, Uptime, Tanium Client Version\nfrom all machines\nwhere (CPU Utilization &gt; 80 OR Memory Utilization &gt; 85 OR Disk Space &lt; 15%)\nOR (Uptime &gt; 30 days OR Tanium Client Version < "7.5.0")\n'})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Proactive infrastructure monitoring"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": Real-time metrics - cache results for dashboards"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Thresholds"}),": Adjust based on environment baseline"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Automation"}),": Auto-create service tickets for threshold violations"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"12. Patch Management Effectiveness"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Get Computer Name, OS Build Number, Installed Patches, Last Reboot, Automatic Updates\nfrom all machines\nwhere (OS Build Number < "latest-1" OR NOT Installed Patches contains "latest-security-update")\nOR (Last Reboot older than 7 days AND Automatic Updates = "Enabled")\n'})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Measure patch deployment success rates"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": Patch queries are expensive - run weekly"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Reporting"}),": Generate compliance reports for management"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Remediation"}),": Auto-schedule maintenance windows for non-compliant systems"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"13. License Compliance Monitoring"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Get Computer Name, Installed Applications, Operating System, Physical Memory, CPU Model\nfrom all machines\nwhere (Installed Applications contains "Office 365" AND NOT Installed Applications contains "licensed")\nOR (Operating System contains "Enterprise" AND Physical Memory &lt; 4 GB)\nOR (Installed Applications contains "Adobe Creative" AND CPU Model contains "i3")\n'})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Ensure software licensing compliance"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": Application inventory is slow - run monthly"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Legal"}),": Coordinate with legal team for compliance requirements"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Cost optimization"}),": Identify over-licensed or under-utilized software"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"14. Asset Lifecycle Management"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Get Computer Name, Manufacturer, Model, Asset Tag, CPU Model, Physical Memory, Last Reboot\nfrom all machines\nwhere (Manufacturer = "Dell" AND Model contains "OptiPlex" AND Model contains "3020")\nOR (CPU Model contains "Core 2" OR CPU Model contains "Pentium")\nOR (Physical Memory &lt; 8 GB AND Model not contains "Thin Client")\nOR (Asset Tag contains "2018" OR Asset Tag contains "2019")\n'})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Identify systems approaching end-of-life"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": Hardware queries are fast - safe for frequent execution"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Business planning"}),": Support hardware refresh planning"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Cost management"}),": Identify systems requiring immediate replacement"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"15. Security Tool Effectiveness"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Get Computer Name, Antivirus Status, Firewall State, Disk Encryption Status, OS Build Number, Last Reboot\nfrom all machines\nwhere (Antivirus Status contains "disabled" OR Antivirus Status contains "out of date")\nOR (Firewall State = "Off" OR Disk Encryption Status != "Enabled")\nOR (OS Build Number < "security-baseline" OR Last Reboot older than 14 days)\n'})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Validate security control effectiveness"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": Security sensors are generally fast"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Alerting"}),": Immediate escalation for disabled security controls"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Trending"}),": Track improvement over time"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"16. Remote Work Readiness Assessment"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Get Computer Name, VPN Software, Wi-Fi Profiles, Battery Health, Docking State, Webcam Status\nfrom all machines\nwhere (NOT Installed Applications contains "VPN" OR VPN Software = "Not Connected")\nOR (Wi-Fi Profiles not contains "Corporate" OR Battery Health &lt; 70%)\nOR (Model contains "Desktop" AND Location = "Remote")\n'})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Ensure remote workers have proper setup"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": Mix of fast and slow sensors - optimize query order"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"User experience"}),": Proactive identification of remote work issues"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Deployment"}),": Auto-provision missing remote work tools"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"17. Change Management Validation"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Get Computer Name, Installed Applications, Services, Registry Keys, File Versions, Last Reboot\nfrom all machines\nwhere (Installed Applications contains "NewApp v2.0" AND Services not contains "NewApp Service")\nOR (Registry Keys contains "HKLM\\\\SOFTWARE\\\\NewApp" AND File Versions not contains "2.0.0")\nOR (Last Reboot older than 1 day AND Installed Applications contains "requires restart")\n'})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Validate successful change deployments"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": Comprehensive validation is expensive"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Quality assurance"}),": Ensure changes deployed correctly"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Rollback"}),": Identify systems requiring rollback procedures"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"18. Capacity Planning Analytics"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:"Get Computer Name, CPU Utilization, Memory Utilization, Disk Space, Network Utilization, Uptime\nfrom all machines\nwhere (CPU Utilization average &gt; 60 OR Memory Utilization average &gt; 70)\nOR (Disk Space growth rate &gt; 10% OR Network Utilization peak &gt; 80%)\n"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Identify systems approaching capacity limits"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": Trending data requires historical context"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Forecasting"}),": Support infrastructure planning decisions"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Optimization"}),": Identify candidates for hardware upgrades"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"19. Backup and Recovery Validation"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Get Computer Name, Backup Software, Last Backup, Critical Files, Database Status, Replication Status\nfrom all machines\nwhere (NOT Installed Applications contains "Backup Agent" OR Last Backup older than 24 hours)\nOR (Critical Files contains "database" AND Database Status != "Backed Up")\nOR (Replication Status = "Failed" OR Replication Status = "Delayed")\n'})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Ensure backup systems are functioning properly"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": File system queries can be slow"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"RTO/RPO"}),": Validate recovery time and point objectives"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Testing"}),": Regular backup restoration testing"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"20. Endpoint Configuration Drift"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Get Computer Name, Group Policy Results, Registry Keys, Services, Installed Applications, Time Zone\nfrom all machines\nwhere (Group Policy Results contains "failed" OR Group Policy Results contains "not applied")\nOR (Services contains "required service" AND Services contains "stopped")\nOR (Time Zone != "Corporate Standard" OR DNS Server != "Corporate DNS")\n'})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Purpose"}),": Detect configuration drift from standards"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance"}),": Policy queries can be expensive"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Compliance"}),": Maintain configuration baselines"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Remediation"}),": Automated policy re-application"]}),"\n"]}),"\n",(0,d.jsx)(b.h4,{children:"Performance Optimization Query Patterns (5 advanced patterns)"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"21. Query Performance Optimization Framework"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-mermaid",children:"flowchart TD\n    A[Query Request] --\x3e B{Size Estimation}\n    B --\x3e|&lt; 100 endpoints| C[Direct Execution]\n    B --\x3e|100-1000 endpoints| D[Add OS Platform Filter]\n    B --\x3e|&gt; 1000 endpoints| E[Multi-stage Approach]\n    C --\x3e F[Execute Query]\n    D --\x3e G[Add Time Constraints]\n    E --\x3e H[Partition by Subnet/OU]\n    G --\x3e F\n    H --\x3e I[Batch Execution]\n    I --\x3e J[Aggregate Results]\n    F --\x3e K[Validate Results]\n    J --\x3e K\n    K --\x3e L[Performance Metrics]\n"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"22. High-Performance Query Construction Patterns"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.em,{children:"Pattern A: Constraint Ordering for Maximum Efficiency"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'# Optimal order: Platform → Domain → Subnet → String filters\nGet Computer Name, Target_Sensor\nfrom all machines\nwhere OS Platform = "Windows"          # Fast: Indexed constraint\nAND Domain contains "CORP"             # Medium: Domain lookup\nAND IP Address contains "10.50."       # Medium: Network constraint\nAND Computer Name contains "WKS-"      # Slower: String operation\nAND Target_Sensor contains "criteria"  # Slowest: Sensor evaluation\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.em,{children:"Pattern B: Efficient Field Projection"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'# Return minimal fields initially\nGet Computer Name, Critical_Field_Only\nfrom all machines where [constraints]\n\n# Then pivot for additional details on subset\nGet Computer Name, Detailed_Field_1, Detailed_Field_2, Detailed_Field_3\nfrom machines with names in ("HOST001", "HOST002", "HOST003")\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.em,{children:"Pattern C: Time-Based Optimization"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:"# Use temporal constraints to reduce dataset\nGet Computer Name, Event_Data\nfrom all machines\nwhere Last Seen within last 24 hours     # Exclude stale systems\nAND Event_Data newer than 1 week         # Recent events only\nAND [other constraints]\n"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"23. Query Caching and Reuse Strategies"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.em,{children:"Saved Question Hierarchy:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Base Queries"}),": Fundamental system info, updated every 4 hours"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Security Queries"}),": Threat detection, updated every hour"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance Queries"}),": Resource monitoring, updated every 15 minutes"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Compliance Queries"}),": Policy validation, updated daily"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.em,{children:"Example Saved Question Library:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'# Base-SysInfo-Windows (4 hour refresh)\nGet Computer Name, Operating System, IP Address, Uptime, Domain\nfrom all machines where OS Platform = "Windows"\n\n# Security-AV-Status (1 hour refresh)\nGet Computer Name, Antivirus Status, Last Update\nfrom machines in saved question "Base-SysInfo-Windows"\nwhere Antivirus Status contains "disabled" OR Last Update older than 7 days\n\n# Performance-HighCPU (15 minute refresh)\nGet Computer Name, CPU Utilization, Top Processes by CPU\nfrom machines in saved question "Base-SysInfo-Windows"\nwhere CPU Utilization &gt; 80\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"24. Advanced Regex and String Matching Patterns"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.em,{children:"Version Pattern Matching:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'# Match Office versions 16.0.15000 and higher\nGet Computer Name, Application Versions\nfrom all machines\nwhere Application Versions matches "Office.*16\\.0\\.1[5-9][0-9]{3}"\n\n# Match IP addresses in development subnets\nGet Computer Name, IP Address\nfrom all machines\nwhere IP Address matches "^(10\\.20\\.|192\\.168\\.1[0-9]{2}\\.)"\n\n# Match suspicious process names\nGet Computer Name, Running Processes\nfrom all machines\nwhere Running Processes matches "[a-z]{1,8}\\.(exe|bat|ps1|vbs)$"\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.em,{children:"Complex Boolean Logic:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'# Nested conditions with proper precedence\nGet Computer Name, Security_Assessment\nfrom all machines\nwhere (OS Platform = "Windows" AND OS Build Number < "22621")\nAND (\n  (Antivirus Status contains "disabled" OR Firewall State = "Off")\n  OR\n  (NOT Installed Patches contains "KB5030219" AND Uptime &gt; 30 days)\n)\nAND NOT Computer Name contains "-DEV-"\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"25. Error Handling and Troubleshooting Patterns"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.em,{children:"Progressive Query Validation:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'# Step 1: Test sensor availability\nGet Computer Name, Test_Sensor from 10 machines where OS Platform = "Windows"\n\n# Step 2: Validate filter logic\nGet Computer Name from 10 machines where [filter_conditions]\n\n# Step 3: Test full query on small subset\nGet [all_fields] from 25 machines where [all_conditions]\n\n# Step 4: Full deployment with monitoring\nGet [all_fields] from all machines where [all_conditions]\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.em,{children:"Fallback Query Patterns:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'# Primary query with fallback for missing sensors\nTry: Get Computer Name, Primary_Sensor from all machines where [conditions]\nFallback: Get Computer Name, Alternative_Sensor from all machines where [conditions]\nEmergency: Get Computer Name, Basic_Info from all machines where OS Platform = "Windows"\n'})}),"\n",(0,d.jsx)(b.h3,{children:"Query Performance Benchmarking and Optimization"}),"\n",(0,d.jsx)(f.A,{title:"Performance Testing Protocol",children:(0,d.jsx)(b.p,{children:"Always benchmark queries on representative subsets before fleet deployment. Document\nexecution times, resource usage, and accuracy metrics for continuous optimization."})}),"\n",(0,d.jsx)(b.h4,{children:"Performance Metrics and Thresholds"}),"\n",(0,d.jsx)(b.p,{children:"| Query Type | Target Response Time | Endpoint Limit | Resource Impact |\n|------------|---------------------|----------------|-----------------|\n| Basic Info (3 fields) | < 30 seconds | 5000+ | Low |\n| Security Assessment | < 2 minutes | 2000 | Medium |\n| Application Inventory | < 5 minutes | 1000 | High |\n| Performance Monitoring | < 1 minute | 3000 | Medium |\n| Custom Sensors | Variable | 500-1000 | High |"}),"\n",(0,d.jsx)(b.h4,{children:"Optimization Techniques by Query Category"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Fast Queries (< 30 seconds)"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"System information sensors (OS, hostname, IP)"}),"\n",(0,d.jsx)(b.li,{children:"Hardware inventory (manufacturer, model, memory)"}),"\n",(0,d.jsx)(b.li,{children:"Basic security state (antivirus, firewall)"}),"\n",(0,d.jsx)(b.li,{children:"Simple registry values"}),"\n",(0,d.jsx)(b.li,{children:"File existence checks"}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Medium Queries (30 seconds - 2 minutes)"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Process and service enumeration"}),"\n",(0,d.jsx)(b.li,{children:"Network connection lists"}),"\n",(0,d.jsx)(b.li,{children:"Windows event log parsing"}),"\n",(0,d.jsx)(b.li,{children:"Group policy results"}),"\n",(0,d.jsx)(b.li,{children:"Certificate store queries"}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Slow Queries (> 2 minutes)"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Complete application inventory"}),"\n",(0,d.jsx)(b.li,{children:"File system scanning"}),"\n",(0,d.jsx)(b.li,{children:"Deep registry traversal"}),"\n",(0,d.jsx)(b.li,{children:"Log file analysis"}),"\n",(0,d.jsx)(b.li,{children:"Complex custom sensors"}),"\n"]}),"\n",(0,d.jsx)(b.h4,{children:"Query Optimization Decision Tree"}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-mermaid",children:"flowchart TD\n    A[Query Request] --\x3e B{Expected Runtime?}\n    B --\x3e|&lt; 30s| C[Execute Immediately]\n    B --\x3e|30s-2m| D[Add Constraints]\n    B --\x3e|&gt; 2m| E[Redesign Required]\n\n    D --\x3e F{Constraint Added?}\n    F --\x3e|Yes| G[Test on 50 Endpoints]\n    F --\x3e|No| H[Split into Stages]\n\n    E --\x3e I[Consider Alternatives]\n    I --\x3e J[Saved Question Chain]\n    I --\x3e K[Background Scheduling]\n    I --\x3e L[Custom Sensor]\n\n    G --\x3e M{Performance OK?}\n    M --\x3e|Yes| N[Deploy to Fleet]\n    M --\x3e|No| O[Further Optimization]\n\n    H --\x3e P[Stage 1: Basic Filter]\n    P --\x3e Q[Stage 2: Detailed Query]\n    Q --\x3e R[Combine Results]\n"})}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.h2,{children:"Custom Sensor Creation Guide"}),"\n",(0,d.jsx)(f.A,{title:"When to build a custom sensor?",children:(0,d.jsx)(b.p,{children:"When built-in sensors cannot express a required check, when data must be normalized from\na unique file/registry path, or when you need environment-specific logic."})}),"\n",(0,d.jsx)(b.h3,{children:"PowerShell Sensors (5 examples)"}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-powershell",children:'# 1) Check Windows Feature\nGet-WindowsOptionalFeature -Online -FeatureName Containers | Select-Object State\n\n# 2) Registry value\nGet-ItemProperty -Path "HKLM:\\\\SOFTWARE\\\\Contoso" -Name "Version" -ErrorAction SilentlyContinue | Select-Object Version\n\n# 3) Service state\nGet-Service -Name "Tanium Client" | Select-Object Status\n\n# 4) File hash\nGet-FileHash -Path "C:\\\\Program Files\\\\App\\\\app.exe" -Algorithm SHA256 | Select-Object Hash\n\n# 5) Disk free percent\nGet-PSDrive -PSProvider FileSystem | Select-Object Name, @{N=\'FreePct\';E={[math]::Round(($_.Free/$_.Used+$_.Free)*100,0)}}\n'})}),"\n",(0,d.jsx)(b.h3,{children:"Bash Sensors (5 examples)"}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-bash",children:"# 1) Service status (systemd)\nsystemctl is-active taniumclient || echo inactive\n\n# 2) Open port check\nss -lnt | awk '{print $4}' | grep -E ':22$' | wc -l\n\n# 3) Package version\ndpkg -s openssl 2>/dev/null | grep -i '^version' | cut -d ' ' -f2\n\n# 4) Kernel version\nuname -r\n\n# 5) Disk free percent\ndf -h / | tail -1 | awk '{print $5}'\n"})}),"\n",(0,d.jsx)(b.h4,{children:"Additional Bash Sensors (5 more)"}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-bash",children:"# 6) Service enabled at boot (systemd)\nsystemctl is-enabled taniumclient 2>/dev/null || echo disabled\n\n# 7) Count of listening TCP ports\nss -lnt | tail -n +2 | wc -l\n\n# 8) CPU model string\nlscpu | grep -i 'model name' | head -1 | cut -d: -f2 | xargs\n\n# 9) Last reboot timestamp\nwho -b | awk '{print $3, $4}'\n\n# 10) Check if disk encryption (LUKS) devices exist\nlsblk -o NAME,TYPE | grep -qi crypt && echo encrypted || echo not_encrypted\n"})}),"\n",(0,d.jsx)(b.h3,{children:"Python Sensors (3 examples)"}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-python",children:"#!/usr/bin/env python3\n# 1) JSON config read\nimport json, sys\ntry:\n    with open('/etc/app/config.json') as f:\n        data = json.load(f)\n    print(data.get('enabled', False))\nexcept Exception:\n    print('unknown')\n\n# 2) Simple HTTP reachability (internal health)\nimport urllib.request\ntry:\n    urllib.request.urlopen('http://127.0.0.1:8080/health', timeout=2)\n    print('ok')\nexcept Exception:\n    print('down')\n\n# 3) Log tail pattern match\nimport re\ncount = 0\nfor line in open('/var/log/app/app.log', errors='ignore'):\n    if re.search(r'ERROR', line):\n        count += 1\nprint(count)\n"})}),"\n",(0,d.jsx)(b.h4,{children:"Additional PowerShell Sensors (5 more)"}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-powershell",children:"# 6) Pending reboot state\nif (Test-Path 'HKLM:\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\WindowsUpdate\\\\Auto Update\\\\RebootRequired') { 'Pending' } else { 'NotPending' }\n\n# 7) Top CPU process name\nGet-Process | Sort-Object CPU -Descending | Select-Object -First 1 -ExpandProperty ProcessName\n\n# 8) Disk free percent (system drive)\n$sys = Get-CimInstance Win32_LogicalDisk -Filter \"DeviceID='C:'\"; [math]::Round(($sys.FreeSpace/$sys.Size)*100,0)\n\n# 9) Secure Boot state\ntry { if (Confirm-SecureBootUEFI) { 'On' } else { 'Off' } } catch { 'Unknown' }\n\n# 10) BitLocker protection status\n(Get-BitLockerVolume -MountPoint 'C:' -ErrorAction SilentlyContinue).ProtectionStatus\n"})}),"\n",(0,d.jsx)(b.h3,{children:"Flowchart: Query Construction Process"}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-mermaid",children:"flowchart TD\n  A[Start] --\x3e B[Define Objective]\n  B --\x3e C{Choose Sensor}\n  C --\x3e D[Constrain Targets]\n  D --\x3e E[Add Filters]\n  E --\x3e F[Project Minimal Fields]\n  F --\x3e G[Pilot on Sample Cohort]\n  G --\x3e H{Accurate + Fast?}\n  H -- Yes --\x3e I[Save Question]\n  H -- No --\x3e C\n  I --\x3e J[Schedule/Share]\n"})}),"\n",(0,d.jsx)(b.h3,{children:"Best Practices and Testing"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Keep output deterministic and concise (avoid verbose logs)"}),"\n",(0,d.jsx)(b.li,{children:"Prefer platform-native tools (PowerShell on Windows, Bash on Linux/macOS)"}),"\n",(0,d.jsx)(b.li,{children:"Handle errors gracefully and return a known fallback value"}),"\n",(0,d.jsx)(b.li,{children:"Benchmark sensors on small cohorts; avoid heavy filesystem scans"}),"\n",(0,d.jsx)(b.li,{children:"Version your custom sensors and document purpose, owner, and expected output schema"}),"\n"]}),"\n",(0,d.jsx)(b.h2,{children:"Advanced Custom Sensor Development"}),"\n",(0,d.jsx)(f.A,{title:"Enterprise Sensor Development Strategy",children:(0,d.jsx)(b.p,{children:"Custom sensors should be modular, well-documented, and tested across diverse environments.\nFollow enterprise development practices including version control, peer review, and staged deployment."})}),"\n",(0,d.jsx)(b.h3,{children:"Step-by-Step Custom Sensor Creation Process"}),"\n",(0,d.jsx)(b.h4,{children:"Phase 1: Requirements Analysis and Design"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"1. Define Sensor Objectives"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-yaml",children:'Sensor Name: Windows Defender Real-Time Protection Status\nPurpose: Validate Windows Defender real-time protection is enabled\nPlatform: Windows 10/11, Windows Server 2016+\nExpected Output: "Enabled" | "Disabled" | "Not Available" | "Error"\nPerformance Target: &lt; 2 seconds per endpoint\nError Handling: Graceful fallback to registry check if WMI fails\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"2. Research Data Sources"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Primary"}),": WMI (Win32_OperatingSystem, MSFT_MpPreference)"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Secondary"}),": Registry (HKLM\\SOFTWARE\\Microsoft\\Windows Defender)"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Tertiary"}),": PowerShell Get-MpPreference cmdlet"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Fallback"}),": Service status check"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"3. Design Sensor Logic Flow"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-mermaid",children:'flowchart TD\n    A[Start] --\x3e B{WMI Available?}\n    B --\x3e|Yes| C[Query MSFT_MpPreference]\n    B --\x3e|No| D[Check Registry]\n    C --\x3e E{Real-time Protection?}\n    E --\x3e|True| F[Return "Enabled"]\n    E --\x3e|False| G[Return "Disabled"]\n    E --\x3e|Error| D\n    D --\x3e H{Registry Value Found?}\n    H --\x3e|Yes| I[Parse Registry Value]\n    H --\x3e|No| J[Check Service Status]\n    I --\x3e K{Value = 1?}\n    K --\x3e|Yes| F\n    K --\x3e|No| G\n    J --\x3e L{Service Running?}\n    L --\x3e|Yes| M[Return "Service Running"]\n    L --\x3e|No| N[Return "Not Available"]\n'})}),"\n",(0,d.jsx)(b.h4,{children:"Phase 2: Development and Implementation"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"4. PowerShell Sensor Implementation (Complete Example)"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-powershell",children:'#region Sensor Metadata\n# Name: Windows Defender Real-Time Protection Status\n# Version: 1.2.0\n# Author: Enterprise Security Team\n# Created: 2024-01-15\n# Modified: 2024-09-27\n# Description: Checks Windows Defender real-time protection status using multiple methods\n# Platforms: Windows 10/11, Windows Server 2016+\n# Dependencies: None (uses built-in PowerShell and WMI)\n# Expected Runtime: 1-3 seconds\n#endregion\n\n#region Error Handling Setup\n$ErrorActionPreference = "SilentlyContinue"\n$VerbosePreference = "SilentlyContinue"\n\n# Define consistent output values\n$OutputEnabled = "Enabled"\n$OutputDisabled = "Disabled"\n$OutputNotAvailable = "Not Available"\n$OutputError = "Error"\n#endregion\n\n#region Primary Method: WMI Query\ntry {\n    Write-Verbose "Attempting WMI query for MSFT_MpPreference"\n    $DefenderPrefs = Get-CimInstance -Namespace "Root\\Microsoft\\Windows\\Defender" -ClassName "MSFT_MpPreference" -ErrorAction Stop\n\n    if ($DefenderPrefs -and $DefenderPrefs.DisableRealtimeMonitoring -ne $null) {\n        if ($DefenderPrefs.DisableRealtimeMonitoring -eq $false) {\n            Write-Output $OutputEnabled\n            exit 0\n        } else {\n            Write-Output $OutputDisabled\n            exit 0\n        }\n    }\n} catch {\n    Write-Verbose "WMI query failed: $($_.Exception.Message)"\n}\n#endregion\n\n#region Secondary Method: Registry Check\ntry {\n    Write-Verbose "Attempting registry check"\n    $RegPath = "HKLM:\\SOFTWARE\\Microsoft\\Windows Defender\\Real-Time Protection"\n    $RegValue = Get-ItemProperty -Path $RegPath -Name "DisableRealtimeMonitoring" -ErrorAction Stop\n\n    if ($RegValue.DisableRealtimeMonitoring -eq 0) {\n        Write-Output $OutputEnabled\n        exit 0\n    } elseif ($RegValue.DisableRealtimeMonitoring -eq 1) {\n        Write-Output $OutputDisabled\n        exit 0\n    }\n} catch {\n    Write-Verbose "Registry check failed: $($_.Exception.Message)"\n}\n#endregion\n\n#region Tertiary Method: PowerShell Cmdlet\ntry {\n    Write-Verbose "Attempting Get-MpPreference cmdlet"\n    $MpPrefs = Get-MpPreference -ErrorAction Stop\n\n    if ($MpPrefs -and $MpPrefs.DisableRealtimeMonitoring -ne $null) {\n        if ($MpPrefs.DisableRealtimeMonitoring -eq $false) {\n            Write-Output $OutputEnabled\n            exit 0\n        } else {\n            Write-Output $OutputDisabled\n            exit 0\n        }\n    }\n} catch {\n    Write-Verbose "Get-MpPreference failed: $($_.Exception.Message)"\n}\n#endregion\n\n#region Fallback Method: Service Status\ntry {\n    Write-Verbose "Attempting service status check"\n    $DefenderService = Get-Service -Name "WinDefend" -ErrorAction Stop\n\n    if ($DefenderService.Status -eq "Running") {\n        # Service is running but can\'t determine real-time status\n        Write-Output "Service Running - Status Unknown"\n        exit 0\n    } else {\n        Write-Output $OutputNotAvailable\n        exit 0\n    }\n} catch {\n    Write-Verbose "Service check failed: $($_.Exception.Message)"\n}\n#endregion\n\n#region Final Fallback\nWrite-Output $OutputError\n#endregion\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"5. Linux/macOS Sensor Implementation (Complete Example)"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-bash",children:'#!/bin/bash\n#\n# Name: ClamAV Real-Time Protection Status\n# Version: 1.1.0\n# Author: Enterprise Security Team\n# Description: Checks ClamAV daemon status and real-time scanning\n# Platforms: Linux (CentOS, Ubuntu, RHEL), macOS\n# Dependencies: ClamAV installation\n# Expected Runtime: &lt; 2 seconds\n\n# Configuration\nCLAMAV_DAEMON="clamd"\nCLAMAV_CONFIG="/etc/clamd.conf"\nFRESHCLAM_CONFIG="/etc/freshclam.conf"\n\n# Output constants\nOUTPUT_ENABLED="Enabled"\nOUTPUT_DISABLED="Disabled"\nOUTPUT_NOT_AVAILABLE="Not Available"\nOUTPUT_ERROR="Error"\n\n# Logging function\nlog_debug() {\n    if [[ "${DEBUG:-0}" == "1" ]]; then\n        echo "DEBUG: $1" >&2\n    fi\n}\n\n# Check if ClamAV daemon is running\ncheck_daemon_status() {\n    log_debug "Checking ClamAV daemon status"\n\n    # Method 1: systemctl (modern Linux)\n    if command -v systemctl >/dev/null 2>&1; then\n        if systemctl is-active --quiet clamd 2>/dev/null; then\n            return 0\n        fi\n        if systemctl is-active --quiet clamav-daemon 2>/dev/null; then\n            return 0\n        fi\n    fi\n\n    # Method 2: service command (older Linux)\n    if command -v service >/dev/null 2>&1; then\n        if service clamd status >/dev/null 2>&1; then\n            return 0\n        fi\n        if service clamav-daemon status >/dev/null 2>&1; then\n            return 0\n        fi\n    fi\n\n    # Method 3: Process check\n    if pgrep -x "clamd" >/dev/null 2>&1; then\n        return 0\n    fi\n\n    # Method 4: macOS launchctl\n    if [[ "$OSTYPE" == "darwin"* ]]; then\n        if launchctl list | grep -q "clamd" 2>/dev/null; then\n            return 0\n        fi\n    fi\n\n    return 1\n}\n\n# Check real-time scanning configuration\ncheck_realtime_config() {\n    log_debug "Checking real-time scanning configuration"\n\n    # Check for common config files\n    for config_file in "$CLAMAV_CONFIG" "/etc/clamav/clamd.conf" "/usr/local/etc/clamd.conf"; do\n        if [[ -f "$config_file" ]]; then\n            log_debug "Found config file: $config_file"\n\n            # Check if on-access scanning is enabled\n            if grep -q "^ScanOnAccess yes" "$config_file" 2>/dev/null; then\n                return 0\n            fi\n            if grep -q "^OnAccessIncludePath" "$config_file" 2>/dev/null; then\n                return 0\n            fi\n        fi\n    done\n\n    return 1\n}\n\n# Check virus database freshness\ncheck_database_freshness() {\n    log_debug "Checking virus database freshness"\n\n    # Common database locations\n    for db_path in "/var/lib/clamav" "/usr/local/share/clamav" "/opt/homebrew/var/lib/clamav"; do\n        if [[ -d "$db_path" ]]; then\n            # Check if main database was updated in last 7 days\n            if find "$db_path" -name "main.cvd" -o -name "main.cld" -newermt "7 days ago" 2>/dev/null | grep -q .; then\n                return 0\n            fi\n        fi\n    done\n\n    return 1\n}\n\n# Main execution\nmain() {\n    log_debug "Starting ClamAV status check"\n\n    # Check if ClamAV daemon is running\n    if ! check_daemon_status; then\n        echo "$OUTPUT_NOT_AVAILABLE"\n        exit 0\n    fi\n\n    # Daemon is running, check real-time scanning\n    if check_realtime_config; then\n        # Real-time scanning is configured, check database freshness\n        if check_database_freshness; then\n            echo "$OUTPUT_ENABLED"\n        else {\n            echo "Enabled - Database Outdated"\n        fi\n    else\n        echo "$OUTPUT_DISABLED"\n    fi\n}\n\n# Execute main function\nmain "$@"\n'})}),"\n",(0,d.jsx)(b.h4,{children:"Phase 3: Testing and Validation"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"6. Comprehensive Testing Framework"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-powershell",children:'# Custom Sensor Testing Framework\n# Test-CustomSensor.ps1\n\nparam(\n    [Parameter(Mandatory=$true)]\n    [string]$SensorScript,\n\n    [Parameter(Mandatory=$false)]\n    [string[]]$TestSystems = @("localhost"),\n\n    [Parameter(Mandatory=$false)]\n    [int]$TimeoutSeconds = 30,\n\n    [Parameter(Mandatory=$false)]\n    [switch]$Detailed\n)\n\nfunction Test-SensorPerformance {\n    param($Script, $System)\n\n    $StartTime = Get-Date\n    $Result = Invoke-Command -ComputerName $System -ScriptBlock {\n        & $using:Script\n    } -ErrorAction SilentlyContinue\n    $EndTime = Get-Date\n    $Duration = ($EndTime - $StartTime).TotalSeconds\n\n    return @{\n        System = $System\n        Result = $Result\n        Duration = $Duration\n        Success = $Result -ne $null\n    }\n}\n\nfunction Test-SensorConsistency {\n    param($Script, $System, $Iterations = 5)\n\n    $Results = @()\n    for ($i = 1; $i -le $Iterations; $i++) {\n        $TestResult = Test-SensorPerformance -Script $Script -System $System\n        $Results += $TestResult\n        Start-Sleep -Milliseconds 500\n    }\n\n    $UniqueResults = $Results | Select-Object -ExpandProperty Result | Sort-Object -Unique\n    $AverageDuration = ($Results | Measure-Object -Property Duration -Average).Average\n\n    return @{\n        ConsistentOutput = $UniqueResults.Count -eq 1\n        UniqueOutputs = $UniqueResults\n        AverageDuration = $AverageDuration\n        AllResults = $Results\n    }\n}\n\n# Execute comprehensive tests\n$TestResults = @()\nforeach ($System in $TestSystems) {\n    Write-Host "Testing sensor on $System..." -ForegroundColor Yellow\n\n    # Performance test\n    $PerfTest = Test-SensorPerformance -Script $SensorScript -System $System\n\n    # Consistency test\n    $ConsistencyTest = Test-SensorConsistency -Script $SensorScript -System $System\n\n    $TestResults += @{\n        System = $System\n        Performance = $PerfTest\n        Consistency = $ConsistencyTest\n    }\n}\n\n# Generate test report\nforeach ($Result in $TestResults) {\n    Write-Host "`n=== Test Results for $($Result.System) ===" -ForegroundColor Green\n    Write-Host "Output: $($Result.Performance.Result)"\n    Write-Host "Duration: $($Result.Performance.Duration) seconds"\n    Write-Host "Consistent: $($Result.Consistency.ConsistentOutput)"\n    Write-Host "Average Duration: $([math]::Round($Result.Consistency.AverageDuration, 2)) seconds"\n\n    if ($Detailed) {\n        Write-Host "All outputs: $($Result.Consistency.UniqueOutputs -join \', \')"\n    }\n}\n'})}),"\n",(0,d.jsx)(b.h4,{children:"Phase 4: Deployment and Monitoring"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"7. Sensor Deployment Checklist"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-yaml",children:"Pre-Deployment:\n  - [ ] Code review completed by at least 2 team members\n  - [ ] Tested on representative systems (Windows 10/11, Server 2016/2019/2022)\n  - [ ] Performance benchmarked (&lt; 5 seconds target)\n  - [ ] Error handling validated (network issues, permission problems)\n  - [ ] Documentation completed (purpose, expected outputs, troubleshooting)\n  - [ ] Version control updated with clear commit messages\n\nDeployment Strategy:\n  - [ ] Pilot group: 10-25 systems in test environment\n  - [ ] Limited production: 100-250 systems\n  - [ ] Gradual rollout: 25% weekly increments\n  - [ ] Full deployment: After 2 weeks of stable operation\n\nPost-Deployment Monitoring:\n  - [ ] Performance metrics tracking (execution time, success rate)\n  - [ ] Error rate monitoring (&lt; 5% acceptable)\n  - [ ] Output consistency validation\n  - [ ] User feedback collection\n  - [ ] Documentation updates based on real-world usage\n"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"8. Advanced Sensor Patterns and Techniques"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Pattern 1: Multi-Platform Sensor with Auto-Detection"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-powershell",children:'# Universal Security Status Sensor\n# Automatically detects platform and uses appropriate method\n\n# Platform detection\n$IsWindows = $PSVersionTable.PSVersion.Major -ge 6 ? $IsWindows : $true\n$IsLinux = $PSVersionTable.PSVersion.Major -ge 6 ? $IsLinux : $false\n$IsMacOS = $PSVersionTable.PSVersion.Major -ge 6 ? $IsMacOS : $false\n\nif ($IsWindows) {\n    # Windows Defender logic\n    try {\n        $DefenderStatus = Get-MpPreference -ErrorAction Stop\n        if ($DefenderStatus.DisableRealtimeMonitoring -eq $false) {\n            Write-Output "Windows Defender: Enabled"\n        } else {\n            Write-Output "Windows Defender: Disabled"\n        }\n    } catch {\n        Write-Output "Windows Defender: Unknown"\n    }\n} elseif ($IsLinux) {\n    # Linux security tools check\n    $SecurityTools = @()\n\n    # Check ClamAV\n    if (Get-Command clamav -ErrorAction SilentlyContinue) {\n        $SecurityTools += "ClamAV"\n    }\n\n    # Check AppArmor\n    if (Test-Path "/sys/module/apparmor") {\n        $SecurityTools += "AppArmor"\n    }\n\n    # Check SELinux\n    if (Get-Command getenforce -ErrorAction SilentlyContinue) {\n        $SecurityTools += "SELinux"\n    }\n\n    Write-Output "Linux Security: $($SecurityTools -join \', \')"\n} elseif ($IsMacOS) {\n    # macOS security check\n    try {\n        $XProtectStatus = system_profiler SPInstallHistoryDataType | Select-String -Pattern "XProtect"\n        if ($XProtectStatus) {\n            Write-Output "macOS XProtect: Active"\n        } else {\n            Write-Output "macOS XProtect: Unknown"\n        }\n    } catch {\n        Write-Output "macOS Security: Unknown"\n    }\n} else {\n    Write-Output "Unknown Platform"\n}\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Pattern 2: Sensor with Caching and Rate Limiting"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-powershell",children:'# Cached Security Assessment Sensor\n# Implements local caching to reduce system impact\n\nparam(\n    [int]$CacheExpiryMinutes = 15,\n    [string]$CacheDirectory = "$env:TEMP\\TaniumSensorCache"\n)\n\n$SensorName = "SecurityAssessment"\n$CacheFile = Join-Path $CacheDirectory "$SensorName.cache"\n\n# Ensure cache directory exists\nif (!(Test-Path $CacheDirectory)) {\n    New-Item -ItemType Directory -Path $CacheDirectory -Force | Out-Null\n}\n\n# Check cache validity\n$UseCache = $false\nif (Test-Path $CacheFile) {\n    $CacheTime = (Get-Item $CacheFile).LastWriteTime\n    $ExpiryTime = (Get-Date).AddMinutes(-$CacheExpiryMinutes)\n\n    if ($CacheTime -gt $ExpiryTime) {\n        $UseCache = $true\n    }\n}\n\nif ($UseCache) {\n    # Return cached result\n    Get-Content $CacheFile -Raw\n} else {\n    # Perform fresh assessment\n    $Assessment = @{\n        Timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"\n        Antivirus = (Get-MpPreference).DisableRealtimeMonitoring -eq $false ? "Enabled" : "Disabled"\n        Firewall = (Get-NetFirewallProfile -Profile Domain,Public,Private | Where-Object {$_.Enabled -eq $false}).Count -eq 0 ? "Enabled" : "Partial"\n        Updates = (Get-HotFix | Sort-Object InstalledOn -Descending | Select-Object -First 1).InstalledOn\n    }\n\n    $Result = $Assessment | ConvertTo-Json -Compress\n\n    # Cache the result\n    $Result | Out-File $CacheFile -Encoding UTF8\n\n    # Return result\n    $Result\n}\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Pattern 3: Sensor with Built-in Monitoring and Alerting"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-powershell",children:'# Self-Monitoring Sensor with Health Checks\n# Includes performance metrics and automatic alerting\n\n$SensorConfig = @{\n    Name = "CriticalServiceMonitor"\n    Version = "1.3.0"\n    MaxExecutionTime = 10\n    AlertThreshold = 5\n    LogPath = "$env:TEMP\\TaniumSensorLogs"\n}\n\n# Initialize logging\nif (!(Test-Path $SensorConfig.LogPath)) {\n    New-Item -ItemType Directory -Path $SensorConfig.LogPath -Force | Out-Null\n}\n\n$LogFile = Join-Path $SensorConfig.LogPath "$($SensorConfig.Name).log"\n\nfunction Write-SensorLog {\n    param($Message, $Level = "INFO")\n    $Timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"\n    "$Timestamp [$Level] $Message" | Add-Content $LogFile\n}\n\n# Start performance monitoring\n$StartTime = Get-Date\nWrite-SensorLog "Sensor execution started"\n\ntry {\n    # Critical services to monitor\n    $CriticalServices = @("Tanium Client", "Windows Defender", "BITS", "Themes")\n    $ServiceStatus = @{}\n\n    foreach ($Service in $CriticalServices) {\n        $ServiceObj = Get-Service -Name $Service -ErrorAction SilentlyContinue\n        if ($ServiceObj) {\n            $ServiceStatus[$Service] = $ServiceObj.Status.ToString()\n        } else {\n            $ServiceStatus[$Service] = "Not Found"\n        }\n    }\n\n    # Generate output\n    $Output = @{\n        Timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"\n        Services = $ServiceStatus\n        HealthCheck = "Pass"\n    }\n\n    Write-SensorLog "Service check completed successfully"\n\n} catch {\n    $Output = @{\n        Timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"\n        Error = $_.Exception.Message\n        HealthCheck = "Fail"\n    }\n\n    Write-SensorLog "Sensor execution failed: $($_.Exception.Message)" -Level "ERROR"\n}\n\n# Performance monitoring\n$ExecutionTime = ((Get-Date) - $StartTime).TotalSeconds\n$Output.ExecutionTime = [math]::Round($ExecutionTime, 2)\n\nWrite-SensorLog "Execution completed in $($Output.ExecutionTime) seconds"\n\n# Alert if execution time exceeds threshold\nif ($ExecutionTime -gt $SensorConfig.MaxExecutionTime) {\n    Write-SensorLog "ALERT: Execution time ($ExecutionTime s) exceeded threshold ($($SensorConfig.MaxExecutionTime) s)" -Level "WARN"\n}\n\n# Output result\n$Output | ConvertTo-Json -Compress\n'})}),"\n",(0,d.jsx)(b.h3,{children:"Debugging and Troubleshooting Custom Sensors"}),"\n",(0,d.jsx)(f.A,{title:"Debugging Best Practices",children:(0,d.jsx)(b.p,{children:"Effective sensor debugging requires systematic approaches, comprehensive logging,\nand standardized error handling patterns."})}),"\n",(0,d.jsx)(b.h4,{children:"Common Sensor Issues and Solutions"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Issue 1: Inconsistent Output Across Systems"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.em,{children:"Symptoms:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Same sensor returns different results on similar systems"}),"\n",(0,d.jsx)(b.li,{children:"Output format varies between endpoints"}),"\n",(0,d.jsx)(b.li,{children:'Sporadic "null" or empty results'}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.em,{children:"Debugging Steps:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-powershell",children:'# Enhanced sensor with debugging output\nparam([switch]$Debug)\n\nif ($Debug) {\n    $VerbosePreference = "Continue"\n    $DebugPreference = "Continue"\n}\n\nWrite-Verbose "Starting sensor execution on $env:COMPUTERNAME"\nWrite-Verbose "PowerShell version: $($PSVersionTable.PSVersion)"\nWrite-Verbose "OS Version: $([Environment]::OSVersion)"\n\n# Your sensor logic here with verbose logging\ntry {\n    Write-Verbose "Attempting primary method..."\n    $Result = Get-SomeData -ErrorAction Stop\n    Write-Verbose "Primary method successful: $Result"\n} catch {\n    Write-Verbose "Primary method failed: $($_.Exception.Message)"\n    Write-Verbose "Attempting fallback method..."\n    # Fallback logic\n}\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.em,{children:"Solution Patterns:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Implement comprehensive error handling with fallback methods"}),"\n",(0,d.jsx)(b.li,{children:"Use consistent output formatting (JSON or structured text)"}),"\n",(0,d.jsx)(b.li,{children:"Add platform and version detection"}),"\n",(0,d.jsx)(b.li,{children:"Test across diverse OS versions and configurations"}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Issue 2: Performance Degradation Over Time"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.em,{children:"Symptoms:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Sensor execution time increases over weeks/months"}),"\n",(0,d.jsx)(b.li,{children:"Memory usage grows during execution"}),"\n",(0,d.jsx)(b.li,{children:"System becomes unresponsive during sensor execution"}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.em,{children:"Performance Optimization Techniques:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-powershell",children:'# Memory-efficient sensor pattern\n[System.GC]::Collect() # Force garbage collection at start\n\n# Use streaming operations for large datasets\n$LargeDataset | ForEach-Object {\n    # Process individual items instead of loading everything into memory\n    Process-Item $_\n} | Select-Object -First 100 # Limit output size\n\n# Dispose of COM objects properly\n$ComObject = New-Object -ComObject "Some.Application"\ntry {\n    # Use COM object\n} finally {\n    [System.Runtime.Interopservices.Marshal]::ReleaseComObject($ComObject) | Out-Null\n    $ComObject = $null\n}\n\n[System.GC]::Collect() # Force garbage collection at end\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Issue 3: Permission and Access Denied Errors"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.em,{children:"Symptoms:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'"Access Denied" errors on some systems'}),"\n",(0,d.jsx)(b.li,{children:"Inconsistent behavior between admin and non-admin contexts"}),"\n",(0,d.jsx)(b.li,{children:"Registry or WMI access failures"}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.em,{children:"Permission-Aware Sensor Pattern:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-powershell",children:'# Check execution context\nfunction Test-AdminPrivileges {\n    $CurrentUser = [Security.Principal.WindowsIdentity]::GetCurrent()\n    $Principal = New-Object Security.Principal.WindowsPrincipal($CurrentUser)\n    return $Principal.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)\n}\n\n$IsAdmin = Test-AdminPrivileges\n\nif ($IsAdmin) {\n    # Use privileged methods\n    try {\n        $Result = Get-ItemProperty "HKLM:\\SOFTWARE\\..." -ErrorAction Stop\n    } catch {\n        Write-Verbose "Admin method failed: $($_.Exception.Message)"\n        # Fallback to user-accessible method\n    }\n} else {\n    # Use non-privileged alternatives\n    $Result = Get-ItemProperty "HKCU:\\SOFTWARE\\..." -ErrorAction SilentlyContinue\n}\n'})}),"\n",(0,d.jsx)(b.h4,{children:"Sensor Testing and Validation Framework"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Automated Testing Pipeline"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-powershell",children:'# Comprehensive Sensor Validation Framework\n# Test-SensorFramework.ps1\n\nclass SensorTest {\n    [string]$Name\n    [string]$Description\n    [scriptblock]$TestScript\n    [hashtable]$ExpectedResults\n    [int]$TimeoutSeconds\n\n    SensorTest([string]$Name, [string]$Description, [scriptblock]$TestScript) {\n        $this.Name = $Name\n        $this.Description = $Description\n        $this.TestScript = $TestScript\n        $this.TimeoutSeconds = 30\n    }\n\n    [hashtable] Execute() {\n        $StartTime = Get-Date\n        try {\n            $Job = Start-Job -ScriptBlock $this.TestScript\n            $Result = Wait-Job $Job -Timeout $this.TimeoutSeconds | Receive-Job\n            Remove-Job $Job -Force\n\n            $Duration = ((Get-Date) - $StartTime).TotalSeconds\n\n            return @{\n                Name = $this.Name\n                Success = $true\n                Result = $Result\n                Duration = $Duration\n                Error = $null\n            }\n        } catch {\n            return @{\n                Name = $this.Name\n                Success = $false\n                Result = $null\n                Duration = ((Get-Date) - $StartTime).TotalSeconds\n                Error = $_.Exception.Message\n            }\n        }\n    }\n}\n\n# Define sensor tests\n$Tests = @(\n    [SensorTest]::new("BasicExecution", "Sensor executes without errors", {\n        & "C:\\Path\\To\\YourSensor.ps1"\n    }),\n\n    [SensorTest]::new("ConsistencyCheck", "Multiple executions return same result", {\n        $Results = @()\n        for ($i = 1; $i -le 3; $i++) {\n            $Results += & "C:\\Path\\To\\YourSensor.ps1"\n        }\n        return ($Results | Sort-Object -Unique).Count -eq 1\n    }),\n\n    [SensorTest]::new("PerformanceCheck", "Execution completes within time limit", {\n        $Stopwatch = [System.Diagnostics.Stopwatch]::StartNew()\n        & "C:\\Path\\To\\YourSensor.ps1" | Out-Null\n        $Stopwatch.Stop()\n        return $Stopwatch.Elapsed.TotalSeconds -lt 10\n    }),\n\n    [SensorTest]::new("ErrorHandling", "Graceful handling of simulated errors", {\n        # Simulate error condition and test sensor response\n        $env:FORCE_SENSOR_ERROR = "true"\n        $Result = & "C:\\Path\\To\\YourSensor.ps1"\n        $env:FORCE_SENSOR_ERROR = $null\n        return $Result -ne $null -and $Result -notmatch "error|exception"\n    })\n)\n\n# Execute all tests\n$TestResults = @()\nforeach ($Test in $Tests) {\n    Write-Host "Running test: $($Test.Name)..." -ForegroundColor Yellow\n    $TestResult = $Test.Execute()\n    $TestResults += $TestResult\n\n    if ($TestResult.Success) {\n        Write-Host "✓ PASS" -ForegroundColor Green\n    } else {\n        Write-Host "✗ FAIL: $($TestResult.Error)" -ForegroundColor Red\n    }\n}\n\n# Generate test report\n$PassCount = ($TestResults | Where-Object {$_.Success}).Count\n$TotalCount = $TestResults.Count\n$PassRate = [math]::Round(($PassCount / $TotalCount) * 100, 1)\n\nWrite-Host "`n=== Test Summary ===" -ForegroundColor Cyan\nWrite-Host "Tests Passed: $PassCount / $TotalCount ($PassRate%)"\nWrite-Host "Average Duration: $([math]::Round(($TestResults | Measure-Object -Property Duration -Average).Average, 2)) seconds"\n\nif ($PassRate -lt 100) {\n    Write-Host "`nFailed Tests:" -ForegroundColor Red\n    $TestResults | Where-Object {-not $_.Success} | ForEach-Object {\n        Write-Host "- $($_.Name): $($_.Error)" -ForegroundColor Red\n    }\n}\n'})}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.h2,{children:"Troubleshooting Playbook"}),"\n",(0,d.jsx)(b.h3,{children:"Common Query Errors and Fixes"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:'"Sensor not found"'}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Fix: Check spelling/case; verify sensor exists and you have permissions"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:'"No results returned"'}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Fix: Relax filters; validate sensor availability and platform constraints first"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:'"Query too slow"'}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Fix: Constrain the cohort (platform/domain), reduce wildcards, return fewer fields"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(b.h3,{children:"Performance Issues and Solutions"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Large wildcard scans across fleet"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Solution: Narrow to a BU/site first; schedule during off-hours"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Sensor output bloated"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Solution: Return a limited set of fields and post-process downstream"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Endpoint variability (OS differences)"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Solution: Use platform-specific branches or separate questions per OS"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(b.h3,{children:"Sensor Availability Problems"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Platform mismatch"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Solution: Verify sensor supports your OS; swap to alternate sensor if needed"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:"Permission or path differences"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Solution: Use elevated contexts or normalized paths; verify with a pilot endpoint"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.h2,{children:"Comprehensive Interactive Labs"}),"\n",(0,d.jsx)(f.A,{title:"Lab Learning Objectives",children:(0,d.jsx)(b.p,{children:"These hands-on labs progress from basic query construction to advanced enterprise scenarios.\nEach lab includes prerequisites, step-by-step instructions, expected outcomes, and troubleshooting guides.\nComplete all labs to master Tanium's asking questions domain."})}),"\n",(0,d.jsx)(b.h3,{children:"Lab 1: Foundational Query Construction and Natural Language Mastery"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Duration"}),": 25 minutes | ",(0,d.jsx)(b.strong,{children:"Difficulty"}),": Beginner | ",(0,d.jsx)(b.strong,{children:"Prerequisites"}),": Access to Tanium Console"]}),"\n",(0,d.jsx)(b.h4,{children:"Objectives"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'Master the basic "Get [sensor] from [targets] where [filters]" pattern'}),"\n",(0,d.jsx)(b.li,{children:"Understand sensor selection and field projection"}),"\n",(0,d.jsx)(b.li,{children:"Practice incremental query building and validation"}),"\n",(0,d.jsx)(b.li,{children:"Create and manage your first saved question"}),"\n"]}),"\n",(0,d.jsx)(b.h4,{children:"Pre-Lab Setup"}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-yaml",children:"Required Access:\n  - Tanium Console read access\n  - Permission to create saved questions\n  - Test environment with 10+ Windows endpoints\n\nPreparation:\n  - Open Tanium Console in a new browser tab\n  - Navigate to Explore Data or Ask a Question page\n  - Have notepad ready for recording query results\n"})}),"\n",(0,d.jsx)(b.h4,{children:"Exercise 1.1: Basic System Inventory (8 minutes)"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 1: Simple Computer Name Query"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:"Query: Get Computer Name from all machines\nExpected Results: List of all endpoint hostnames\nValidation: Should return 100% of online endpoints\n"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.em,{children:"Troubleshooting:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:'If no results: Check "all machines" target, verify endpoint connectivity'}),"\n",(0,d.jsx)(b.li,{children:"If partial results: Some endpoints may be offline or filtered"}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 2: Add Operating System Information"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:"Query: Get Computer Name, Operating System from all machines\nExpected Results: Hostname and OS version for each endpoint\nPerformance: Should complete in &lt; 30 seconds for 1000 endpoints\n"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.em,{children:"Analysis Questions:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"How many different OS versions are in your environment?"}),"\n",(0,d.jsx)(b.li,{children:"What percentage are Windows 10 vs Windows 11?"}),"\n",(0,d.jsx)(b.li,{children:"Are there any unexpected or obsolete OS versions?"}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 3: Filter by Operating System"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Query: Get Computer Name, Operating System from all machines where Operating System contains "Windows 11"\nExpected Results: Only Windows 11 endpoints\nValidation: Result count should be subset of Step 2\n'})}),"\n",(0,d.jsx)(b.h4,{children:"Exercise 1.2: Advanced Filtering and Targeting (10 minutes)"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 4: Hostname Pattern Filtering"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Query: Get Computer Name, Operating System from all machines where Computer Name contains "WKS-"\nPurpose: Target workstation endpoints using naming convention\nExpected Results: Only workstations, excluding servers\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 5: Multiple Filter Conditions"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Query: Get Computer Name, Operating System, IP Address from all machines\nwhere Computer Name contains "WKS-"\nAND Operating System contains "Windows 11"\nExpected Results: Windows 11 workstations only\nPerformance Note: Multiple filters improve precision but may reduce result count\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 6: Boolean Logic with Parentheses"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Query: Get Computer Name, Operating System from all machines\nwhere (Computer Name contains "WKS-" OR Computer Name contains "LAP-")\nAND Operating System contains "Windows"\nExpected Results: All Windows workstations and laptops\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.em,{children:"Advanced Challenge:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Query: Get Computer Name, Operating System, Uptime from all machines\nwhere Operating System contains "Windows"\nAND NOT (Computer Name contains "-TST-" OR Computer Name contains "-DEV-")\nAND Uptime &lt; 7 days\nPurpose: Find recently rebooted production Windows systems\n'})}),"\n",(0,d.jsx)(b.h4,{children:"Exercise 1.3: Saved Question Creation and Management (7 minutes)"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 7: Create Your First Saved Question"})}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsx)(b.li,{children:"Use your most successful query from Exercise 1.2"}),"\n",(0,d.jsx)(b.li,{children:'Click "Save Question" in the Tanium interface'}),"\n",(0,d.jsx)(b.li,{children:'Name: "LAB1-Inventory-Windows-Workstations"'}),"\n",(0,d.jsx)(b.li,{children:'Description: "Lab 1 exercise - Windows workstation inventory with recent reboot filter"'}),"\n",(0,d.jsx)(b.li,{children:"Add metadata: Your name, date created, review schedule"}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 8: Test Saved Question Execution"})}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsx)(b.li,{children:"Navigate to saved questions library"}),"\n",(0,d.jsx)(b.li,{children:"Find your saved question"}),"\n",(0,d.jsx)(b.li,{children:"Execute and verify results match your manual query"}),"\n",(0,d.jsx)(b.li,{children:"Note execution time and endpoint coverage"}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 9: Share and Collaborate"})}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsx)(b.li,{children:"Share question with lab partner or colleague"}),"\n",(0,d.jsx)(b.li,{children:"Verify they can access and execute"}),"\n",(0,d.jsx)(b.li,{children:"Document any permission or access issues"}),"\n"]}),"\n",(0,d.jsx)(b.h4,{children:"Lab 1 Assessment and Validation"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Knowledge Check Questions:"})}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsx)(b.li,{children:'What happens if you omit the "from all machines" portion?'}),"\n",(0,d.jsx)(b.li,{children:'How does "contains" differ from "equals" in filter performance?'}),"\n",(0,d.jsx)(b.li,{children:"When should you use parentheses in complex Boolean logic?"}),"\n",(0,d.jsx)(b.li,{children:"What's the maximum recommended number of fields to return?"}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Practical Assessment:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:["Execute this query and explain the results:","\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Get Computer Name, Operating System, Last Logged In User, Uptime\nfrom all machines\nwhere Operating System contains "Windows"\nAND Last Logged In User contains "admin"\nAND Uptime &gt; 30 days\n'})}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Expected Learning Outcomes:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"[ ] Construct basic queries using natural language syntax"}),"\n",(0,d.jsx)(b.li,{children:"[ ] Apply single and multiple filter conditions"}),"\n",(0,d.jsx)(b.li,{children:"[ ] Use Boolean operators (AND, OR, NOT) correctly"}),"\n",(0,d.jsx)(b.li,{children:"[ ] Create and manage saved questions"}),"\n",(0,d.jsx)(b.li,{children:"[ ] Understand query performance implications"}),"\n"]}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.h3,{children:"Lab 2: Advanced Query Patterns and Performance Optimization"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Duration"}),": 35 minutes | ",(0,d.jsx)(b.strong,{children:"Difficulty"}),": Intermediate | ",(0,d.jsx)(b.strong,{children:"Prerequisites"}),": Lab 1 completion"]}),"\n",(0,d.jsx)(b.h4,{children:"Objectives"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Master complex filtering with nested Boolean logic"}),"\n",(0,d.jsx)(b.li,{children:"Optimize queries for performance and accuracy"}),"\n",(0,d.jsx)(b.li,{children:"Understand sensor selection strategies"}),"\n",(0,d.jsx)(b.li,{children:"Implement query validation and testing workflows"}),"\n"]}),"\n",(0,d.jsx)(b.h4,{children:"Pre-Lab Setup"}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-yaml",children:"Required Resources:\n  - Lab 1 completion and saved questions\n  - Access to performance monitoring tools\n  - Test environment with mixed OS platforms\n  - Stopwatch or timing tool for performance measurement\n\nAdvanced Preparation:\n  - Review Lab 1 saved questions\n  - Identify slow-performing queries from Lab 1\n  - Prepare test scenarios for query optimization\n"})}),"\n",(0,d.jsx)(b.h4,{children:"Exercise 2.1: Complex Security Assessment Queries (12 minutes)"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 1: Multi-Condition Security Baseline"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Query: Get Computer Name, Antivirus Status, Firewall State, OS Build Number\nfrom all machines\nwhere OS Platform = "Windows"\nAND (Antivirus Status contains "disabled" OR Firewall State = "Off")\nAND NOT Computer Name contains "-TST-"\nPurpose: Identify production Windows systems with security control gaps\nExpected Results: Systems requiring immediate security attention\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.em,{children:"Performance Analysis:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Record execution time: _____ seconds"}),"\n",(0,d.jsx)(b.li,{children:"Record result count: _____ endpoints"}),"\n",(0,d.jsx)(b.li,{children:"Calculate success rate: _____ % (results/total endpoints)"}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 2: Advanced Threat Hunting Pattern"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Query: Get Computer Name, Running Processes, Network Connections\nfrom all machines\nwhere OS Platform = "Windows"\nAND (Running Processes contains "powershell" AND Running Processes contains "-enc")\nOR (Network Connections contains "ESTABLISHED" AND Network Connections contains ":443")\nPurpose: Hunt for potential APT indicators\nWARNING: Expensive query - test on small subset first\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.em,{children:"Optimization Challenge:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Test on 10 endpoints first"}),"\n",(0,d.jsx)(b.li,{children:"If successful and fast (<2 minutes), expand to 50 endpoints"}),"\n",(0,d.jsx)(b.li,{children:"Document any performance degradation patterns"}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 3: Compliance Violation Detection"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Query: Get Computer Name, Local Administrators, PowerShell Execution Policy\nfrom all machines\nwhere OS Platform = "Windows"\nAND (Local Administrators count &gt; 3 OR PowerShell Execution Policy = "Unrestricted")\nAND Domain contains "CORP"\nPurpose: Detect policy violations in corporate domain\n'})}),"\n",(0,d.jsx)(b.h4,{children:"Exercise 2.2: Query Performance Optimization Workshop (15 minutes)"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Step 4: Baseline Performance Measurement"}),"\nTake any query from Exercise 2.1 and measure:"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:"Original Query Performance:\n- Execution Time: _____ seconds\n- Endpoints Queried: _____ total\n- Results Returned: _____ endpoints\n- Success Rate: _____ %\n- Resource Impact: High/Medium/Low\n"})}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Step 5: Apply Constraint Ordering Optimization"}),"\nRewrite your query using optimal constraint order:"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Optimized Query Structure:\nGet [minimal fields]\nfrom all machines\nwhere OS Platform = "Windows"           # Fast: Platform constraint first\nAND Domain contains "CORP"              # Medium: Domain filter second\nAND [expensive filters last]            # Slow: Complex filters last\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 6: Field Projection Optimization"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:"Original: Get Computer Name, Field1, Field2, Field3, Field4 from all machines where [filters]\nOptimized: Get Computer Name, Field1 from all machines where [filters]\n\nPerformance Comparison:\n- Original Time: _____ seconds\n- Optimized Time: _____ seconds\n- Performance Improvement: _____ % faster\n"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 7: Staged Query Approach"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Stage 1: Get Computer Name from all machines where OS Platform = "Windows" AND Domain contains "CORP"\nResults: _____ endpoints identified\n\nStage 2: Get Computer Name, Detailed_Field1, Detailed_Field2\nfrom machines with names in ("HOST001", "HOST002", "HOST003")\nPurpose: Deep dive on subset identified in Stage 1\n'})}),"\n",(0,d.jsx)(b.h4,{children:"Exercise 2.3: Regex and Advanced String Matching (8 minutes)"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 8: Version Pattern Matching"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Query: Get Computer Name, Application Versions\nfrom all machines\nwhere Application Versions matches "Office.*16\\.0\\.1[5-9][0-9]{3}"\nPurpose: Find Office versions 16.0.15000 and higher\nExpected Results: Modern Office 365 installations\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 9: IP Address Pattern Matching"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Query: Get Computer Name, IP Address\nfrom all machines\nwhere IP Address matches "^(10\\.20\\.|192\\.168\\.1[0-9]{2}\\.)"\nPurpose: Find endpoints in development/test subnets\nChallenge: Modify regex for your environment\'s IP ranges\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 10: Advanced Process Name Filtering"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Query: Get Computer Name, Running Processes\nfrom all machines\nwhere Running Processes matches "[a-z]{1,8}\\.(exe|bat|ps1|vbs)$"\nPurpose: Detect potentially suspicious short process names\nSecurity Use: Identify possible malware with random names\n'})}),"\n",(0,d.jsx)(b.h4,{children:"Lab 2 Assessment and Troubleshooting"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Performance Benchmarking Exercise:"}),"\nComplete this optimization challenge:"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Original Query (intentionally inefficient):\nGet Computer Name, Installed Applications, Running Processes, Services, Network Connections\nfrom all machines\nwhere Installed Applications contains "Office"\nAND Running Processes contains "excel"\nAND Services contains "Print Spooler"\n\nYour Optimized Version:\n[Write your optimized query here]\n\nPerformance Metrics:\n- Original Time: _____ seconds\n- Optimized Time: _____ seconds\n- Improvement Factor: _____ x faster\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Common Issues and Solutions:"})}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:'"Query too slow"'})," - Apply constraint ordering, reduce field projection"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:'"No results returned"'})," - Relax filters, check platform constraints"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:'"Regex not matching"'})," - Test regex patterns on small dataset first"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:'"Timeout errors"'})," - Implement staged query approach"]}),"\n"]}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.h3,{children:"Lab 3: Custom Sensor Development and Enterprise Integration"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Duration"}),": 45 minutes | ",(0,d.jsx)(b.strong,{children:"Difficulty"}),": Advanced | ",(0,d.jsx)(b.strong,{children:"Prerequisites"}),": Labs 1-2 completion, PowerShell knowledge"]}),"\n",(0,d.jsx)(b.h4,{children:"Objectives"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Design and implement custom sensors for enterprise requirements"}),"\n",(0,d.jsx)(b.li,{children:"Integrate error handling and performance optimization"}),"\n",(0,d.jsx)(b.li,{children:"Test sensors across diverse environments"}),"\n",(0,d.jsx)(b.li,{children:"Deploy sensors following enterprise best practices"}),"\n"]}),"\n",(0,d.jsx)(b.h4,{children:"Pre-Lab Setup"}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-yaml",children:"Development Environment:\n  - PowerShell 5.1+ or PowerShell Core 7+\n  - Text editor with syntax highlighting (VS Code recommended)\n  - Access to test Windows endpoints\n  - Tanium Console access for sensor deployment\n\nSecurity Requirements:\n  - Code review process available\n  - Test environment separate from production\n  - Version control system access (Git preferred)\n"})}),"\n",(0,d.jsx)(b.h4,{children:"Exercise 3.1: Security Sensor Development (20 minutes)"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 1: Requirements Analysis and Design"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-yaml",children:"Sensor Specification:\n  Name: Enterprise Security Baseline Checker\n  Purpose: Validate Windows Defender + Firewall + Encryption status\n  Platforms: Windows 10/11, Windows Server 2016+\n  Expected Output: JSON format with structured status\n  Performance Target: &lt; 3 seconds per endpoint\n  Error Handling: Graceful fallback with diagnostic info\n"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 2: Implement Core Sensor Logic"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-powershell",children:'# Enterprise Security Baseline Sensor v1.0\n# File: SecurityBaseline.ps1\n\nparam(\n    [switch]$Detailed,\n    [switch]$Debug\n)\n\n# Initialize result object\n$SecurityCheck = @{\n    Timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"\n    ComputerName = $env:COMPUTERNAME\n    Status = "Unknown"\n    Components = @{}\n    Errors = @()\n}\n\ntry {\n    # Windows Defender Check\n    Write-Verbose "Checking Windows Defender status..."\n    try {\n        $DefenderPrefs = Get-MpPreference -ErrorAction Stop\n        $SecurityCheck.Components.Defender = @{\n            RealTimeProtection = -not $DefenderPrefs.DisableRealtimeMonitoring\n            Status = if (-not $DefenderPrefs.DisableRealtimeMonitoring) { "Enabled" } else { "Disabled" }\n        }\n    } catch {\n        $SecurityCheck.Components.Defender = @{\n            Status = "Error"\n            Message = $_.Exception.Message\n        }\n        $SecurityCheck.Errors += "Defender check failed: $($_.Exception.Message)"\n    }\n\n    # Firewall Check\n    Write-Verbose "Checking Windows Firewall status..."\n    try {\n        $FirewallProfiles = Get-NetFirewallProfile -ErrorAction Stop\n        $EnabledProfiles = ($FirewallProfiles | Where-Object {$_.Enabled -eq $true}).Count\n        $SecurityCheck.Components.Firewall = @{\n            EnabledProfiles = $EnabledProfiles\n            TotalProfiles = $FirewallProfiles.Count\n            Status = if ($EnabledProfiles -eq $FirewallProfiles.Count) { "Fully Enabled" } elseif ($EnabledProfiles -gt 0) { "Partially Enabled" } else { "Disabled" }\n        }\n    } catch {\n        $SecurityCheck.Components.Firewall = @{\n            Status = "Error"\n            Message = $_.Exception.Message\n        }\n        $SecurityCheck.Errors += "Firewall check failed: $($_.Exception.Message)"\n    }\n\n    # Disk Encryption Check\n    Write-Verbose "Checking disk encryption status..."\n    try {\n        $BitLockerStatus = Get-BitLockerVolume -MountPoint "C:" -ErrorAction Stop\n        $SecurityCheck.Components.Encryption = @{\n            Status = $BitLockerStatus.ProtectionStatus.ToString()\n            EncryptionPercentage = $BitLockerStatus.EncryptionPercentage\n            VolumeType = $BitLockerStatus.VolumeType.ToString()\n        }\n    } catch {\n        $SecurityCheck.Components.Encryption = @{\n            Status = "Unknown"\n            Message = $_.Exception.Message\n        }\n        $SecurityCheck.Errors += "Encryption check failed: $($_.Exception.Message)"\n    }\n\n    # Calculate overall status\n    $ComponentStatuses = @($SecurityCheck.Components.Values | ForEach-Object { $_.Status })\n    $EnabledCount = ($ComponentStatuses | Where-Object { $_ -in @("Enabled", "Fully Enabled", "On") }).Count\n    $TotalCount = $ComponentStatuses.Count\n\n    if ($EnabledCount -eq $TotalCount) {\n        $SecurityCheck.Status = "Compliant"\n    } elseif ($EnabledCount -gt 0) {\n        $SecurityCheck.Status = "Partial Compliance"\n    } else {\n        $SecurityCheck.Status = "Non-Compliant"\n    }\n\n} catch {\n    $SecurityCheck.Status = "Error"\n    $SecurityCheck.Errors += "General error: $($_.Exception.Message)"\n}\n\n# Output results\nif ($Detailed) {\n    $SecurityCheck | ConvertTo-Json -Depth 3\n} else {\n    "$($SecurityCheck.Status) | Defender: $($SecurityCheck.Components.Defender.Status) | Firewall: $($SecurityCheck.Components.Firewall.Status) | Encryption: $($SecurityCheck.Components.Encryption.Status)"\n}\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 3: Sensor Testing and Validation"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-powershell",children:'# Test your sensor with different parameters\nWrite-Host "Testing basic execution..." -ForegroundColor Yellow\n& .\\SecurityBaseline.ps1\n\nWrite-Host "`nTesting detailed output..." -ForegroundColor Yellow\n& .\\SecurityBaseline.ps1 -Detailed\n\nWrite-Host "`nTesting debug mode..." -ForegroundColor Yellow\n& .\\SecurityBaseline.ps1 -Debug -Verbose\n'})}),"\n",(0,d.jsx)(b.h4,{children:"Exercise 3.2: Cross-Platform Sensor Development (15 minutes)"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 4: Linux Security Sensor"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-bash",children:'#!/bin/bash\n# Linux Security Baseline Sensor\n# File: linux_security_baseline.sh\n\n# Configuration\nOUTPUT_FORMAT="json"\nDEBUG=${DEBUG:-0}\n\n# Logging function\nlog_debug() {\n    if [[ $DEBUG -eq 1 ]]; then\n        echo "DEBUG: $1" >&2\n    fi\n}\n\n# Initialize result object\nTIMESTAMP=$(date -Iseconds)\nHOSTNAME=$(hostname)\nSECURITY_STATUS="Unknown"\n\n# Function to check service status\ncheck_service() {\n    local service_name="$1"\n\n    if systemctl is-active --quiet "$service_name" 2>/dev/null; then\n        echo "active"\n    elif systemctl is-enabled --quiet "$service_name" 2>/dev/null; then\n        echo "enabled_not_running"\n    else\n        echo "inactive"\n    fi\n}\n\n# Check firewall status\nlog_debug "Checking firewall status"\nif command -v ufw >/dev/null 2>&1; then\n    FIREWALL_STATUS=$(ufw status | grep -q "Status: active" && echo "active" || echo "inactive")\n    FIREWALL_TYPE="ufw"\nelif command -v firewalld >/dev/null 2>&1; then\n    FIREWALL_STATUS=$(check_service firewalld)\n    FIREWALL_TYPE="firewalld"\nelif command -v iptables >/dev/null 2>&1; then\n    RULE_COUNT=$(iptables -L | wc -l)\n    FIREWALL_STATUS=$([ $RULE_COUNT -gt 10 ] && echo "active" || echo "inactive")\n    FIREWALL_TYPE="iptables"\nelse\n    FIREWALL_STATUS="not_available"\n    FIREWALL_TYPE="none"\nfi\n\n# Check antivirus status\nlog_debug "Checking antivirus status"\nif command -v clamdscan >/dev/null 2>&1; then\n    AV_STATUS=$(check_service clamav-daemon)\n    AV_TYPE="clamav"\nelif command -v rkhunter >/dev/null 2>&1; then\n    AV_STATUS="installed"\n    AV_TYPE="rkhunter"\nelse\n    AV_STATUS="not_available"\n    AV_TYPE="none"\nfi\n\n# Check disk encryption\nlog_debug "Checking disk encryption"\nif command -v cryptsetup >/dev/null 2>&1; then\n    ENCRYPTED_DEVICES=$(lsblk -o NAME,TYPE | grep -c crypt)\n    if [ $ENCRYPTED_DEVICES -gt 0 ]; then\n        ENCRYPTION_STATUS="active"\n    else\n        ENCRYPTION_STATUS="not_encrypted"\n    fi\nelse\n    ENCRYPTION_STATUS="unknown"\nfi\n\n# Calculate overall status\nACTIVE_COMPONENTS=0\nTOTAL_COMPONENTS=3\n\n[ "$FIREWALL_STATUS" = "active" ] && ACTIVE_COMPONENTS=$((ACTIVE_COMPONENTS + 1))\n[ "$AV_STATUS" = "active" ] && ACTIVE_COMPONENTS=$((ACTIVE_COMPONENTS + 1))\n[ "$ENCRYPTION_STATUS" = "active" ] && ACTIVE_COMPONENTS=$((ACTIVE_COMPONENTS + 1))\n\nif [ $ACTIVE_COMPONENTS -eq $TOTAL_COMPONENTS ]; then\n    SECURITY_STATUS="Compliant"\nelif [ $ACTIVE_COMPONENTS -gt 0 ]; then\n    SECURITY_STATUS="Partial Compliance"\nelse\n    SECURITY_STATUS="Non-Compliant"\nfi\n\n# Output results\nif [ "$OUTPUT_FORMAT" = "json" ]; then\n    cat << EOF\n{\n    "timestamp": "$TIMESTAMP",\n    "hostname": "$HOSTNAME",\n    "status": "$SECURITY_STATUS",\n    "components": {\n        "firewall": {\n            "status": "$FIREWALL_STATUS",\n            "type": "$FIREWALL_TYPE"\n        },\n        "antivirus": {\n            "status": "$AV_STATUS",\n            "type": "$AV_TYPE"\n        },\n        "encryption": {\n            "status": "$ENCRYPTION_STATUS",\n            "encrypted_devices": $ENCRYPTED_DEVICES\n        }\n    }\n}\nEOF\nelse\n    echo "$SECURITY_STATUS | Firewall: $FIREWALL_STATUS | Antivirus: $AV_STATUS | Encryption: $ENCRYPTION_STATUS"\nfi\n'})}),"\n",(0,d.jsx)(b.h4,{children:"Exercise 3.3: Enterprise Deployment and Monitoring (10 minutes)"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 5: Deployment Validation Checklist"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-yaml",children:"Pre-Deployment Validation:\n  Code Review:\n    - [ ] Logic review completed by colleague\n    - [ ] Error handling validates gracefully\n    - [ ] Performance tested on representative systems\n    - [ ] Output format consistent and parseable\n\n  Security Review:\n    - [ ] No hardcoded credentials or sensitive data\n    - [ ] Minimal required permissions\n    - [ ] Safe error handling (no information disclosure)\n    - [ ] Input validation where applicable\n\n  Performance Testing:\n    - [ ] Execution time &lt; 5 seconds on standard hardware\n    - [ ] Memory usage &lt; 50MB during execution\n    - [ ] No resource leaks or hanging processes\n    - [ ] Consistent output across multiple runs\n"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 6: Tanium Integration"})}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Create Sensor in Tanium:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Navigate to Authoring → Sensors"}),"\n",(0,d.jsx)(b.li,{children:'Create new sensor: "Custom Security Baseline"'}),"\n",(0,d.jsx)(b.li,{children:"Add your PowerShell script content"}),"\n",(0,d.jsx)(b.li,{children:"Set platform filter: Windows"}),"\n",(0,d.jsx)(b.li,{children:"Configure parameters if needed"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Test Deployment:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Query: Get Custom Security Baseline from 5 machines where OS Platform = "Windows"\nExpected: Consistent output format across all test machines\nValidation: No errors, reasonable execution time\n'})}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Create Monitoring Saved Question:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Query: Get Computer Name, Custom Security Baseline\nfrom all machines\nwhere Custom Security Baseline contains "Non-Compliant"\nName: "Security-NonCompliant-Systems"\nSchedule: Every 4 hours\n'})}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(b.h4,{children:"Lab 3 Assessment and Enterprise Integration"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Troubleshooting Common Issues:"})}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:'"Permission Denied" Errors:'})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-powershell",children:'# Add privilege check and fallback\nif (-not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {\n    Write-Output "Limited privileges - using alternative methods"\n    # Implement non-admin detection methods\n}\n'})}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Inconsistent Output:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-powershell",children:'# Standardize output format\n$Output = @{\n    Status = "Compliant" # Always use same status values\n    Timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss" # Consistent time format\n    Version = "1.0.0" # Include sensor version\n}\n$Output | ConvertTo-Json -Compress # Consistent JSON output\n'})}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Performance Issues:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-powershell",children:"# Add timeout handling\n$Job = Start-Job -ScriptBlock { Get-SomeExpensiveData }\n$Result = Wait-Job $Job -Timeout 30 | Receive-Job\nRemove-Job $Job -Force\n"})}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Enterprise Best Practices Validation:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"[ ] Sensor includes version information"}),"\n",(0,d.jsx)(b.li,{children:"[ ] Error handling provides diagnostic information"}),"\n",(0,d.jsx)(b.li,{children:"[ ] Output format is consistent and machine-parseable"}),"\n",(0,d.jsx)(b.li,{children:"[ ] Documentation includes purpose, expected output, and troubleshooting"}),"\n",(0,d.jsx)(b.li,{children:"[ ] Testing completed across diverse environment configurations"}),"\n"]}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.h3,{children:"Lab 4: Enterprise Query Orchestration and Automation"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Duration"}),": 40 minutes | ",(0,d.jsx)(b.strong,{children:"Difficulty"}),": Expert | ",(0,d.jsx)(b.strong,{children:"Prerequisites"}),": Labs 1-3 completion"]}),"\n",(0,d.jsx)(b.h4,{children:"Objectives"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Design complex multi-stage query workflows"}),"\n",(0,d.jsx)(b.li,{children:"Implement automated query orchestration"}),"\n",(0,d.jsx)(b.li,{children:"Create enterprise dashboards and reporting"}),"\n",(0,d.jsx)(b.li,{children:"Establish continuous monitoring and alerting"}),"\n"]}),"\n",(0,d.jsx)(b.h4,{children:"Pre-Lab Setup"}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-yaml",children:"Advanced Requirements:\n  - Completion of Labs 1-3 with working saved questions\n  - Access to Tanium scheduling and automation features\n  - Dashboard creation permissions\n  - Integration with external systems (optional)\n\nEnvironment Preparation:\n  - Review all saved questions from previous labs\n  - Identify business use cases for automation\n  - Prepare sample datasets for testing\n"})}),"\n",(0,d.jsx)(b.h4,{children:"Exercise 4.1: Multi-Stage Query Orchestration (15 minutes)"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 1: Design Enterprise Security Assessment Workflow"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-yaml",children:"Workflow Design: Comprehensive Security Assessment\nStage 1: System Identification and Baseline\n  - Identify all Windows systems in scope\n  - Collect basic inventory (OS, domain, last reboot)\n  - Filter out test/development systems\n\nStage 2: Security Control Validation\n  - Execute custom security baseline sensor from Lab 3\n  - Check patch compliance status\n  - Validate security software versions\n\nStage 3: Risk Assessment and Prioritization\n  - Correlate findings across security controls\n  - Calculate risk scores based on vulnerability exposure\n  - Identify systems requiring immediate attention\n\nStage 4: Reporting and Remediation Planning\n  - Generate executive summary dashboard\n  - Create detailed remediation work orders\n  - Schedule follow-up validation queries\n"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 2: Implement Stage 1 - System Identification"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Saved Question Name: "WORKFLOW-Stage1-SystemBaseline"\nQuery: Get Computer Name, Operating System, Domain, Last Reboot, Tanium Client Version\nfrom all machines\nwhere OS Platform = "Windows"\nAND NOT Computer Name matches ".*(-TST-|-DEV-|-LAB-).*"\nAND Last Seen within last 24 hours\nPurpose: Establish baseline of production Windows systems\nSchedule: Daily at 6:00 AM\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 3: Implement Stage 2 - Security Validation"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Saved Question Name: "WORKFLOW-Stage2-SecurityControls"\nQuery: Get Computer Name, Custom Security Baseline, Installed Patches, Antivirus Products\nfrom machines in saved question "WORKFLOW-Stage1-SystemBaseline"\nwhere Custom Security Baseline contains "Non-Compliant"\nOR NOT Installed Patches contains "KB5030219"\nPurpose: Deep dive on systems identified in Stage 1\nSchedule: Daily at 7:00 AM (after Stage 1 completion)\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 4: Create Risk Assessment Logic"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Saved Question Name: "WORKFLOW-Stage3-RiskAssessment"\nQuery: Get Computer Name, Security Risk Score, Priority Action Required\nfrom machines in saved question "WORKFLOW-Stage2-SecurityControls"\nwhere Security Risk Score &gt; 7\nOR Priority Action Required = "Immediate"\nPurpose: Prioritize remediation efforts based on risk\nSchedule: Daily at 8:00 AM\n'})}),"\n",(0,d.jsx)(b.h4,{children:"Exercise 4.2: Automated Monitoring and Alerting (15 minutes)"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 5: Critical Security Alert System"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-yaml",children:'Alert Configuration: High-Risk Security Events\nTrigger Query:\n  Get Computer Name, Alert Details, Threat Level\n  from all machines\n  where (Custom Security Baseline contains "Non-Compliant"\n  AND Threat Level = "Critical")\n  OR (Running Processes contains "powershell"\n  AND Running Processes contains "-enc")\n\nAlert Conditions:\n  - Execute every 15 minutes\n  - Trigger if result count &gt; 0\n  - Send email to security team\n  - Create SIEM integration event\n  - Auto-escalate if unresolved after 2 hours\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 6: Performance Monitoring Dashboard"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Dashboard Name: "Enterprise Query Performance Monitor"\nComponents:\n  1. Query Execution Times (last 24h)\n     - Average execution time by query type\n     - Slowest performing queries\n     - Timeout and error rates\n\n  2. Endpoint Coverage Metrics\n     - Online vs offline endpoint counts\n     - Query success rates by endpoint\n     - Network segment performance comparison\n\n  3. System Health Indicators\n     - Tanium Client version distribution\n     - Agent communication status\n     - Disk space and performance alerts\n\nReal-time Updates: Every 5 minutes\nHistorical Retention: 30 days\nExport Capability: PDF, CSV, API\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 7: Automated Remediation Workflows"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-yaml",children:'Workflow: Automated Security Remediation\nTrigger: Results from "WORKFLOW-Stage3-RiskAssessment"\n\nRemediation Logic:\n  IF Custom Security Baseline = "Non-Compliant":\n    - Deploy security configuration package\n    - Schedule validation check in 4 hours\n    - Create service ticket for manual review\n\n  IF Antivirus Status = "Disabled":\n    - Execute antivirus enable action\n    - Force antivirus update\n    - Validate status change in 1 hour\n\n  IF OS Build Number < "Security Baseline":\n    - Add to patch deployment group\n    - Schedule maintenance window\n    - Notify system owner via email\n\nSuccess Criteria:\n  - 80% automated remediation success rate\n  - &lt;4 hour average time to remediation\n  - &lt;2% false positive rate\n'})}),"\n",(0,d.jsx)(b.h4,{children:"Exercise 4.3: Enterprise Reporting and Business Intelligence (10 minutes)"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 8: Executive Security Dashboard"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-yaml",children:"Dashboard: Executive Security Overview\nAudience: CISO, IT Leadership, Compliance Team\nUpdate Frequency: Daily at 9:00 AM\n\nKey Metrics:\n  1. Security Compliance Score (0-100%)\n     - Based on critical security controls\n     - Trending over last 30 days\n     - Comparison to industry benchmarks\n\n  2. Risk Exposure Matrix\n     - High/Medium/Low risk endpoint counts\n     - Critical vulnerability exposure\n     - Mean time to remediation\n\n  3. Operational Efficiency\n     - Query performance trends\n     - Automation success rates\n     - Manual intervention requirements\n\nVisual Components:\n  - Security score gauge with color coding\n  - Risk trend line charts\n  - Heat map of endpoint security status\n  - Top 10 security issues requiring attention\n"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 9: Compliance Reporting Automation"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-sql",children:"-- Example automated compliance report query\nWITH SecurityBaseline AS (\n  SELECT\n    ComputerName,\n    CASE\n      WHEN CustomSecurityBaseline LIKE '%Compliant%' THEN 1\n      ELSE 0\n    END AS CompliantFlag\n  FROM TaniumResults\n  WHERE QueryName = 'WORKFLOW-Stage2-SecurityControls'\n    AND Timestamp >= DATEADD(day, -1, GETDATE())\n),\nComplianceMetrics AS (\n  SELECT\n    COUNT(*) AS TotalSystems,\n    SUM(CompliantFlag) AS CompliantSystems,\n    (SUM(CompliantFlag) * 100.0 / COUNT(*)) AS CompliancePercentage\n  FROM SecurityBaseline\n)\nSELECT\n  'Daily Security Compliance Report' AS ReportType,\n  GETDATE() AS ReportDate,\n  TotalSystems,\n  CompliantSystems,\n  (TotalSystems - CompliantSystems) AS NonCompliantSystems,\n  CompliancePercentage,\n  CASE\n    WHEN CompliancePercentage >= 95 THEN 'Excellent'\n    WHEN CompliancePercentage >= 90 THEN 'Good'\n    WHEN CompliancePercentage >= 80 THEN 'Needs Improvement'\n    ELSE 'Critical'\n  END AS ComplianceRating\nFROM ComplianceMetrics;\n"})}),"\n",(0,d.jsx)(b.h4,{children:"Lab 4 Final Assessment and Enterprise Integration"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Enterprise Integration Checklist:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"[ ] Multi-stage workflows implemented and tested"}),"\n",(0,d.jsx)(b.li,{children:"[ ] Automated monitoring alerts configured"}),"\n",(0,d.jsx)(b.li,{children:"[ ] Executive dashboards created and validated"}),"\n",(0,d.jsx)(b.li,{children:"[ ] Compliance reporting automated"}),"\n",(0,d.jsx)(b.li,{children:"[ ] Integration with external systems tested"}),"\n",(0,d.jsx)(b.li,{children:"[ ] Documentation completed for all workflows"}),"\n",(0,d.jsx)(b.li,{children:"[ ] Change management process followed"}),"\n",(0,d.jsx)(b.li,{children:"[ ] User training materials prepared"}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Business Value Validation:"})}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Time Savings"}),": Calculate hours saved through automation"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Risk Reduction"}),": Measure improvement in security posture"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Operational Efficiency"}),": Track query performance improvements"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Compliance"}),": Demonstrate audit-ready reporting capabilities"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Next Steps for Production Deployment:"})}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Stakeholder Approval"}),": Present results to business stakeholders"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Production Pilot"}),": Deploy to limited production environment"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Monitoring and Tuning"}),": Adjust based on real-world performance"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Full Rollout"}),": Gradual expansion to entire enterprise"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Continuous Improvement"}),": Regular review and optimization"]}),"\n"]}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.h3,{children:"Lab 5: Real-World Enterprise Scenarios and Troubleshooting"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Duration"}),": 50 minutes | ",(0,d.jsx)(b.strong,{children:"Difficulty"}),": Expert | ",(0,d.jsx)(b.strong,{children:"Prerequisites"}),": All previous labs"]}),"\n",(0,d.jsx)(b.h4,{children:"Objectives"}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Apply learned skills to real-world enterprise scenarios"}),"\n",(0,d.jsx)(b.li,{children:"Master advanced troubleshooting techniques"}),"\n",(0,d.jsx)(b.li,{children:"Implement enterprise-scale optimizations"}),"\n",(0,d.jsx)(b.li,{children:"Prepare for TAN-1000 certification scenarios"}),"\n"]}),"\n",(0,d.jsx)(b.h4,{children:"Exercise 5.1: Incident Response Scenario (15 minutes)"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Scenario"}),": Suspected ransomware attack detected. Implement immediate assessment and containment."]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 1: Rapid Threat Assessment"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'URGENT Query: Get Computer Name, Running Processes, Network Connections, Open Files\nfrom all machines\nwhere (Running Processes contains "encrypt" OR Running Processes contains "ransom")\nOR (Open Files contains ".encrypted" OR Open Files contains ".locked")\nOR (Network Connections contains "ESTABLISHED" AND Network Connections contains ":443" AND CPU Utilization &gt; 90)\nTime Limit: Must complete in &lt; 2 minutes\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 2: Containment and Isolation"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Follow-up Query: Get Computer Name, Network Adapter Status, Logged In User, Last Process Started\nfrom machines in previous query results\nwhere Network Adapter Status = "Connected"\nPurpose: Identify systems requiring immediate network isolation\n'})}),"\n",(0,d.jsx)(b.h4,{children:"Exercise 5.2: Performance Optimization Challenge (20 minutes)"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Challenge"}),": Optimize this intentionally inefficient query to enterprise standards:"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Problem Query:\nGet Computer Name, Installed Applications, Running Processes, Services, Network Connections,\nEvent Logs, Registry Keys, File System Info, Performance Counters, User Profiles\nfrom all machines\nwhere Installed Applications contains "Office"\nAND Running Processes contains "outlook"\nAND Services contains "Exchange"\nAND Network Connections contains ":443"\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Your Optimized Solution:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:"Stage 1: [Write your Stage 1 query here]\nStage 2: [Write your Stage 2 query here]\nStage 3: [Write your Stage 3 query here]\n\nPerformance Improvement Target: &gt;80% faster execution\nAccuracy Requirement: 100% result consistency\n"})}),"\n",(0,d.jsx)(b.h4,{children:"Exercise 5.3: Complex Enterprise Integration (15 minutes)"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Integration Scenario"}),": Connect Tanium queries with SIEM, ticketing system, and patch management."]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 1: SIEM Integration Query"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-yaml",children:"Purpose: Export security events to SIEM in standardized format\nQuery Structure:\n  - Include timestamp, computer name, event type, severity\n  - Use JSON output format for SIEM parsing\n  - Filter high-priority security events only\n  - Include correlation identifiers\n"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Step 2: Automated Ticket Creation"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-yaml",children:"Trigger Conditions:\n  - Security compliance violations\n  - Critical system performance issues\n  - Patch deployment failures\n  - Custom sensor error conditions\n\nTicket Data Requirements:\n  - System identification and location\n  - Issue severity and impact assessment\n  - Recommended remediation steps\n  - Assignment to appropriate team\n"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Final Assessment Questions:"})}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Query Optimization"}),": Explain the performance difference between these two approaches:"]}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'Approach A: Get Computer Name, Running Processes from all machines where Running Processes contains "malware"\nApproach B: Get Computer Name from all machines where OS Platform = "Windows"; then Get Running Processes from [subset] where Running Processes contains "malware"\n'})}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Error Handling"}),": What would you do if a critical query returns incomplete results?"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Enterprise Scale"}),": How would you modify your approach for an environment with 50,000+ endpoints?"]}),"\n"]}),"\n",(0,d.jsxs)(b.li,{children:["\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Business Integration"}),": Describe how you would present query results to non-technical executives."]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Lab Completion Criteria:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"[ ] All 5 labs completed successfully"}),"\n",(0,d.jsx)(b.li,{children:"[ ] Created library of 10+ working saved questions"}),"\n",(0,d.jsx)(b.li,{children:"[ ] Demonstrated query optimization techniques"}),"\n",(0,d.jsx)(b.li,{children:"[ ] Built functional custom sensor"}),"\n",(0,d.jsx)(b.li,{children:"[ ] Implemented automated monitoring workflow"}),"\n",(0,d.jsx)(b.li,{children:"[ ] Completed real-world scenario exercises"}),"\n",(0,d.jsx)(b.li,{children:"[ ] Achieved >90% accuracy on assessment questions"}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Certification Readiness Validation:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Can construct complex queries under time pressure"}),"\n",(0,d.jsx)(b.li,{children:"Understands performance optimization principles"}),"\n",(0,d.jsx)(b.li,{children:"Demonstrates troubleshooting methodology"}),"\n",(0,d.jsx)(b.li,{children:"Shows enterprise integration capabilities"}),"\n",(0,d.jsx)(b.li,{children:"Exhibits professional query design practices"}),"\n"]}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.h2,{children:"Practice Components"}),"\n",(0,d.jsx)(g.default,{type:"quiz",title:"Sensor Selection Drill",difficulty:"beginner",estimatedTime:"8 minutes",children:(0,d.jsx)(b.p,{children:"Identify the best sensor for each scenario and construct a minimal query.\nExamples include inventory, security, and performance tasks.\nScore 80% to pass."})}),"\n",(0,d.jsx)(g.default,{type:"hands-on",title:"Filter Logic Builder",difficulty:"intermediate",estimatedTime:"12 minutes",children:(0,d.jsx)(b.p,{children:"Build queries using nested AND/OR/NOT with parentheses. Validate result counts as filters change."})}),"\n",(0,d.jsx)(g.default,{type:"flashcard",title:"Natural Language Flashcards",difficulty:"beginner",estimatedTime:"7 minutes",children:(0,d.jsx)(b.p,{children:"Rapid recall of the Tanium question grammar: Get [sensor] from [targets] where [filters].\nIncludes quick “what sensor would you use?” prompts."})}),"\n",(0,d.jsx)(g.default,{type:"scenario",title:"Sensor Lab Challenge",difficulty:"intermediate",estimatedTime:"15 minutes",children:(0,d.jsx)(b.p,{children:"Given a set of real-world tasks, choose sensors and write minimal queries. Compare accuracy and performance trade-offs."})}),"\n",(0,d.jsx)(g.default,{type:"cleanup",title:"Saved Question Cleanup Drill",difficulty:"beginner",estimatedTime:"10 minutes",children:(0,d.jsx)(b.p,{children:"Identify redundant or stale saved questions. Propose naming, ownership, and archiving improvements."})}),"\n",(0,d.jsx)(f.A,{title:"Comparison: Inventory vs Security queries",children:(0,d.jsx)(b.p,{children:"Inventory queries prioritize breadth and low cardinality fields. Security queries prioritize\ndepth and pivot speed. Optimize field projection and constrain early accordingly."})}),"\n",(0,d.jsx)(b.p,{children:'| Scenario | Recommended Sensor | Filter | Notes |\n|---|---|---|---|\n| Low disk space | Disk Space | < 10 GB | Constrain by OS first |\n| RDP exposure | Listening Ports | contains ":3389" | Validate on servers separately |\n| Antivirus disabled | Antivirus Status | contains "disabled" | Check platform-specific fields |\n| High CPU | CPU Utilization | > 85 | Pair with Top Processes by CPU |'}),"\n",(0,d.jsx)(f.A,{title:"Save time",children:(0,d.jsx)(b.p,{children:"Promote your top 10 questions to saved questions with clear names and owners. Reuse them for\ndaily health checks and incident triage."})}),"\n",(0,d.jsx)(b.p,{children:'| Operator | Usage | Example | Notes |\n|---|---|---|---|\n| contains | substring match | Computer Name contains "WKS-" | Fast on constrained cohorts |\n| equals | exact match | OS Platform = "Windows" | Preferred for performance |\n| matches | regex | Application Versions matches "^10\\.(2[2-9]|[3-9][0-9])" | Test on small sets |\n| older than | time window | Last Seen older than 7 days | Great for hygiene checks |'}),"\n",(0,d.jsx)(b.p,{children:"| Sensor Category | Typical Output Size | Perf Tips | Common Pair |\n|---|---|---|---|\n| Inventory (OS/Model) | Small | Project 1–2 fields | Computer Name |\n| Security (Processes/Ports) | Medium–Large | Constrain by OS/BU first | Logged In User |\n| Performance (CPU/Memory) | Small | Use thresholds | Top Processes |\n| Hardware (Disk/Adapter) | Small | Prefer equality/prefix | Asset Tag |"}),"\n",(0,d.jsx)(f.A,{title:"Scoring guide",children:(0,d.jsx)(b.p,{children:"Quizzes pass at 80%. Hands‑on labs require reproducible results and a short justification of\nsensor choice, filters, and scope. Track improvements over sessions."})}),"\n",(0,d.jsx)(f.A,{title:"Common mistakes",children:(0,d.jsx)(b.p,{children:"Fleet‑wide substring scans, returning many wide fields early, and skipping pilot cohorts. Always\nconstrain first, project minimally, and validate on samples."})}),"\n",(0,d.jsx)(b.h2,{children:"\uD83C\uDF10 REAL-WORLD ENTERPRISE SCENARIOS"}),"\n",(0,d.jsx)(b.p,{children:"Real-world Tanium deployments face complex challenges requiring sophisticated query strategies. These scenarios demonstrate practical applications of the skills you've learned, with decision frameworks used by Fortune 500 organizations."}),"\n",(0,d.jsx)(b.h3,{children:"\uD83D\uDD12 Scenario 1: Multi-National Security Assessment"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Organization"}),": Global financial services firm with 85,000 endpoints across 45 countries"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Challenge"}),": Weekly security posture assessment across diverse infrastructure while respecting regional compliance requirements (GDPR, APAC data sovereignty, US banking regulations)."]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Regional Constraints:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"EMEA"}),": GDPR Article 32 - data minimization, processing limitations"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"APAC"}),": Data sovereignty - no cross-border data transfer"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Americas"}),": SOX compliance, Federal banking regulations"]}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Solution Architecture:"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Phase 1: Regional Inventory Assessment"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'// EMEA-specific query (data minimization compliant)\nGet Computer Name, OS Platform, Last Seen, Domain\nfrom all machines\nwhere Domain contains ".emea"\nand Last Seen newer than 7 days\n\n// APAC-specific query (sovereignty compliant)\nGet Computer Name, Patch Status, Antivirus Status\nfrom all machines\nwhere IP Address starts with "10.200"\nand OS Platform = "Windows"\n\n// Americas query (SOX compliance)\nGet Computer Name, Critical Processes, Installed Applications, Registry - SOX Control Keys\nfrom all machines\nwhere Computer Name contains "AMER-"\nand Last Seen newer than 1 day\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Phase 2: Threat Vector Analysis"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'// Global threat hunting (automated daily execution)\nGet Computer Name, Suspicious Network Connections, Unusual Processes, Registry - Persistence Keys\nfrom all machines\nwhere (Suspicious Network Connections count &gt; 5\n    OR Unusual Processes contains "powershell.exe -enc"\n    OR Registry - Persistence Keys contains "Run")\nand Last Seen newer than 24 hours\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Performance Metrics:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Query execution time: <45 seconds per region"}),"\n",(0,d.jsx)(b.li,{children:"Data volume: 15GB daily across all regions"}),"\n",(0,d.jsx)(b.li,{children:"Compliance validation: 100% regional law adherence"}),"\n",(0,d.jsx)(b.li,{children:"False positive rate: <2% for threat detection"}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Business Impact:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"60% reduction in security assessment time"}),"\n",(0,d.jsx)(b.li,{children:"100% compliance with regional regulations"}),"\n",(0,d.jsx)(b.li,{children:"$2.3M annual cost savings from automation"}),"\n",(0,d.jsx)(b.li,{children:"24/7 continuous monitoring capability"}),"\n"]}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.h3,{children:"\uD83D\uDEA8 Scenario 2: Advanced Persistent Threat (APT) Response"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Organization"}),": Healthcare technology company, 25,000 endpoints"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Incident"}),": Suspected APT group targeting patient data through supply chain compromise"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Timeline"}),": 72-hour response window to contain and eradicate"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Hour 0-6: Rapid Threat Discovery"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Initial Compromise Indicators:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'// Phase 1: Identify patient of zero\nGet Computer Name, Running Processes, Network Connections, Recent File Changes\nfrom all machines\nwhere (Running Processes contains "svchost.exe" and Process Arguments contains "-k netsvcs -p -s Schedule"\n    OR Network Connections contains ":443" and Destination not in ("*.microsoft.com", "*.healthcare.gov")\n    OR Recent File Changes newer than 1 hour and File Path contains "\\\\temp\\\\" and File Extension = ".exe")\nand Computer Name starts with "WORKSTATION"\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Hour 6-24: Lateral Movement Tracking"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Multi-stage Investigation:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'// Stage 1: Credential harvesting detection\nGet Computer Name, Process Tree, Memory Dumps, Credential Manager Entries\nfrom machines with count &gt; 0 from\n(Get Computer Name from all machines where Running Processes contains "mimikatz"\n OR Running Processes contains "procdump"\n OR Recent Commands contains "lsass")\n\n// Stage 2: Network propagation mapping\nGet Computer Name, SMB Sessions, RDP Sessions, PowerShell History, WMI Events\nfrom machines with Computer Name in\n(Get Computer Name from machines where count &gt; 0 from previous query)\n\n// Stage 3: Data exfiltration identification\nGet Computer Name, Network Traffic Volume, Recent File Access, Cloud Storage Access\nfrom all machines\nwhere (Network Traffic Volume &gt; 1GB in last 4 hours\n    OR Recent File Access contains "\\\\database\\\\"\n    OR Cloud Storage Access contains "upload" and File Size &gt; 100MB)\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Hour 24-48: Persistence Mechanism Discovery"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Advanced Persistence Detection:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'// Registry-based persistence\nGet Computer Name, Registry - Run Keys, Registry - Service Keys, Registry - WMI Persistence\nfrom all machines\nwhere (Registry - Run Keys newer than 7 days\n    OR Registry - Service Keys contains "ImagePath" and Value contains "temp"\n    OR Registry - WMI Persistence count &gt; 0)\n\n// File system persistence\nGet Computer Name, Startup Folder Contents, Scheduled Tasks, System Services\nfrom all machines\nwhere (Startup Folder Contents newer than 7 days\n    OR Scheduled Tasks contains "Author" and Author not in ("Microsoft Corporation", "SYSTEM")\n    OR System Services contains "State" and State = "Running" and Path contains "\\\\temp\\\\")\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Hour 48-72: Complete Eradication"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Verification Queries:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'// Confirm threat elimination\nGet Computer Name, IoC Validation Status, System Integrity Check, Network Baseline Comparison\nfrom all machines\nwhere IoC Validation Status = "Clean"\nand System Integrity Check = "Passed"\nand Network Baseline Comparison = "Normal"\n\n// Final compliance validation\nGet Computer Name, Security Event Logs, Antivirus Status, Patch Status, Configuration Compliance\nfrom all machines\nwhere Security Event Logs contains "malware remediation complete"\nand Antivirus Status = "Enabled" and Definitions newer than 1 day\nand Patch Status = "Current"\nand Configuration Compliance = "100%"\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Outcome Metrics:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Time to detection: 4 hours (industry average: 287 days)"}),"\n",(0,d.jsx)(b.li,{children:"Complete containment: 31 hours"}),"\n",(0,d.jsx)(b.li,{children:"Zero data exfiltration confirmed"}),"\n",(0,d.jsx)(b.li,{children:"99.8% threat elimination success rate"}),"\n",(0,d.jsx)(b.li,{children:"Total cost: $185K (vs. $9.4M average breach cost)"}),"\n"]}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.h3,{children:"\uD83C\uDFE0 Scenario 3: Remote Work Infrastructure Transformation"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Organization"}),": Manufacturing company rapidly scaling remote workforce (COVID-19 response)"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Challenge"}),": Secure 15,000 new remote workers in 60 days while maintaining operational security"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Infrastructure Requirements:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"VPN capacity scaling (500 → 15,000 concurrent)"}),"\n",(0,d.jsx)(b.li,{children:"Endpoint security for personal devices (BYOD policy)"}),"\n",(0,d.jsx)(b.li,{children:"Compliance with manufacturing regulations (ITAR, EAR)"}),"\n",(0,d.jsx)(b.li,{children:"Performance monitoring for critical manufacturing systems"}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Week 1-2: Remote Endpoint Discovery"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Device Inventory and Classification:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'// Personal vs. corporate device identification\nGet Computer Name, Domain Membership, Asset Tag, Device Owner, Installation Date\nfrom all machines\nwhere (Domain Membership not equals "CORP.MANUFACTURING.COM"\n    OR Asset Tag equals "Unknown"\n    OR Installation Date newer than 30 days)\nand Computer Name not starts with "MANUFACTURING-"\n\n// VPN readiness assessment\nGet Computer Name, VPN Client Status, Network Adapter Configuration, Firewall Status\nfrom all machines\nwhere Computer Name contains "REMOTE"\nand (VPN Client Status not equals "Installed"\n    OR Network Adapter Configuration contains "Public"\n    OR Firewall Status not equals "Enabled")\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Week 3-4: Security Baseline Implementation"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Compliance Validation Queries:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'// ITAR/EAR compliance checking\nGet Computer Name, Installed Applications, Data Classification Labels, Encryption Status\nfrom all machines\nwhere Data Classification Labels contains "ITAR"\nand (Encryption Status not equals "BitLocker Enabled"\n    OR Installed Applications contains "cloud storage"\n    OR Installed Applications contains "file sharing")\n\n// Manufacturing system access verification\nGet Computer Name, Manufacturing Application Access, VPN Session History, Location Data\nfrom all machines\nwhere Manufacturing Application Access contains "SCADA"\nand (VPN Session History contains "non-US IP"\n    OR Location Data not in approved_countries)\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Week 5-8: Performance Optimization"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Remote Work Performance Monitoring:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'// Network performance assessment\nGet Computer Name, VPN Connection Quality, Bandwidth Utilization, Latency Measurements\nfrom all machines\nwhere Computer Name contains "REMOTE"\nand (VPN Connection Quality contains "Poor"\n    OR Bandwidth Utilization &gt; 80%\n    OR Latency Measurements &gt; 150)\n\n// Application performance tracking\nGet Computer Name, Application Response Times, Resource Utilization, User Experience Metrics\nfrom all machines\nwhere Application Response Times contains "Manufacturing ERP"\nand (Response Time &gt; 3000ms\n    OR Resource Utilization contains "High Memory"\n    OR User Experience Metrics contains "Slow")\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Business Continuity Validation:"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Critical System Availability:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'// Manufacturing system accessibility\nGet Computer Name, Manufacturing System Connectivity, Failover Status, Backup Verification\nfrom all machines\nwhere Computer Name starts with "MANUFACTURING-"\nand (Manufacturing System Connectivity not equals "Available"\n    OR Failover Status not equals "Ready"\n    OR Backup Verification older than 24 hours)\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Results Achieved:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"15,000 remote workers enabled in 47 days (ahead of schedule)"}),"\n",(0,d.jsx)(b.li,{children:"99.7% uptime for critical manufacturing systems"}),"\n",(0,d.jsx)(b.li,{children:"Zero ITAR/EAR compliance violations"}),"\n",(0,d.jsx)(b.li,{children:"35% productivity increase (measured via application usage)"}),"\n",(0,d.jsx)(b.li,{children:"$12M cost savings vs. alternative office space expansion"}),"\n"]}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.h3,{children:"\uD83C\uDFED Scenario 4: IoT/OT Security Integration"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Organization"}),": Energy sector utility company with hybrid IT/OT environment"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Challenge"}),": Integrate 50,000 IoT sensors and 5,000 OT devices with existing Tanium deployment without compromising critical infrastructure operations"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Environmental Constraints:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"Zero downtime tolerance for power generation systems"}),"\n",(0,d.jsx)(b.li,{children:"Air-gapped networks with limited connectivity"}),"\n",(0,d.jsx)(b.li,{children:"Legacy systems (Windows 2000, embedded Linux)"}),"\n",(0,d.jsx)(b.li,{children:"NERC CIP compliance requirements"}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Phase 1: Network Segmentation Validation"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"IT/OT Boundary Verification:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'// Network segmentation validation\nGet Computer Name, Network Interfaces, Routing Tables, Firewall Rules, Zone Classification\nfrom all machines\nwhere Zone Classification in ("DMZ", "OT", "Critical Control")\nand (Network Interfaces contains "192.168.50"\n    OR Routing Tables contains "10.50.0.0"\n    OR Firewall Rules contains "ANY ANY ALLOW")\n\n// Legacy system inventory\nGet Computer Name, OS Version, Patch Level, Support Status, Last Communication\nfrom all machines\nwhere (OS Version contains "Windows 2000"\n    OR OS Version contains "Windows XP"\n    OR Support Status = "End of Life")\nand Zone Classification = "OT"\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Phase 2: IoT Device Classification"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Device Type and Risk Assessment:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'// IoT device discovery and categorization\nGet Computer Name, Device Type, Manufacturer, Firmware Version, Communication Protocols\nfrom all machines\nwhere Device Type in ("Sensor", "Controller", "Gateway", "HMI")\nand (Firmware Version older than 365 days\n    OR Communication Protocols contains "Unencrypted"\n    OR Manufacturer not in approved_vendor_list)\n\n// Critical device monitoring\nGet Computer Name, Operational Status, Performance Metrics, Alert Conditions, Maintenance Schedule\nfrom all machines\nwhere Zone Classification = "Critical Control"\nand (Operational Status not equals "Normal"\n    OR Performance Metrics contains "Degraded"\n    OR Alert Conditions count &gt; 0)\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Phase 3: Compliance Monitoring"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"NERC CIP Compliance Validation:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'// CIP-007 patch management compliance\nGet Computer Name, Patch Status, Security Patch Installation Date, Vulnerability Assessment\nfrom all machines\nwhere Zone Classification in ("High Impact", "Medium Impact")\nand (Patch Status contains "Missing Critical"\n    OR Security Patch Installation Date older than 35 days\n    OR Vulnerability Assessment contains "High" and Age &gt; 30 days)\n\n// CIP-010 change management validation\nGet Computer Name, Configuration Changes, Change Approval Status, Rollback Capability\nfrom all machines\nwhere Zone Classification = "Critical Control"\nand (Configuration Changes newer than 7 days\n    AND Change Approval Status not equals "Approved"\n    OR Rollback Capability = "Not Available")\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Phase 4: Anomaly Detection"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Advanced Threat Detection for OT:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'// Unusual communication patterns\nGet Computer Name, Network Traffic Analysis, Protocol Deviations, Timing Anomalies\nfrom all machines\nwhere Zone Classification = "OT"\nand (Network Traffic Analysis contains "Unusual Destination"\n    OR Protocol Deviations count &gt; 0\n    OR Timing Anomalies contains "Off Schedule")\n\n// Process integrity monitoring\nGet Computer Name, Control Logic Changes, Setpoint Modifications, Alarm Conditions\nfrom all machines\nwhere Device Type = "Controller"\nand (Control Logic Changes newer than 1 hour\n    OR Setpoint Modifications not in approved_range\n    OR Alarm Conditions contains "Process Deviation")\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Implementation Results:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"100% inventory visibility across IT/OT environments"}),"\n",(0,d.jsx)(b.li,{children:"45% reduction in false positive security alerts"}),"\n",(0,d.jsx)(b.li,{children:"NERC CIP compliance maintained throughout integration"}),"\n",(0,d.jsx)(b.li,{children:"Zero operational disruptions during deployment"}),"\n",(0,d.jsx)(b.li,{children:"$8.5M annual cost savings from unified monitoring"}),"\n"]}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.h3,{children:"\uD83C\uDFE5 Scenario 5: HIPAA Compliance and Patient Data Protection"}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Organization"}),": Regional health system with 12 hospitals, 150 clinics, 75,000 endpoints"]}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Challenge"}),": Achieve and maintain HIPAA compliance across complex healthcare IT infrastructure while enabling clinical workflow efficiency"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Regulatory Requirements:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"PHI data encryption at rest and in transit"}),"\n",(0,d.jsx)(b.li,{children:"Access logging and audit trails"}),"\n",(0,d.jsx)(b.li,{children:"Minimum necessary access principles"}),"\n",(0,d.jsx)(b.li,{children:"Risk assessment and mitigation"}),"\n",(0,d.jsx)(b.li,{children:"Incident response and breach notification"}),"\n"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Phase 1: PHI Data Discovery and Classification"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Patient Data Location Mapping:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'// PHI-containing systems identification\nGet Computer Name, Installed Applications, Data Store Locations, Encryption Status, Access Controls\nfrom all machines\nwhere (Installed Applications contains "EMR"\n    OR Installed Applications contains "PACS"\n    OR Installed Applications contains "Clinical"\n    OR Data Store Locations contains "patient")\nand (Encryption Status not equals "AES-256"\n    OR Access Controls not contains "Role-Based")\n\n// Medical device integration assessment\nGet Computer Name, Medical Device Connectivity, Data Flow Mapping, Security Configuration\nfrom all machines\nwhere Medical Device Connectivity count &gt; 0\nand (Data Flow Mapping contains "Unencrypted"\n    OR Security Configuration contains "Default Password"\n    OR Medical Device Connectivity contains "Direct Internet")\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Phase 2: Access Control Validation"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"HIPAA Minimum Necessary Compliance:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'// User access pattern analysis\nGet Computer Name, User Account Activity, Resource Access Logs, Role Assignments, Time-Based Access\nfrom all machines\nwhere Resource Access Logs contains "PHI"\nand (Role Assignments not equals assigned_clinical_role\n    OR Time-Based Access contains "After Hours" and Justification = "None"\n    OR User Account Activity contains "Bulk Download" and Volume &gt; 1000)\n\n// Administrative access monitoring\nGet Computer Name, Administrative Actions, Privilege Escalation, Database Access, System Changes\nfrom all machines\nwhere (Administrative Actions contains "User Creation"\n    OR Privilege Escalation newer than 1 hour\n    OR Database Access contains "PHI_Database"\n    OR System Changes contains "Security Configuration")\nand Administrator_Justification = "Not Provided"\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Phase 3: Audit Trail Implementation"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Comprehensive Logging Validation:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'// HIPAA audit log compliance\nGet Computer Name, Audit Log Status, Log Retention Period, Log Integrity Verification, Access Attempts\nfrom all machines\nwhere (Audit Log Status not equals "Enabled"\n    OR Log Retention Period &lt; 6 years\n    OR Log Integrity Verification contains "Failed"\n    OR Access Attempts contains "PHI" and Log_Entry = "Missing")\n\n// Clinical workflow tracking\nGet Computer Name, Clinical Application Usage, Patient Record Access, Treatment Documentation, Billing Events\nfrom all machines\nwhere Clinical Application Usage contains "Patient Lookup"\nand (Patient Record Access not logged\n    OR Treatment Documentation contains "Incomplete"\n    OR Billing Events contains "PHI" and HITECH_Compliant = "False")\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Phase 4: Risk Assessment and Mitigation"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Vulnerability Management for Healthcare:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'// Medical device vulnerability assessment\nGet Computer Name, Medical Device Vulnerabilities, Patch Feasibility, Risk Score, Mitigation Status\nfrom all machines\nwhere Medical Device Vulnerabilities count &gt; 0\nand (Risk Score = "High" and Age &gt; 30 days\n    OR Patch Feasibility = "Not Possible" and Mitigation Status not equals "Compensating Controls"\n    OR Medical Device Vulnerabilities contains "Remote Code Execution")\n\n// Business associate compliance verification\nGet Computer Name, Third Party Connections, Data Sharing Agreements, BAA Status, Data Flow Monitoring\nfrom all machines\nwhere Third Party Connections count &gt; 0\nand (BAA Status not equals "Signed and Current"\n    OR Data Sharing Agreements older than 365 days\n    OR Data Flow Monitoring contains "PHI" and Encryption = "None")\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Phase 5: Incident Response and Breach Prevention"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Real-time Threat Detection:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{children:'// Potential data breach detection\nGet Computer Name, Unusual Data Access, Large File Transfers, External Communications, User Behavior Analysis\nfrom all machines\nwhere (Unusual Data Access contains "Mass Patient Lookup"\n    OR Large File Transfers &gt; 100MB and Destination contains "External"\n    OR External Communications contains "PHI" and Approved = "False"\n    OR User Behavior Analysis contains "Anomalous Pattern")\n\n// Breach notification trigger assessment\nGet Computer Name, Data Exposure Events, Impact Assessment, Notification Requirements, Regulatory Timeline\nfrom all machines\nwhere Data Exposure Events count &gt; 0\nand (Impact Assessment contains "500+ Patients"\n    OR Notification Requirements contains "OCR Report Required"\n    OR Regulatory Timeline contains "72 Hour Deadline")\n'})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"HIPAA Compliance Results:"})}),"\n",(0,d.jsxs)(b.ul,{children:["\n",(0,d.jsx)(b.li,{children:"100% PHI data discovery and classification achieved"}),"\n",(0,d.jsx)(b.li,{children:"99.9% audit trail completeness maintained"}),"\n",(0,d.jsx)(b.li,{children:"Zero HIPAA violations during 18-month audit period"}),"\n",(0,d.jsx)(b.li,{children:"$15.2M potential fine avoidance through proactive compliance"}),"\n",(0,d.jsx)(b.li,{children:"25% improvement in clinical workflow efficiency"}),"\n",(0,d.jsx)(b.li,{children:"60% reduction in compliance audit preparation time"}),"\n"]}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsx)(b.h3,{children:"\uD83D\uDCCA Enterprise Decision Framework"}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Query Strategy Selection Matrix:"})}),"\n",(0,d.jsxs)(b.p,{children:["| Business Driver | Recommended Approach | Query Pattern | Success Metrics |\n|---|---|---|---|\n| ",(0,d.jsx)(b.strong,{children:"Regulatory Compliance"})," | Conservative, auditable queries | Multi-stage validation with full logging | 100% compliance, complete audit trails |\n| ",(0,d.jsx)(b.strong,{children:"Incident Response"})," | Rapid, iterative investigation | Broad discovery → narrow focus → validation | Time to containment, threat elimination rate |\n| ",(0,d.jsx)(b.strong,{children:"Performance Optimization"})," | Baseline-driven monitoring | Trend analysis with threshold alerting | SLA compliance, resource optimization |\n| ",(0,d.jsx)(b.strong,{children:"Risk Management"})," | Continuous, automated assessment | Scheduled queries with exception reporting | Risk score improvement, vulnerability reduction |\n| ",(0,d.jsx)(b.strong,{children:"Business Operations"})," | Efficient, scheduled execution | Optimized queries with caching | Cost per query, business value delivered |"]}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"Query Complexity Assessment Framework:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-yaml",children:"Simple Queries (Single sensor, basic filters):\n  - Execution time: &lt;30 seconds\n  - Resource impact: Minimal\n  - Use cases: Daily health checks, basic inventory\n  - Example: \"Get Computer Name from all machines where OS Platform = 'Windows'\"\n\nModerate Queries (Multiple sensors, complex filters):\n  - Execution time: 30 seconds - 5 minutes\n  - Resource impact: Moderate\n  - Use cases: Security assessments, compliance reporting\n  - Example: Multi-stage security posture evaluation\n\nComplex Queries (Custom sensors, advanced logic):\n  - Execution time: 5+ minutes\n  - Resource impact: High\n  - Use cases: Forensic investigation, comprehensive audits\n  - Example: APT threat hunting with behavioral analysis\n"})}),"\n",(0,d.jsx)(b.p,{children:(0,d.jsx)(b.strong,{children:"ROI Calculation Framework:"})}),"\n",(0,d.jsx)(b.pre,{children:(0,d.jsx)(b.code,{className:"language-yaml",children:"Cost Factors:\n  - Query execution resources (CPU, network, storage)\n  - Personnel time for query development and analysis\n  - Infrastructure capacity for data processing\n  - Compliance and audit overhead\n\nValue Factors:\n  - Risk reduction (quantified by threat mitigation)\n  - Operational efficiency (time savings, automation)\n  - Compliance assurance (fine avoidance, audit readiness)\n  - Business enablement (faster decision making, insights)\n\nROI Formula:\n  ROI = (Value Delivered - Total Cost) / Total Cost \xd7 100%\n\nBenchmark ROI Targets:\n  - Security queries: 300-500% ROI\n  - Compliance queries: 200-400% ROI\n  - Operational queries: 150-300% ROI\n"})}),"\n",(0,d.jsx)(b.h2,{children:"✅ Key Takeaways"}),"\n",(0,d.jsxs)(b.ol,{children:["\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Natural Language"}),": Tanium queries use intuitive human language patterns"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Sensor Mastery"}),": Understanding the 500+ sensors is crucial for effective querying"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Custom Solutions"}),": Create custom sensors when built-in options are insufficient"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Question Lifecycle"}),": Proper management ensures scalable, maintainable query operations"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Enterprise Scale"}),": Real-world deployments require sophisticated multi-stage query strategies"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Compliance Integration"}),": Regulatory requirements must be embedded into query design"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Performance Optimization"}),": Large-scale environments demand careful resource management"]}),"\n",(0,d.jsxs)(b.li,{children:[(0,d.jsx)(b.strong,{children:"Business Alignment"}),": Query strategies must deliver measurable business value"]}),"\n"]}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Next Module"}),": ",(0,d.jsx)(b.a,{href:"/modules/refining-questions-targeting",children:"Refining Questions & Targeting"})," - Learn advanced targeting and filtering techniques"]}),"\n",(0,d.jsx)(b.h2,{children:"\uD83C\uDFAF Module Transition: Ready for Advanced Targeting?"}),"\n",(0,d.jsx)(c,{currentModuleId:"asking-questions",currentModuleTitle:"Asking Questions",nextModuleId:"refining-questions-targeting",nextModuleTitle:"Refining Questions & Targeting",requiredSkills:[{id:"basic-query",name:"Basic Query Construction",description:"Build simple queries using Get-From-Where syntax",tested:!1,passed:!1},{id:"sensor-usage",name:"Sensor Selection",description:"Choose appropriate sensors for different information needs",tested:!1,passed:!1},{id:"result-interpretation",name:"Result Interpretation",description:"Understand and analyze query results",tested:!1,passed:!1},{id:"saved-questions",name:"Saved Questions",description:"Create and manage reusable saved questions",tested:!1,passed:!1}],challenges:[{question:"Which query correctly retrieves all Windows servers with their patch status?",options:["Get Computer Name and Patch Status from all machines where Operating System contains Server","Get Patch Status where Computer Name contains Server","Select Computer Name, Patch Status from machines where OS = Windows Server","Find all servers and show patch status"],correctAnswer:0,explanation:'The correct syntax uses "Get [sensors] from all machines where [filter]". The query must specify what to get (Computer Name and Patch Status), from where (all machines), and the filter condition (OS contains Server).',skillId:"basic-query"},{question:"Which sensor would you use to find machines with high CPU usage?",options:["System Performance","CPU Utilization","Process List","Hardware Information"],correctAnswer:1,explanation:"CPU Utilization is the specific sensor that returns current CPU usage percentage. System Performance might include CPU but also other metrics. Process List shows what is running but not overall CPU usage.",skillId:"sensor-usage"},{question:'A query returns "234 machines with 3 different results". What does this mean?',options:["234 machines responded with errors","Only 3 machines responded to the query","234 machines responded, grouped into 3 distinct result sets","The query failed on 231 machines"],correctAnswer:2,explanation:'Tanium groups identical results together. "234 machines with 3 different results" means all 234 machines responded successfully, but their responses fell into 3 different groups based on the data returned.',skillId:"result-interpretation"},{question:"What is the primary benefit of creating a Saved Question?",options:["It runs faster than regular queries","It can be scheduled to run automatically and reused across teams","It bypasses security restrictions","It uses less network bandwidth"],correctAnswer:1,explanation:"Saved Questions can be scheduled to run automatically at intervals and shared across teams for consistent reporting. They do not necessarily run faster or use less bandwidth, and they follow the same security rules.",skillId:"saved-questions"}],minimumScore:.75}),"\n",(0,d.jsx)(b.hr,{}),"\n",(0,d.jsxs)(b.p,{children:[(0,d.jsx)(b.strong,{children:"Next Module"}),": ",(0,d.jsx)(b.a,{href:"/modules/refining-questions-targeting",children:"Refining Questions & Targeting"})," - Master advanced targeting and filtering techniques"]})]})}function j(a={}){let{wrapper:b}={...(0,e.R)(),...a.components};return b?(0,d.jsx)(b,{...a,children:(0,d.jsx)(i,{...a})}):i(a)}function k(a,b){throw Error("Expected "+(b?"component":"object")+" `"+a+"` to be defined: you likely forgot to import, pass, or provide it.")}},89301:(a,b,c)=>{c.d(b,{R:()=>l});var d=c(75338),e=c(73216),f=c(40392),g=c(54276),h=c(32565),i=c(97759),j=c(9182);function k(a){let b=a.href||"",c=/^https?:\/\//i.test(b),e=c?"noopener noreferrer":a.rel,f=c?"_blank":a.target;return(0,d.jsx)("a",{...a,rel:e,target:f})}function l(a){return{...a,a:k,PracticeButton:e.default,InfoBox:f.A,QueryPlayground:g.default,SkillGate:h.default,MiniProject:i.default,ModuleTransition:j.default}}c(74515)}};