"use strict";exports.id=9129,exports.ids=[9129],exports.modules={49129:(a,b,c)=>{c.d(b,{questionService:()=>g});var d=c(93965),e=c(70798);class f{mapChoiceIdToDb(a){let b=(a||"").toString().toLowerCase(),c={a:0,b:1,c:2,d:3};if(b in c)return c[b];let d=Number(b);return Number.isFinite(d)?d:b}mapDbDifficultyToUi(a){switch((a||"").toLowerCase()){case"beginner":return d.Difficulty.BEGINNER;case"intermediate":return d.Difficulty.INTERMEDIATE;case"advanced":return d.Difficulty.ADVANCED;case"expert":return d.Difficulty.EXPERT;default:if(a===d.Difficulty.BEGINNER||a===d.Difficulty.INTERMEDIATE||a===d.Difficulty.ADVANCED||a===d.Difficulty.EXPERT)return a;return d.Difficulty.INTERMEDIATE}}mapUiDifficultyToDb(a){switch((a||"").toString()){case d.Difficulty.BEGINNER:case"beginner":return"beginner";case d.Difficulty.INTERMEDIATE:case"intermediate":return"intermediate";case d.Difficulty.ADVANCED:case"advanced":return"advanced";case d.Difficulty.EXPERT:case"expert":return"expert";default:return"intermediate"}}mapDbDomainToUi(a){if(!a)return d.TCODomain.FUNDAMENTALS;let b=a.toUpperCase();return this.DOMAIN_DB_TO_UI[b]?this.DOMAIN_DB_TO_UI[b]:Object.values(d.TCODomain).find(b=>b===a)||d.TCODomain.FUNDAMENTALS}mapUiDomainToDb(a){if(Object.values(d.TCODomain).includes(a))return a;let b=a||d.TCODomain.FUNDAMENTALS;return this.DOMAIN_UI_TO_DB[b]||d.TCODomain.FUNDAMENTALS}mapDbCategoryToUi(a){if(!a)return d.QuestionCategory.PLATFORM_FUNDAMENTALS;let b=a.toUpperCase();return this.CATEGORY_DB_TO_UI[b]?this.CATEGORY_DB_TO_UI[b]:Object.values(d.QuestionCategory).find(b=>b===a)||d.QuestionCategory.PLATFORM_FUNDAMENTALS}mapUiCategoryToDb(a){let b=a||d.QuestionCategory.PLATFORM_FUNDAMENTALS;return this.CATEGORY_UI_TO_DB[b]||"PLATFORM_FUNDAMENTALS"}async getAllQuestions(){let{data:a,error:b}=await e.N.from("questions").select("*").order("created_at");if(b)throw Error(`Failed to fetch questions: ${b.message}`);return this.transformDatabaseQuestions(a??[])}async getQuestionsByDomain(a){let b=this.mapUiDomainToDb(a),{data:c,error:d}=await e.N.from("questions").select("*").eq("domain",b).order("created_at");if(d)throw Error(`Failed to fetch questions for domain ${a}: ${d.message}`);return this.transformDatabaseQuestions(c??[])}async getQuestionsByDifficulty(a){let b=this.mapUiDifficultyToDb(a),{data:c,error:d}=await e.N.from("questions").select("*").eq("difficulty",b).order("created_at");if(d)throw Error(`Failed to fetch questions for difficulty ${a}: ${d.message}`);return this.transformDatabaseQuestions(c??[])}async getQuestionsByCategory(a){let b=this.mapUiCategoryToDb(a),{data:c,error:d}=await e.N.from("questions").select("*").eq("category",b).order("created_at");if(d)throw Error(`Failed to fetch questions for category ${a}: ${d.message}`);return this.transformDatabaseQuestions(c??[])}async getWeightedRandomQuestions(a){let{data:b,error:c}=await e.N.rpc("get_weighted_random_questions",{question_count:a});if(c)throw Error(`Failed to fetch weighted random questions: ${c.message}`);return(b??[]).map(a=>a.question_data)}async getMockExamQuestions(){return this.getWeightedRandomQuestions(105)}async getRandomQuestions(a){let{data:b,error:c}=await e.N.from("questions").select("*").order("RANDOM()").limit(a);if(c)throw Error(`Failed to fetch random questions: ${c.message}`);return this.transformDatabaseQuestions(b??[])}async getPracticeQuestions(a,b=10){let c=this.mapUiDomainToDb(a),{data:d,error:f}=await e.N.from("questions").select("*").eq("domain",c).order("RANDOM()").limit(b);if(f)throw Error(`Failed to fetch practice questions: ${f.message}`);return this.transformDatabaseQuestions(d??[])}async getQuestionStats(){let a=await e.N.from("questions").select("*",{count:"exact",head:!0}),b=a?.count??0,c=await e.N.from("questions").select("domain"),f=c?.data??[],g=c?.error;if(g)throw Error(`Failed to fetch domain statistics: ${g.message}`);let h=await e.N.from("questions").select("difficulty"),i=h?.data??[],j=await e.N.from("questions").select("category"),k=j?.data??[],l={},m={},n={};return Object.values(d.TCODomain).forEach(a=>{l[a]=0}),Object.values(d.Difficulty).forEach(a=>{m[a]=0}),Object.values(d.QuestionCategory).forEach(a=>{n[a]=0}),f.forEach(a=>{let b=this.mapDbDomainToUi(a.domain||void 0);l[b]=(l[b]||0)+1}),i.forEach(a=>{let b=this.mapDbDifficultyToUi(a.difficulty);m[b]=(m[b]||0)+1}),k.forEach(a=>{let b=this.mapDbCategoryToUi(a.category);n[b]=(n[b]||0)+1}),{totalQuestions:b||0,domainDistribution:l,difficultyDistribution:m,categoryDistribution:n}}async searchQuestions(a){let{data:b,error:c}=await e.N.from("questions").select("*").or(`question.ilike.%${a}%,explanation.ilike.%${a}%`).order("created_at");if(c)throw Error(`Failed to search questions: ${c.message}`);return this.transformDatabaseQuestions(b??[])}async getQuestionsByTags(a){let{data:b,error:c}=await e.N.from("questions").select("*").overlaps("tags",a).order("created_at");if(c)throw Error(`Failed to fetch questions by tags: ${c.message}`);return this.transformDatabaseQuestions(b??[])}async validateQuestionDatabase(){let a=[],b=[];try{let c=await e.N.from("questions").select("id, question, options, correct_answer").or("question.is.null,options.is.null,correct_answer.is.null"),f=c?.data??[];f.length>0&&a.push(`Found ${f.length} questions with missing required fields`);let g=await e.N.from("questions").select("id, options, correct_answer");(g?.data??[]).forEach(b=>{if(b.options&&Array.isArray(b.options)){var c;let d=b.options.map((a,b)=>a&&"object"==typeof a&&"id"in a?String(a.id):["a","b","c","d"][b]||String(b)),e=(c=b.correct_answer,"number"==typeof c?["a","b","c","d"][c]||String(c):"string"==typeof c?({0:"a",1:"b",2:"c",3:"d"})[c]||c:String(c??"a"));d.includes(e)||a.push(`Question ${b.id}: Correct answer ID '${b.correct_answer}' not found in choices`)}else a.push(`Question ${b.id}: Choices are missing or not an array.`)});let h=await this.getQuestionStats(),i={[d.TCODomain.ASKING_QUESTIONS]:22,[d.TCODomain.REFINING_QUESTIONS]:23,[d.TCODomain.TAKING_ACTION]:15,[d.TCODomain.NAVIGATION_MODULES]:23,[d.TCODomain.REPORTING_EXPORT]:17};Object.entries(i).forEach(([a,c])=>{let d=h.domainDistribution[a]/h.totalQuestions*100;Math.abs(d-c)>5&&b.push(`Domain ${a}: Expected ~${c}%, got ${d.toFixed(1)}%`)})}catch(b){a.push(`Database validation failed: ${b}`)}return{isValid:0===a.length,errors:a,warnings:b}}transformDatabaseQuestions(a){return(Array.isArray(a)?a:a?[a]:[]).map(a=>{let b,c=a.correct_answer;return b="number"==typeof c?["a","b","c","d"][c]||String(c):"string"==typeof c?({0:"a",1:"b",2:"c",3:"d"})[c]||c:String(c??"a"),{id:a.id,question:a.question,choices:a.options||[],correctAnswerId:b,domain:this.mapDbDomainToUi(a.domain),difficulty:this.mapDbDifficultyToUi(a.difficulty),category:this.mapDbCategoryToUi(a.category),explanation:a.explanation||"",tags:a.tags||[],studyGuideRef:a.study_guide_ref||a.references||"",createdAt:a.created_at?new Date(a.created_at):void 0,updatedAt:a.updated_at?new Date(a.updated_at):void 0}})}async addQuestion(a){let b={question:a.question,options:a.choices,correct_answer:this.mapChoiceIdToDb(a.correctAnswerId),domain:this.mapUiDomainToDb(a.domain),difficulty:this.mapUiDifficultyToDb(a.difficulty),category:this.mapUiCategoryToDb(a.category),explanation:a.explanation||null,tags:a.tags||[],created_at:a.createdAt?.toISOString()||new Date().toISOString(),updated_at:a.updatedAt?.toISOString()||new Date().toISOString()},{data:c,error:d}=await e.N.from("questions").insert(b).select().single();if(d)throw Error(`Failed to add question: ${d.message}`);return this.transformDatabaseQuestions(c)[0]}async updateQuestion(a,b){let c={...b.question&&{question:b.question},...b.choices&&{options:b.choices},...b.correctAnswerId&&{correct_answer:this.mapChoiceIdToDb(b.correctAnswerId)},...b.domain&&{domain:this.mapUiDomainToDb(b.domain)},...b.difficulty&&{difficulty:this.mapUiDifficultyToDb(b.difficulty)},...b.category&&{category:this.mapUiCategoryToDb(b.category)},...b.explanation&&{explanation:b.explanation},...b.tags&&{tags:b.tags},...b.createdAt&&{created_at:b.createdAt.toISOString()},updated_at:new Date().toISOString()},{data:d,error:f}=await e.N.from("questions").update(c).eq("id",a).select().single();if(f)throw Error(`Failed to update question: ${f.message}`);return this.transformDatabaseQuestions(d)[0]}async deleteQuestion(a){let{error:b}=await e.N.from("questions").delete().eq("id",a);if(b)throw Error(`Failed to delete question: ${b.message}`)}constructor(){this.DOMAIN_DB_TO_UI={ASKING_QUESTIONS:d.TCODomain.ASKING_QUESTIONS,REFINING_QUESTIONS:d.TCODomain.REFINING_QUESTIONS,REFINING_TARGETING:d.TCODomain.REFINING_TARGETING,TAKING_ACTION:d.TCODomain.TAKING_ACTION,NAVIGATION_MODULES:d.TCODomain.NAVIGATION_MODULES,NAVIGATION_BASIC_MODULE_FUNCTIONS:d.TCODomain.NAVIGATION_MODULES,REPORTING_EXPORT:d.TCODomain.REPORTING_EXPORT,REPORTING_DATA_EXPORT:d.TCODomain.REPORTING_EXPORT,SECURITY:d.TCODomain.SECURITY,FUNDAMENTALS:d.TCODomain.FUNDAMENTALS,TROUBLESHOOTING:d.TCODomain.TROUBLESHOOTING},this.DOMAIN_UI_TO_DB={[d.TCODomain.ASKING_QUESTIONS]:"ASKING_QUESTIONS",[d.TCODomain.REFINING_QUESTIONS]:"REFINING_QUESTIONS",[d.TCODomain.REFINING_TARGETING]:"REFINING_TARGETING",[d.TCODomain.TAKING_ACTION]:"TAKING_ACTION",[d.TCODomain.NAVIGATION_MODULES]:"NAVIGATION_MODULES",[d.TCODomain.REPORTING_EXPORT]:"REPORTING_EXPORT",[d.TCODomain.SECURITY]:"SECURITY",[d.TCODomain.FUNDAMENTALS]:"FUNDAMENTALS",[d.TCODomain.TROUBLESHOOTING]:"TROUBLESHOOTING"},this.CATEGORY_DB_TO_UI={PLATFORM_FUNDAMENTALS:d.QuestionCategory.PLATFORM_FUNDAMENTALS,CONSOLE_PROCEDURES:d.QuestionCategory.CONSOLE_PROCEDURES,TROUBLESHOOTING:d.QuestionCategory.TROUBLESHOOTING,PRACTICAL_SCENARIOS:d.QuestionCategory.PRACTICAL_SCENARIOS,LINEAR_CHAIN:d.QuestionCategory.LINEAR_CHAIN},this.CATEGORY_UI_TO_DB={[d.QuestionCategory.PLATFORM_FUNDAMENTALS]:"PLATFORM_FUNDAMENTALS",[d.QuestionCategory.CONSOLE_PROCEDURES]:"CONSOLE_PROCEDURES",[d.QuestionCategory.TROUBLESHOOTING]:"TROUBLESHOOTING",[d.QuestionCategory.PRACTICAL_SCENARIOS]:"PRACTICAL_SCENARIOS",[d.QuestionCategory.LINEAR_CHAIN]:"LINEAR_CHAIN"}}}let g=new f}};