// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type PagesPageConfig = {
  default: React.ComponentType<any> | ((props: any) => React.ReactNode | Promise<React.ReactNode> | never | void)
  getStaticProps?: (context: any) => Promise<any> | any
  getStaticPaths?: (context: any) => Promise<any> | any
  getServerSideProps?: (context: any) => Promise<any> | any
  getInitialProps?: (context: any) => Promise<any> | any
  /**
   * Segment configuration for legacy Pages Router pages.
   * Validated at build-time by parsePagesSegmentConfig.
   */
  config?: {
    amp?: boolean | 'hybrid' | string // necessary for JS
    maxDuration?: number
    runtime?: 'edge' | 'experimental-edge' | 'nodejs' | string // necessary unless config is exported as const
    regions?: string[]
  }
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/admin/questions/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/questions">> = Specific
  const handler = {} as typeof import("../../src/app/admin/questions/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/analytics/events/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/analytics/events">> = Specific
  const handler = {} as typeof import("../../src/app/analytics/events/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/analytics/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/analytics">> = Specific
  const handler = {} as typeof import("../../src/app/analytics/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/assessments/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/assessments">> = Specific
  const handler = {} as typeof import("../../src/app/assessments/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/auth/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth">> = Specific
  const handler = {} as typeof import("../../src/app/auth/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/auth/signin/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/signin">> = Specific
  const handler = {} as typeof import("../../src/app/auth/signin/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/auth/signup/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/signup">> = Specific
  const handler = {} as typeof import("../../src/app/auth/signup/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/beginner/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/beginner">> = Specific
  const handler = {} as typeof import("../../src/app/beginner/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/color-test/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/color-test">> = Specific
  const handler = {} as typeof import("../../src/app/color-test/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/daily-review/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/daily-review">> = Specific
  const handler = {} as typeof import("../../src/app/daily-review/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../src/app/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/domains/[domain]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/domains/[domain]">> = Specific
  const handler = {} as typeof import("../../src/app/domains/[domain]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/drills/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/drills">> = Specific
  const handler = {} as typeof import("../../src/app/drills/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/exam/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/exam">> = Specific
  const handler = {} as typeof import("../../src/app/exam/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/flashcards/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/flashcards">> = Specific
  const handler = {} as typeof import("../../src/app/flashcards/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/guides/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/guides">> = Specific
  const handler = {} as typeof import("../../src/app/guides/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/kb/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/kb">> = Specific
  const handler = {} as typeof import("../../src/app/kb/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/labs/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/labs">> = Specific
  const handler = {} as typeof import("../../src/app/labs/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/learn/[slug]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/learn/[slug]">> = Specific
  const handler = {} as typeof import("../../src/app/learn/[slug]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/learn/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/learn">> = Specific
  const handler = {} as typeof import("../../src/app/learn/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/learn/query-builder/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/learn/query-builder">> = Specific
  const handler = {} as typeof import("../../src/app/learn/query-builder/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/lighthouse-test/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/lighthouse-test">> = Specific
  const handler = {} as typeof import("../../src/app/lighthouse-test/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/mdx-test/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/mdx-test">> = Specific
  const handler = {} as typeof import("../../src/app/mdx-test/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/mock-exam/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/mock-exam">> = Specific
  const handler = {} as typeof import("../../src/app/mock-exam/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/mock/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/mock">> = Specific
  const handler = {} as typeof import("../../src/app/mock/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/modules/[slug]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/modules/[slug]">> = Specific
  const handler = {} as typeof import("../../src/app/modules/[slug]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/modules/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/modules">> = Specific
  const handler = {} as typeof import("../../src/app/modules/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/modules/server/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/modules/server">> = Specific
  const handler = {} as typeof import("../../src/app/modules/server/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/notes/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/notes">> = Specific
  const handler = {} as typeof import("../../src/app/notes/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/perf-test/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/perf-test">> = Specific
  const handler = {} as typeof import("../../src/app/perf-test/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/practice/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/practice">> = Specific
  const handler = {} as typeof import("../../src/app/practice/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/pricing/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/pricing">> = Specific
  const handler = {} as typeof import("../../src/app/pricing/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/profile/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/profile">> = Specific
  const handler = {} as typeof import("../../src/app/profile/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/progress/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/progress">> = Specific
  const handler = {} as typeof import("../../src/app/progress/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/review/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/review">> = Specific
  const handler = {} as typeof import("../../src/app/review/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/search/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/search">> = Specific
  const handler = {} as typeof import("../../src/app/search/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings">> = Specific
  const handler = {} as typeof import("../../src/app/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/simple/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/simple">> = Specific
  const handler = {} as typeof import("../../src/app/simple/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/simulator/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/simulator">> = Specific
  const handler = {} as typeof import("../../src/app/simulator/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/study/[domain]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/study/[domain]">> = Specific
  const handler = {} as typeof import("../../src/app/study/[domain]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/study/labs/[...slug]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/study/labs/[...slug]">> = Specific
  const handler = {} as typeof import("../../src/app/study/labs/[...slug]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/study/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/study">> = Specific
  const handler = {} as typeof import("../../src/app/study/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/study/review/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/study/review">> = Specific
  const handler = {} as typeof import("../../src/app/study/review/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/team/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/team">> = Specific
  const handler = {} as typeof import("../../src/app/team/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/test-db/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/test-db">> = Specific
  const handler = {} as typeof import("../../src/app/test-db/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/test-mdx/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/test-mdx">> = Specific
  const handler = {} as typeof import("../../src/app/test-mdx/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/test-minimal/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/test-minimal">> = Specific
  const handler = {} as typeof import("../../src/app/test-minimal/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/test/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/test">> = Specific
  const handler = {} as typeof import("../../src/app/test/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/videos/[slug]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/videos/[slug]">> = Specific
  const handler = {} as typeof import("../../src/app/videos/[slug]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/videos/admin/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/videos/admin">> = Specific
  const handler = {} as typeof import("../../src/app/videos/admin/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/videos/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/videos">> = Specific
  const handler = {} as typeof import("../../src/app/videos/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/welcome/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/welcome">> = Specific
  const handler = {} as typeof import("../../src/app/welcome/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/flashcards/debug/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/flashcards/debug">> = Specific
  const handler = {} as typeof import("../../src/app/api/flashcards/debug/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/flashcards/public/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/flashcards/public">> = Specific
  const handler = {} as typeof import("../../src/app/api/flashcards/public/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/flashcards/seed/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/flashcards/seed">> = Specific
  const handler = {} as typeof import("../../src/app/api/flashcards/seed/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/flashcards/test/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/flashcards/test">> = Specific
  const handler = {} as typeof import("../../src/app/api/flashcards/test/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/health/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/health">> = Specific
  const handler = {} as typeof import("../../src/app/api/health/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/sim-eval/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/sim-eval">> = Specific
  const handler = {} as typeof import("../../src/app/api/sim-eval/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/sim-meta/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/sim-meta">> = Specific
  const handler = {} as typeof import("../../src/app/api/sim-meta/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/sim-run/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/sim-run">> = Specific
  const handler = {} as typeof import("../../src/app/api/sim-run/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/sim-save/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/sim-save">> = Specific
  const handler = {} as typeof import("../../src/app/api/sim-save/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/sim-saved/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/sim-saved">> = Specific
  const handler = {} as typeof import("../../src/app/api/sim-saved/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/stripe/create-checkout-session/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/stripe/create-checkout-session">> = Specific
  const handler = {} as typeof import("../../src/app/api/stripe/create-checkout-session/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/study/content/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/study/content">> = Specific
  const handler = {} as typeof import("../../src/app/api/study/content/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/pages/_error.tsx
{
  type __IsExpected<Specific extends PagesPageConfig> = Specific
  const handler = {} as typeof import("../../src/pages/_error.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}



// Validate ../../src/app/daily-review/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/daily-review">> = Specific
  const handler = {} as typeof import("../../src/app/daily-review/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/learn/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/learn">> = Specific
  const handler = {} as typeof import("../../src/app/learn/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/learning/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/learning">> = Specific
  const handler = {} as typeof import("../../src/app/learning/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/study/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/study">> = Specific
  const handler = {} as typeof import("../../src/app/study/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/test-minimal/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/test-minimal">> = Specific
  const handler = {} as typeof import("../../src/app/test-minimal/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
